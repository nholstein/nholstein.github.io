var searchIndex={};
searchIndex["bare_metal"] = {"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[3,"CriticalSection","","Critical section token",null,null],[3,"Mutex","","A \"mutex\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[["self"]],["u8"]]],[11,"new","","Creates a new peripheral",1,[[["usize"]],["self"]]],[11,"borrow","","Borrows the peripheral for the duration of a critical…",1,[[["criticalsection"],["self"]],["t"]]],[11,"get","","Returns a pointer to the register block",1,[[["self"]]]],[11,"new","","Creates a critical section token",2,[[],["self"]]],[11,"new","","Creates a new mutex",3,[[["t"]],["self"]]],[11,"borrow","","Borrows the data for the duration of the critical section",3,[[["criticalsection"],["self"]],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[8,"Nr"],[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"]]};
searchIndex["bit_field"] = {"doc":"Provides the abstraction of a bit field, which allows for…","i":[[8,"BitField","bit_field","A generic trait which provides methods for extracting and…",null,null],[10,"bit_length","","Returns the length, eg number of bits, in this bit field.",0,[[],["usize"]]],[10,"get_bit","","Obtains the bit at the index `bit`; note that index 0 is…",0,[[["self"],["usize"]],["bool"]]],[10,"get_bits","","Obtains the range of bits specified by `range`; note that…",0,[[["range",["usize"]],["self"],["usize"]],["self"]]],[10,"set_bit","","Sets the bit at the index `bit` to the value `value`…",0,[[["self"],["usize"],["bool"]],["self"]]],[10,"set_bits","","Sets the range of bits defined by the range `range` to the…",0,[[["self"],["usize"],["range",["usize"]]],["self"]]],[8,"BitArray","","",null,null],[10,"bit_length","","Returns the length, eg number of bits, in this bit array.",1,[[["self"]],["usize"]]],[10,"get_bit","","Obtains the bit at the index `bit`; note that index 0 is…",1,[[["self"],["usize"]],["bool"]]],[10,"get_bits","","Obtains the range of bits specified by `range`; note that…",1,[[["range",["usize"]],["self"],["usize"]],["t"]]],[10,"set_bit","","Sets the bit at the index `bit` to the value `value`…",1,[[["self"],["usize"],["bool"]]]],[10,"set_bits","","Sets the range of bits defined by the range `range` to the…",1,[[["usize"],["range",["usize"]],["self"],["t"]]]]],"p":[[8,"BitField"],[8,"BitArray"]]};
searchIndex["earlgrey_registers"] = {"doc":"Peripheral access API for EARLGREY microcontrollers…","i":[[3,"UART","earlgrey_registers","uart",null,null],[3,"GPIO","","gpio",null,null],[3,"SPI_DEVICE","","spi_device",null,null],[3,"FLASH_CTRL","","flash_ctrl",null,null],[3,"RV_TIMER","","rv_timer",null,null],[3,"AES","","aes",null,null],[3,"HMAC","","hmac",null,null],[3,"RV_PLIC","","rv_plic",null,null],[3,"PINMUX","","pinmux",null,null],[3,"ALERT_HANDLER","","alert_handler",null,null],[3,"NMI_GEN","","nmi_gen",null,null],[3,"Peripherals","","All the peripherals",null,null],[12,"UART","","UART",0,null],[12,"GPIO","","GPIO",0,null],[12,"SPI_DEVICE","","SPI_DEVICE",0,null],[12,"FLASH_CTRL","","FLASH_CTRL",0,null],[12,"RV_TIMER","","RV_TIMER",0,null],[12,"AES","","AES",0,null],[12,"HMAC","","HMAC",0,null],[12,"RV_PLIC","","RV_PLIC",0,null],[12,"PINMUX","","PINMUX",0,null],[12,"ALERT_HANDLER","","ALERT_HANDLER",0,null],[12,"NMI_GEN","","NMI_GEN",0,null],[4,"Interrupt","","Enumeration of all the interrupts",null,null],[13,"ESC0","","0 - esc0",1,null],[13,"ESC1","","1 - esc1",1,null],[13,"ESC2","","2 - esc2",1,null],[13,"ESC3","","3 - esc3",1,null],[13,"OP_DONE","","4 - op_done",1,null],[13,"OP_ERROR","","5 - op_error",1,null],[13,"RX_TIMEOUT","","6 - rx_timeout",1,null],[13,"RX_PARITY_ERR","","7 - rx_parity_err",1,null],[11,"try_from","","",1,[[["u8"]],[["tryfrominterrupterror"],["result",["tryfrominterrupterror"]]]]],[0,"generic","","Common register and bit access and modify traits",null,null],[3,"Reg","earlgrey_registers::generic","This structure provides volatile access to register",null,null],[3,"R","","Register/field reader",null,null],[3,"W","","Register writer",null,null],[4,"Variant","","Used if enumerated values cover not the whole range",null,null],[13,"Val","","Expected variant",2,null],[13,"Res","","Raw bits",2,null],[8,"Readable","","This trait shows that register has `read` method",null,null],[8,"Writable","","This trait shows that register has `write`,…",null,null],[8,"ResetValue","","Reset value of the register",null,null],[16,"Type","","Register size",3,null],[10,"reset_value","","Reset value of the register",3,[[]]],[11,"read","","Reads the contents of `Readable` register",4,[[["self"]],["r"]]],[11,"reset","","Writes the reset value to `Writable` register",4,[[["self"]]]],[11,"write","","Writes bits to `Writable` register",4,[[["self"],["f"]]]],[11,"write_with_zero","","Writes Zero to `Writable` register",4,[[["self"],["f"]]]],[11,"modify","","Modifies the contents of the register",4,[[["self"],["f"]]]],[11,"bits","","Read raw bits from register/field",5,[[["self"]],["u"]]],[11,"bit","","Value of the field as raw bits",5,[[["self"]],["bool"]]],[11,"bit_is_clear","","Returns `true` if the bit is clear (0)",5,[[["self"]],["bool"]]],[11,"bit_is_set","","Returns `true` if the bit is set (1)",5,[[["self"]],["bool"]]],[11,"bits","","Writes raw bits to the register",6,[[["u"],["self"]],["self"]]],[0,"uart","earlgrey_registers","uart",null,null],[3,"RegisterBlock","earlgrey_registers::uart","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",7,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",7,null],[12,"intr_test","","0x08 - Interrupt Test Register",7,null],[12,"ctrl","","0x0c - UART control register",7,null],[12,"status","","0x10 - UART live status register",7,null],[12,"rdata","","0x14 - UART read data",7,null],[12,"wdata","","0x18 - UART write data",7,null],[12,"fifo_ctrl","","0x1c - UART FIFO control register",7,null],[12,"fifo_status","","0x20 - UART FIFO status register",7,null],[12,"ovrd","","0x24 - TX pin override control. Gives direct SW control…",7,null],[12,"val","","0x28 - UART oversampled values",7,null],[12,"timeout_ctrl","","0x2c - UART RX timeout control",7,null],[0,"intr_state","","Interrupt State Register",null,null],[3,"TX_WATERMARK_W","earlgrey_registers::uart::intr_state","Write proxy for field `tx_watermark`",null,null],[3,"RX_WATERMARK_W","","Write proxy for field `rx_watermark`",null,null],[3,"TX_EMPTY_W","","Write proxy for field `tx_empty`",null,null],[3,"RX_OVERFLOW_W","","Write proxy for field `rx_overflow`",null,null],[3,"RX_FRAME_ERR_W","","Write proxy for field `rx_frame_err`",null,null],[3,"RX_BREAK_ERR_W","","Write proxy for field `rx_break_err`",null,null],[3,"RX_TIMEOUT_W","","Write proxy for field `rx_timeout`",null,null],[3,"RX_PARITY_ERR_W","","Write proxy for field `rx_parity_err`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"TX_WATERMARK_R","","Reader of field `tx_watermark`",null,null],[6,"RX_WATERMARK_R","","Reader of field `rx_watermark`",null,null],[6,"TX_EMPTY_R","","Reader of field `tx_empty`",null,null],[6,"RX_OVERFLOW_R","","Reader of field `rx_overflow`",null,null],[6,"RX_FRAME_ERR_R","","Reader of field `rx_frame_err`",null,null],[6,"RX_BREAK_ERR_R","","Reader of field `rx_break_err`",null,null],[6,"RX_TIMEOUT_R","","Reader of field `rx_timeout`",null,null],[6,"RX_PARITY_ERR_R","","Reader of field `rx_parity_err`",null,null],[11,"set_bit","","Sets the field bit",8,[[],["w"]]],[11,"clear_bit","","Clears the field bit",8,[[],["w"]]],[11,"bit","","Writes raw bits to the field",8,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",9,[[],["w"]]],[11,"clear_bit","","Clears the field bit",9,[[],["w"]]],[11,"bit","","Writes raw bits to the field",9,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",10,[[],["w"]]],[11,"clear_bit","","Clears the field bit",10,[[],["w"]]],[11,"bit","","Writes raw bits to the field",10,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",11,[[],["w"]]],[11,"clear_bit","","Clears the field bit",11,[[],["w"]]],[11,"bit","","Writes raw bits to the field",11,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",12,[[],["w"]]],[11,"clear_bit","","Clears the field bit",12,[[],["w"]]],[11,"bit","","Writes raw bits to the field",12,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",13,[[],["w"]]],[11,"clear_bit","","Clears the field bit",13,[[],["w"]]],[11,"bit","","Writes raw bits to the field",13,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",14,[[],["w"]]],[11,"clear_bit","","Clears the field bit",14,[[],["w"]]],[11,"bit","","Writes raw bits to the field",14,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",15,[[],["w"]]],[11,"clear_bit","","Clears the field bit",15,[[],["w"]]],[11,"bit","","Writes raw bits to the field",15,[[["bool"]],["w"]]],[11,"tx_watermark","","Bit 0 - raised if the transmit FIFO is past the high-water…",16,[[["self"]],["tx_watermark_r"]]],[11,"rx_watermark","","Bit 1 - raised if the receive FIFO is past the high-water…",16,[[["self"]],["rx_watermark_r"]]],[11,"tx_empty","","Bit 2 - raised if the transmit FIFO has emptied.",16,[[["self"]],["tx_empty_r"]]],[11,"rx_overflow","","Bit 3 - raised if the receive FIFO has overflowed.",16,[[["self"]],["rx_overflow_r"]]],[11,"rx_frame_err","","Bit 4 - raised if a framing error has been detected on…",16,[[["self"]],["rx_frame_err_r"]]],[11,"rx_break_err","","Bit 5 - raised if break condition has been detected on…",16,[[["self"]],["rx_break_err_r"]]],[11,"rx_timeout","","Bit 6 - raised if RX FIFO has characters remaining in the…",16,[[["self"]],["rx_timeout_r"]]],[11,"rx_parity_err","","Bit 7 - raised if the receiver has detected a parity error.",16,[[["self"]],["rx_parity_err_r"]]],[11,"tx_watermark","","Bit 0 - raised if the transmit FIFO is past the high-water…",17,[[["self"]],["tx_watermark_w"]]],[11,"rx_watermark","","Bit 1 - raised if the receive FIFO is past the high-water…",17,[[["self"]],["rx_watermark_w"]]],[11,"tx_empty","","Bit 2 - raised if the transmit FIFO has emptied.",17,[[["self"]],["tx_empty_w"]]],[11,"rx_overflow","","Bit 3 - raised if the receive FIFO has overflowed.",17,[[["self"]],["rx_overflow_w"]]],[11,"rx_frame_err","","Bit 4 - raised if a framing error has been detected on…",17,[[["self"]],["rx_frame_err_w"]]],[11,"rx_break_err","","Bit 5 - raised if break condition has been detected on…",17,[[["self"]],["rx_break_err_w"]]],[11,"rx_timeout","","Bit 6 - raised if RX FIFO has characters remaining in the…",17,[[["self"]],["rx_timeout_w"]]],[11,"rx_parity_err","","Bit 7 - raised if the receiver has detected a parity error.",17,[[["self"]],["rx_parity_err_w"]]],[0,"intr_enable","earlgrey_registers::uart","Interrupt Enable Register",null,null],[3,"TX_WATERMARK_W","earlgrey_registers::uart::intr_enable","Write proxy for field `tx_watermark`",null,null],[3,"RX_WATERMARK_W","","Write proxy for field `rx_watermark`",null,null],[3,"TX_EMPTY_W","","Write proxy for field `tx_empty`",null,null],[3,"RX_OVERFLOW_W","","Write proxy for field `rx_overflow`",null,null],[3,"RX_FRAME_ERR_W","","Write proxy for field `rx_frame_err`",null,null],[3,"RX_BREAK_ERR_W","","Write proxy for field `rx_break_err`",null,null],[3,"RX_TIMEOUT_W","","Write proxy for field `rx_timeout`",null,null],[3,"RX_PARITY_ERR_W","","Write proxy for field `rx_parity_err`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"TX_WATERMARK_R","","Reader of field `tx_watermark`",null,null],[6,"RX_WATERMARK_R","","Reader of field `rx_watermark`",null,null],[6,"TX_EMPTY_R","","Reader of field `tx_empty`",null,null],[6,"RX_OVERFLOW_R","","Reader of field `rx_overflow`",null,null],[6,"RX_FRAME_ERR_R","","Reader of field `rx_frame_err`",null,null],[6,"RX_BREAK_ERR_R","","Reader of field `rx_break_err`",null,null],[6,"RX_TIMEOUT_R","","Reader of field `rx_timeout`",null,null],[6,"RX_PARITY_ERR_R","","Reader of field `rx_parity_err`",null,null],[11,"set_bit","","Sets the field bit",18,[[],["w"]]],[11,"clear_bit","","Clears the field bit",18,[[],["w"]]],[11,"bit","","Writes raw bits to the field",18,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",19,[[],["w"]]],[11,"clear_bit","","Clears the field bit",19,[[],["w"]]],[11,"bit","","Writes raw bits to the field",19,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",20,[[],["w"]]],[11,"clear_bit","","Clears the field bit",20,[[],["w"]]],[11,"bit","","Writes raw bits to the field",20,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",21,[[],["w"]]],[11,"clear_bit","","Clears the field bit",21,[[],["w"]]],[11,"bit","","Writes raw bits to the field",21,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",22,[[],["w"]]],[11,"clear_bit","","Clears the field bit",22,[[],["w"]]],[11,"bit","","Writes raw bits to the field",22,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",23,[[],["w"]]],[11,"clear_bit","","Clears the field bit",23,[[],["w"]]],[11,"bit","","Writes raw bits to the field",23,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",24,[[],["w"]]],[11,"clear_bit","","Clears the field bit",24,[[],["w"]]],[11,"bit","","Writes raw bits to the field",24,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",25,[[],["w"]]],[11,"clear_bit","","Clears the field bit",25,[[],["w"]]],[11,"bit","","Writes raw bits to the field",25,[[["bool"]],["w"]]],[11,"tx_watermark","","Bit 0 - Enable interrupt when !!INTR_STATE.tx_watermark is…",26,[[["self"]],["tx_watermark_r"]]],[11,"rx_watermark","","Bit 1 - Enable interrupt when !!INTR_STATE.rx_watermark is…",26,[[["self"]],["rx_watermark_r"]]],[11,"tx_empty","","Bit 2 - Enable interrupt when !!INTR_STATE.tx_empty is set",26,[[["self"]],["tx_empty_r"]]],[11,"rx_overflow","","Bit 3 - Enable interrupt when !!INTR_STATE.rx_overflow is…",26,[[["self"]],["rx_overflow_r"]]],[11,"rx_frame_err","","Bit 4 - Enable interrupt when !!INTR_STATE.rx_frame_err is…",26,[[["self"]],["rx_frame_err_r"]]],[11,"rx_break_err","","Bit 5 - Enable interrupt when !!INTR_STATE.rx_break_err is…",26,[[["self"]],["rx_break_err_r"]]],[11,"rx_timeout","","Bit 6 - Enable interrupt when !!INTR_STATE.rx_timeout is set",26,[[["self"]],["rx_timeout_r"]]],[11,"rx_parity_err","","Bit 7 - Enable interrupt when !!INTR_STATE.rx_parity_err…",26,[[["self"]],["rx_parity_err_r"]]],[11,"tx_watermark","","Bit 0 - Enable interrupt when !!INTR_STATE.tx_watermark is…",27,[[["self"]],["tx_watermark_w"]]],[11,"rx_watermark","","Bit 1 - Enable interrupt when !!INTR_STATE.rx_watermark is…",27,[[["self"]],["rx_watermark_w"]]],[11,"tx_empty","","Bit 2 - Enable interrupt when !!INTR_STATE.tx_empty is set",27,[[["self"]],["tx_empty_w"]]],[11,"rx_overflow","","Bit 3 - Enable interrupt when !!INTR_STATE.rx_overflow is…",27,[[["self"]],["rx_overflow_w"]]],[11,"rx_frame_err","","Bit 4 - Enable interrupt when !!INTR_STATE.rx_frame_err is…",27,[[["self"]],["rx_frame_err_w"]]],[11,"rx_break_err","","Bit 5 - Enable interrupt when !!INTR_STATE.rx_break_err is…",27,[[["self"]],["rx_break_err_w"]]],[11,"rx_timeout","","Bit 6 - Enable interrupt when !!INTR_STATE.rx_timeout is set",27,[[["self"]],["rx_timeout_w"]]],[11,"rx_parity_err","","Bit 7 - Enable interrupt when !!INTR_STATE.rx_parity_err…",27,[[["self"]],["rx_parity_err_w"]]],[0,"intr_test","earlgrey_registers::uart","Interrupt Test Register",null,null],[3,"TX_WATERMARK_W","earlgrey_registers::uart::intr_test","Write proxy for field `tx_watermark`",null,null],[3,"RX_WATERMARK_W","","Write proxy for field `rx_watermark`",null,null],[3,"TX_EMPTY_W","","Write proxy for field `tx_empty`",null,null],[3,"RX_OVERFLOW_W","","Write proxy for field `rx_overflow`",null,null],[3,"RX_FRAME_ERR_W","","Write proxy for field `rx_frame_err`",null,null],[3,"RX_BREAK_ERR_W","","Write proxy for field `rx_break_err`",null,null],[3,"RX_TIMEOUT_W","","Write proxy for field `rx_timeout`",null,null],[3,"RX_PARITY_ERR_W","","Write proxy for field `rx_parity_err`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"set_bit","","Sets the field bit",28,[[],["w"]]],[11,"clear_bit","","Clears the field bit",28,[[],["w"]]],[11,"bit","","Writes raw bits to the field",28,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",29,[[],["w"]]],[11,"clear_bit","","Clears the field bit",29,[[],["w"]]],[11,"bit","","Writes raw bits to the field",29,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",30,[[],["w"]]],[11,"clear_bit","","Clears the field bit",30,[[],["w"]]],[11,"bit","","Writes raw bits to the field",30,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",31,[[],["w"]]],[11,"clear_bit","","Clears the field bit",31,[[],["w"]]],[11,"bit","","Writes raw bits to the field",31,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",32,[[],["w"]]],[11,"clear_bit","","Clears the field bit",32,[[],["w"]]],[11,"bit","","Writes raw bits to the field",32,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",33,[[],["w"]]],[11,"clear_bit","","Clears the field bit",33,[[],["w"]]],[11,"bit","","Writes raw bits to the field",33,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",34,[[],["w"]]],[11,"clear_bit","","Clears the field bit",34,[[],["w"]]],[11,"bit","","Writes raw bits to the field",34,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",35,[[],["w"]]],[11,"clear_bit","","Clears the field bit",35,[[],["w"]]],[11,"bit","","Writes raw bits to the field",35,[[["bool"]],["w"]]],[11,"tx_watermark","","Bit 0 - Write 1 to force !!INTR_STATE.tx_watermark to 1",36,[[["self"]],["tx_watermark_w"]]],[11,"rx_watermark","","Bit 1 - Write 1 to force !!INTR_STATE.rx_watermark to 1",36,[[["self"]],["rx_watermark_w"]]],[11,"tx_empty","","Bit 2 - Write 1 to force !!INTR_STATE.tx_empty to 1",36,[[["self"]],["tx_empty_w"]]],[11,"rx_overflow","","Bit 3 - Write 1 to force !!INTR_STATE.rx_overflow to 1",36,[[["self"]],["rx_overflow_w"]]],[11,"rx_frame_err","","Bit 4 - Write 1 to force !!INTR_STATE.rx_frame_err to 1",36,[[["self"]],["rx_frame_err_w"]]],[11,"rx_break_err","","Bit 5 - Write 1 to force !!INTR_STATE.rx_break_err to 1",36,[[["self"]],["rx_break_err_w"]]],[11,"rx_timeout","","Bit 6 - Write 1 to force !!INTR_STATE.rx_timeout to 1",36,[[["self"]],["rx_timeout_w"]]],[11,"rx_parity_err","","Bit 7 - Write 1 to force !!INTR_STATE.rx_parity_err to 1",36,[[["self"]],["rx_parity_err_w"]]],[0,"ctrl","earlgrey_registers::uart","UART control register",null,null],[3,"TX_W","earlgrey_registers::uart::ctrl","Write proxy for field `TX`",null,null],[3,"RX_W","","Write proxy for field `RX`",null,null],[3,"NF_W","","Write proxy for field `NF`",null,null],[3,"SLPBK_W","","Write proxy for field `SLPBK`",null,null],[3,"LLPBK_W","","Write proxy for field `LLPBK`",null,null],[3,"PARITY_EN_W","","Write proxy for field `PARITY_EN`",null,null],[3,"PARITY_ODD_W","","Write proxy for field `PARITY_ODD`",null,null],[3,"RXBLVL_W","","Write proxy for field `RXBLVL`",null,null],[3,"NCO_W","","Write proxy for field `NCO`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"TX_R","","Reader of field `TX`",null,null],[6,"RX_R","","Reader of field `RX`",null,null],[6,"NF_R","","Reader of field `NF`",null,null],[6,"SLPBK_R","","Reader of field `SLPBK`",null,null],[6,"LLPBK_R","","Reader of field `LLPBK`",null,null],[6,"PARITY_EN_R","","Reader of field `PARITY_EN`",null,null],[6,"PARITY_ODD_R","","Reader of field `PARITY_ODD`",null,null],[6,"RXBLVL_R","","Reader of field `RXBLVL`",null,null],[6,"NCO_R","","Reader of field `NCO`",null,null],[11,"set_bit","","Sets the field bit",37,[[],["w"]]],[11,"clear_bit","","Clears the field bit",37,[[],["w"]]],[11,"bit","","Writes raw bits to the field",37,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",38,[[],["w"]]],[11,"clear_bit","","Clears the field bit",38,[[],["w"]]],[11,"bit","","Writes raw bits to the field",38,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",39,[[],["w"]]],[11,"clear_bit","","Clears the field bit",39,[[],["w"]]],[11,"bit","","Writes raw bits to the field",39,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",40,[[],["w"]]],[11,"clear_bit","","Clears the field bit",40,[[],["w"]]],[11,"bit","","Writes raw bits to the field",40,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",41,[[],["w"]]],[11,"clear_bit","","Clears the field bit",41,[[],["w"]]],[11,"bit","","Writes raw bits to the field",41,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",42,[[],["w"]]],[11,"clear_bit","","Clears the field bit",42,[[],["w"]]],[11,"bit","","Writes raw bits to the field",42,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",43,[[],["w"]]],[11,"clear_bit","","Clears the field bit",43,[[],["w"]]],[11,"bit","","Writes raw bits to the field",43,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",44,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",45,[[["u16"]],["w"]]],[11,"tx","","Bit 0 - TX enable",46,[[["self"]],["tx_r"]]],[11,"rx","","Bit 1 - RX enable",46,[[["self"]],["rx_r"]]],[11,"nf","","Bit 2 - RX noise filter enable. If the noise filter is…",46,[[["self"]],["nf_r"]]],[11,"slpbk","","Bit 4 - System loopback enable. If this bit is turned on,…",46,[[["self"]],["slpbk_r"]]],[11,"llpbk","","Bit 5 - Line loopback enable. If this bit is turned on,…",46,[[["self"]],["llpbk_r"]]],[11,"parity_en","","Bit 6 - If true, parity is enabled in both RX and TX…",46,[[["self"]],["parity_en_r"]]],[11,"parity_odd","","Bit 7 - If PARITY_EN is true, this determines the type, 1…",46,[[["self"]],["parity_odd_r"]]],[11,"rxblvl","","Bits 8:9 - Trigger level for RX break detection. Sets the…",46,[[["self"]],["rxblvl_r"]]],[11,"nco","","Bits 16:31 - BAUD clock rate control.",46,[[["self"]],["nco_r"]]],[11,"tx","","Bit 0 - TX enable",47,[[["self"]],["tx_w"]]],[11,"rx","","Bit 1 - RX enable",47,[[["self"]],["rx_w"]]],[11,"nf","","Bit 2 - RX noise filter enable. If the noise filter is…",47,[[["self"]],["nf_w"]]],[11,"slpbk","","Bit 4 - System loopback enable. If this bit is turned on,…",47,[[["self"]],["slpbk_w"]]],[11,"llpbk","","Bit 5 - Line loopback enable. If this bit is turned on,…",47,[[["self"]],["llpbk_w"]]],[11,"parity_en","","Bit 6 - If true, parity is enabled in both RX and TX…",47,[[["self"]],["parity_en_w"]]],[11,"parity_odd","","Bit 7 - If PARITY_EN is true, this determines the type, 1…",47,[[["self"]],["parity_odd_w"]]],[11,"rxblvl","","Bits 8:9 - Trigger level for RX break detection. Sets the…",47,[[["self"]],["rxblvl_w"]]],[11,"nco","","Bits 16:31 - BAUD clock rate control.",47,[[["self"]],["nco_w"]]],[0,"status","earlgrey_registers::uart","UART live status register",null,null],[6,"R","earlgrey_registers::uart::status","Reader of register STATUS",null,null],[6,"TXFULL_R","","Reader of field `TXFULL`",null,null],[6,"RXFULL_R","","Reader of field `RXFULL`",null,null],[6,"TXEMPTY_R","","Reader of field `TXEMPTY`",null,null],[6,"TXIDLE_R","","Reader of field `TXIDLE`",null,null],[6,"RXIDLE_R","","Reader of field `RXIDLE`",null,null],[6,"RXEMPTY_R","","Reader of field `RXEMPTY`",null,null],[11,"txfull","","Bit 0 - TX buffer is full",48,[[["self"]],["txfull_r"]]],[11,"rxfull","","Bit 1 - RX buffer is full",48,[[["self"]],["rxfull_r"]]],[11,"txempty","","Bit 2 - TX FIFO is empty",48,[[["self"]],["txempty_r"]]],[11,"txidle","","Bit 3 - TX is idle",48,[[["self"]],["txidle_r"]]],[11,"rxidle","","Bit 4 - RX is idle",48,[[["self"]],["rxidle_r"]]],[11,"rxempty","","Bit 5 - RX FIFO is empty",48,[[["self"]],["rxempty_r"]]],[0,"rdata","earlgrey_registers::uart","UART read data",null,null],[6,"R","earlgrey_registers::uart::rdata","Reader of register RDATA",null,null],[0,"wdata","earlgrey_registers::uart","UART write data",null,null],[6,"W","earlgrey_registers::uart::wdata","Writer for register WDATA",null,null],[0,"fifo_ctrl","earlgrey_registers::uart","UART FIFO control register",null,null],[3,"RXRST_W","earlgrey_registers::uart::fifo_ctrl","Write proxy for field `RXRST`",null,null],[3,"TXRST_W","","Write proxy for field `TXRST`",null,null],[3,"RXILVL_W","","Write proxy for field `RXILVL`",null,null],[3,"TXILVL_W","","Write proxy for field `TXILVL`",null,null],[6,"R","","Reader of register FIFO_CTRL",null,null],[6,"W","","Writer for register FIFO_CTRL",null,null],[6,"RXILVL_R","","Reader of field `RXILVL`",null,null],[6,"TXILVL_R","","Reader of field `TXILVL`",null,null],[11,"set_bit","","Sets the field bit",49,[[],["w"]]],[11,"clear_bit","","Clears the field bit",49,[[],["w"]]],[11,"bit","","Writes raw bits to the field",49,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",50,[[],["w"]]],[11,"clear_bit","","Clears the field bit",50,[[],["w"]]],[11,"bit","","Writes raw bits to the field",50,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",51,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",52,[[["u8"]],["w"]]],[11,"rxilvl","","Bits 2:4 - Trigger level for RX interrupts. If the FIFO…",53,[[["self"]],["rxilvl_r"]]],[11,"txilvl","","Bits 5:6 - Trigger level for TX interrupts. If the FIFO…",53,[[["self"]],["txilvl_r"]]],[11,"rxrst","","Bit 0 - RX fifo reset. Write 1 to the register resets…",54,[[["self"]],["rxrst_w"]]],[11,"txrst","","Bit 1 - TX fifo reset. Write 1 to the register resets…",54,[[["self"]],["txrst_w"]]],[11,"rxilvl","","Bits 2:4 - Trigger level for RX interrupts. If the FIFO…",54,[[["self"]],["rxilvl_w"]]],[11,"txilvl","","Bits 5:6 - Trigger level for TX interrupts. If the FIFO…",54,[[["self"]],["txilvl_w"]]],[0,"fifo_status","earlgrey_registers::uart","UART FIFO status register",null,null],[6,"R","earlgrey_registers::uart::fifo_status","Reader of register FIFO_STATUS",null,null],[6,"TXLVL_R","","Reader of field `TXLVL`",null,null],[6,"RXLVL_R","","Reader of field `RXLVL`",null,null],[11,"txlvl","","Bits 0:5 - Current fill level of TX fifo",55,[[["self"]],["txlvl_r"]]],[11,"rxlvl","","Bits 16:21 - Current fill level of RX fifo",55,[[["self"]],["rxlvl_r"]]],[0,"ovrd","earlgrey_registers::uart","TX pin override control. Gives direct SW control over TX…",null,null],[3,"TXEN_W","earlgrey_registers::uart::ovrd","Write proxy for field `TXEN`",null,null],[3,"TXVAL_W","","Write proxy for field `TXVAL`",null,null],[6,"R","","Reader of register OVRD",null,null],[6,"W","","Writer for register OVRD",null,null],[6,"TXEN_R","","Reader of field `TXEN`",null,null],[6,"TXVAL_R","","Reader of field `TXVAL`",null,null],[11,"set_bit","","Sets the field bit",56,[[],["w"]]],[11,"clear_bit","","Clears the field bit",56,[[],["w"]]],[11,"bit","","Writes raw bits to the field",56,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",57,[[],["w"]]],[11,"clear_bit","","Clears the field bit",57,[[],["w"]]],[11,"bit","","Writes raw bits to the field",57,[[["bool"]],["w"]]],[11,"txen","","Bit 0 - Enable TX pin override control",58,[[["self"]],["txen_r"]]],[11,"txval","","Bit 1 - Write to set the value of the TX pin",58,[[["self"]],["txval_r"]]],[11,"txen","","Bit 0 - Enable TX pin override control",59,[[["self"]],["txen_w"]]],[11,"txval","","Bit 1 - Write to set the value of the TX pin",59,[[["self"]],["txval_w"]]],[0,"val","earlgrey_registers::uart","UART oversampled values",null,null],[6,"R","earlgrey_registers::uart::val","Reader of register VAL",null,null],[6,"RX_R","","Reader of field `RX`",null,null],[11,"rx","","Bits 0:15 - Last 16 oversampled values of RX. Most recent…",60,[[["self"]],["rx_r"]]],[0,"timeout_ctrl","earlgrey_registers::uart","UART RX timeout control",null,null],[3,"VAL_W","earlgrey_registers::uart::timeout_ctrl","Write proxy for field `VAL`",null,null],[3,"EN_W","","Write proxy for field `EN`",null,null],[6,"R","","Reader of register TIMEOUT_CTRL",null,null],[6,"W","","Writer for register TIMEOUT_CTRL",null,null],[6,"VAL_R","","Reader of field `VAL`",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[11,"bits","","Writes raw bits to the field",61,[[["u32"]],["w"]]],[11,"set_bit","","Sets the field bit",62,[[],["w"]]],[11,"clear_bit","","Clears the field bit",62,[[],["w"]]],[11,"bit","","Writes raw bits to the field",62,[[["bool"]],["w"]]],[11,"val","","Bits 0:23 - RX timeout value in UART bit times",63,[[["self"]],["val_r"]]],[11,"en","","Bit 31 - Enable RX timeout feature",63,[[["self"]],["en_r"]]],[11,"val","","Bits 0:23 - RX timeout value in UART bit times",64,[[["self"]],["val_w"]]],[11,"en","","Bit 31 - Enable RX timeout feature",64,[[["self"]],["en_w"]]],[6,"INTR_STATE","earlgrey_registers::uart","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[6,"CTRL","","UART control register",null,null],[6,"STATUS","","UART live status register",null,null],[6,"RDATA","","UART read data",null,null],[6,"WDATA","","UART write data",null,null],[6,"FIFO_CTRL","","UART FIFO control register",null,null],[6,"FIFO_STATUS","","UART FIFO status register",null,null],[6,"OVRD","","TX pin override control. Gives direct SW control over TX…",null,null],[6,"VAL","","UART oversampled values",null,null],[6,"TIMEOUT_CTRL","","UART RX timeout control",null,null],[0,"gpio","earlgrey_registers","gpio",null,null],[3,"RegisterBlock","earlgrey_registers::gpio","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",65,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",65,null],[12,"intr_test","","0x08 - Interrupt Test Register",65,null],[12,"data_in","","0x0c - GPIO Input data read value",65,null],[12,"direct_out","","0x10 - GPIO direct output data write value",65,null],[12,"masked_out_lower","","0x14 - GPIO write data lower with mask. Masked write for…",65,null],[12,"masked_out_upper","","0x18 - GPIO write data upper with mask. Masked write for…",65,null],[12,"direct_oe","","0x1c - GPIO Output Enable. Setting direct_oe[i] to 1…",65,null],[12,"masked_oe_lower","","0x20 - GPIO write Output Enable lower with mask. Masked…",65,null],[12,"masked_oe_upper","","0x24 - GPIO write Output Enable upper with mask. Masked…",65,null],[12,"intr_ctrl_en_rising","","0x28 - GPIO interrupt enable for GPIO, rising edge. If…",65,null],[12,"intr_ctrl_en_falling","","0x2c - GPIO interrupt enable for GPIO, falling edge. If…",65,null],[12,"intr_ctrl_en_lvlhigh","","0x30 - GPIO interrupt enable for GPIO, level high. If…",65,null],[12,"intr_ctrl_en_lvllow","","0x34 - GPIO interrupt enable for GPIO, level low. If…",65,null],[12,"ctrl_en_input_filter","","0x38 - filter enable for GPIO input bits. If…",65,null],[0,"intr_state","","Interrupt State Register",null,null],[3,"GPIO_W","earlgrey_registers::gpio::intr_state","Write proxy for field `gpio`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"GPIO_R","","Reader of field `gpio`",null,null],[11,"bits","","Writes raw bits to the field",66,[[["u32"]],["w"]]],[11,"gpio","","Bits 0:31 - raised if any of GPIO pin detects configured…",67,[[["self"]],["gpio_r"]]],[11,"gpio","","Bits 0:31 - raised if any of GPIO pin detects configured…",68,[[["self"]],["gpio_w"]]],[0,"intr_enable","earlgrey_registers::gpio","Interrupt Enable Register",null,null],[3,"GPIO_W","earlgrey_registers::gpio::intr_enable","Write proxy for field `gpio`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"GPIO_R","","Reader of field `gpio`",null,null],[11,"bits","","Writes raw bits to the field",69,[[["u32"]],["w"]]],[11,"gpio","","Bits 0:31 - Enable interrupt when corresponding bit in…",70,[[["self"]],["gpio_r"]]],[11,"gpio","","Bits 0:31 - Enable interrupt when corresponding bit in…",71,[[["self"]],["gpio_w"]]],[0,"intr_test","earlgrey_registers::gpio","Interrupt Test Register",null,null],[3,"GPIO_W","earlgrey_registers::gpio::intr_test","Write proxy for field `gpio`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"bits","","Writes raw bits to the field",72,[[["u32"]],["w"]]],[11,"gpio","","Bits 0:31 - Write 1 to force corresponding bit in…",73,[[["self"]],["gpio_w"]]],[0,"data_in","earlgrey_registers::gpio","GPIO Input data read value",null,null],[6,"R","earlgrey_registers::gpio::data_in","Reader of register DATA_IN",null,null],[0,"direct_out","earlgrey_registers::gpio","GPIO direct output data write value",null,null],[6,"R","earlgrey_registers::gpio::direct_out","Reader of register DIRECT_OUT",null,null],[6,"W","","Writer for register DIRECT_OUT",null,null],[0,"masked_out_lower","earlgrey_registers::gpio","GPIO write data lower with mask. Masked write for…",null,null],[3,"DATA_W","earlgrey_registers::gpio::masked_out_lower","Write proxy for field `data`",null,null],[3,"MASK_W","","Write proxy for field `mask`",null,null],[6,"R","","Reader of register MASKED_OUT_LOWER",null,null],[6,"W","","Writer for register MASKED_OUT_LOWER",null,null],[6,"DATA_R","","Reader of field `data`",null,null],[11,"bits","","Writes raw bits to the field",74,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",75,[[["u16"]],["w"]]],[11,"data","","Bits 0:15 - Write data value[15:0]. Value to write into…",76,[[["self"]],["data_r"]]],[11,"data","","Bits 0:15 - Write data value[15:0]. Value to write into…",77,[[["self"]],["data_w"]]],[11,"mask","","Bits 16:31 - Write data mask[15:0]. A value of 1 in…",77,[[["self"]],["mask_w"]]],[0,"masked_out_upper","earlgrey_registers::gpio","GPIO write data upper with mask. Masked write for…",null,null],[3,"DATA_W","earlgrey_registers::gpio::masked_out_upper","Write proxy for field `data`",null,null],[3,"MASK_W","","Write proxy for field `mask`",null,null],[6,"R","","Reader of register MASKED_OUT_UPPER",null,null],[6,"W","","Writer for register MASKED_OUT_UPPER",null,null],[6,"DATA_R","","Reader of field `data`",null,null],[11,"bits","","Writes raw bits to the field",78,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",79,[[["u16"]],["w"]]],[11,"data","","Bits 0:15 - Write data value[31:16]. Value to write into…",80,[[["self"]],["data_r"]]],[11,"data","","Bits 0:15 - Write data value[31:16]. Value to write into…",81,[[["self"]],["data_w"]]],[11,"mask","","Bits 16:31 - Write data mask[31:16]. A value of 1 in…",81,[[["self"]],["mask_w"]]],[0,"direct_oe","earlgrey_registers::gpio","GPIO Output Enable. Setting direct_oe[i] to 1 enables…",null,null],[6,"R","earlgrey_registers::gpio::direct_oe","Reader of register DIRECT_OE",null,null],[6,"W","","Writer for register DIRECT_OE",null,null],[0,"masked_oe_lower","earlgrey_registers::gpio","GPIO write Output Enable lower with mask. Masked write for…",null,null],[3,"DATA_W","earlgrey_registers::gpio::masked_oe_lower","Write proxy for field `data`",null,null],[3,"MASK_W","","Write proxy for field `mask`",null,null],[6,"R","","Reader of register MASKED_OE_LOWER",null,null],[6,"W","","Writer for register MASKED_OE_LOWER",null,null],[6,"DATA_R","","Reader of field `data`",null,null],[6,"MASK_R","","Reader of field `mask`",null,null],[11,"bits","","Writes raw bits to the field",82,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",83,[[["u16"]],["w"]]],[11,"data","","Bits 0:15 - Write OE value[15:0]. Value to write into…",84,[[["self"]],["data_r"]]],[11,"mask","","Bits 16:31 - Write OE mask[15:0]. A value of 1 in mask[i]…",84,[[["self"]],["mask_r"]]],[11,"data","","Bits 0:15 - Write OE value[15:0]. Value to write into…",85,[[["self"]],["data_w"]]],[11,"mask","","Bits 16:31 - Write OE mask[15:0]. A value of 1 in mask[i]…",85,[[["self"]],["mask_w"]]],[0,"masked_oe_upper","earlgrey_registers::gpio","GPIO write Output Enable upper with mask. Masked write for…",null,null],[3,"DATA_W","earlgrey_registers::gpio::masked_oe_upper","Write proxy for field `data`",null,null],[3,"MASK_W","","Write proxy for field `mask`",null,null],[6,"R","","Reader of register MASKED_OE_UPPER",null,null],[6,"W","","Writer for register MASKED_OE_UPPER",null,null],[6,"DATA_R","","Reader of field `data`",null,null],[6,"MASK_R","","Reader of field `mask`",null,null],[11,"bits","","Writes raw bits to the field",86,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",87,[[["u16"]],["w"]]],[11,"data","","Bits 0:15 - Write OE value[31:16]. Value to write into…",88,[[["self"]],["data_r"]]],[11,"mask","","Bits 16:31 - Write OE mask[31:16]. A value of 1 in mask[i]…",88,[[["self"]],["mask_r"]]],[11,"data","","Bits 0:15 - Write OE value[31:16]. Value to write into…",89,[[["self"]],["data_w"]]],[11,"mask","","Bits 16:31 - Write OE mask[31:16]. A value of 1 in mask[i]…",89,[[["self"]],["mask_w"]]],[0,"intr_ctrl_en_rising","earlgrey_registers::gpio","GPIO interrupt enable for GPIO, rising edge. If…",null,null],[6,"R","earlgrey_registers::gpio::intr_ctrl_en_rising","Reader of register INTR_CTRL_EN_RISING",null,null],[6,"W","","Writer for register INTR_CTRL_EN_RISING",null,null],[0,"intr_ctrl_en_falling","earlgrey_registers::gpio","GPIO interrupt enable for GPIO, falling edge. If…",null,null],[6,"R","earlgrey_registers::gpio::intr_ctrl_en_falling","Reader of register INTR_CTRL_EN_FALLING",null,null],[6,"W","","Writer for register INTR_CTRL_EN_FALLING",null,null],[0,"intr_ctrl_en_lvlhigh","earlgrey_registers::gpio","GPIO interrupt enable for GPIO, level high. If…",null,null],[6,"R","earlgrey_registers::gpio::intr_ctrl_en_lvlhigh","Reader of register INTR_CTRL_EN_LVLHIGH",null,null],[6,"W","","Writer for register INTR_CTRL_EN_LVLHIGH",null,null],[0,"intr_ctrl_en_lvllow","earlgrey_registers::gpio","GPIO interrupt enable for GPIO, level low. If…",null,null],[6,"R","earlgrey_registers::gpio::intr_ctrl_en_lvllow","Reader of register INTR_CTRL_EN_LVLLOW",null,null],[6,"W","","Writer for register INTR_CTRL_EN_LVLLOW",null,null],[0,"ctrl_en_input_filter","earlgrey_registers::gpio","filter enable for GPIO input bits. If…",null,null],[6,"R","earlgrey_registers::gpio::ctrl_en_input_filter","Reader of register CTRL_EN_INPUT_FILTER",null,null],[6,"W","","Writer for register CTRL_EN_INPUT_FILTER",null,null],[6,"INTR_STATE","earlgrey_registers::gpio","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[6,"DATA_IN","","GPIO Input data read value",null,null],[6,"DIRECT_OUT","","GPIO direct output data write value",null,null],[6,"MASKED_OUT_LOWER","","GPIO write data lower with mask. Masked write for…",null,null],[6,"MASKED_OUT_UPPER","","GPIO write data upper with mask. Masked write for…",null,null],[6,"DIRECT_OE","","GPIO Output Enable. Setting direct_oe[i] to 1 enables…",null,null],[6,"MASKED_OE_LOWER","","GPIO write Output Enable lower with mask. Masked write for…",null,null],[6,"MASKED_OE_UPPER","","GPIO write Output Enable upper with mask. Masked write for…",null,null],[6,"INTR_CTRL_EN_RISING","","GPIO interrupt enable for GPIO, rising edge. If…",null,null],[6,"INTR_CTRL_EN_FALLING","","GPIO interrupt enable for GPIO, falling edge. If…",null,null],[6,"INTR_CTRL_EN_LVLHIGH","","GPIO interrupt enable for GPIO, level high. If…",null,null],[6,"INTR_CTRL_EN_LVLLOW","","GPIO interrupt enable for GPIO, level low. If…",null,null],[6,"CTRL_EN_INPUT_FILTER","","filter enable for GPIO input bits. If…",null,null],[0,"spi_device","earlgrey_registers","spi_device",null,null],[3,"RegisterBlock","earlgrey_registers::spi_device","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",90,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",90,null],[12,"intr_test","","0x08 - Interrupt Test Register",90,null],[12,"control","","0x0c - Control register",90,null],[12,"cfg","","0x10 - Configuration Register",90,null],[12,"fifo_level","","0x14 - RX/ TX FIFO levels.",90,null],[12,"async_fifo_level","","0x18 - RX/ TX Async FIFO levels between main clk and spi…",90,null],[12,"status","","0x1c - SPI Device status register",90,null],[12,"rxf_ptr","","0x20 - Receiver FIFO (SRAM) pointers",90,null],[12,"txf_ptr","","0x24 - Transmitter FIFO (SRAM) pointers",90,null],[12,"rxf_addr","","0x28 - Receiver FIFO (SRAM) Addresses",90,null],[12,"txf_addr","","0x2c - Transmitter FIFO (SRAM) Addresses",90,null],[12,"buffer","","0x800 - SPI internal 2kB buffer. This buffer is shared by…",90,null],[0,"intr_state","","Interrupt State Register",null,null],[3,"RXF_W","earlgrey_registers::spi_device::intr_state","Write proxy for field `rxf`",null,null],[3,"RXLVL_W","","Write proxy for field `rxlvl`",null,null],[3,"TXLVL_W","","Write proxy for field `txlvl`",null,null],[3,"RXERR_W","","Write proxy for field `rxerr`",null,null],[3,"RXOVERFLOW_W","","Write proxy for field `rxoverflow`",null,null],[3,"TXUNDERFLOW_W","","Write proxy for field `txunderflow`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"RXF_R","","Reader of field `rxf`",null,null],[6,"RXLVL_R","","Reader of field `rxlvl`",null,null],[6,"TXLVL_R","","Reader of field `txlvl`",null,null],[6,"RXERR_R","","Reader of field `rxerr`",null,null],[6,"RXOVERFLOW_R","","Reader of field `rxoverflow`",null,null],[6,"TXUNDERFLOW_R","","Reader of field `txunderflow`",null,null],[11,"set_bit","","Sets the field bit",91,[[],["w"]]],[11,"clear_bit","","Clears the field bit",91,[[],["w"]]],[11,"bit","","Writes raw bits to the field",91,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",92,[[],["w"]]],[11,"clear_bit","","Clears the field bit",92,[[],["w"]]],[11,"bit","","Writes raw bits to the field",92,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",93,[[],["w"]]],[11,"clear_bit","","Clears the field bit",93,[[],["w"]]],[11,"bit","","Writes raw bits to the field",93,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",94,[[],["w"]]],[11,"clear_bit","","Clears the field bit",94,[[],["w"]]],[11,"bit","","Writes raw bits to the field",94,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",95,[[],["w"]]],[11,"clear_bit","","Clears the field bit",95,[[],["w"]]],[11,"bit","","Writes raw bits to the field",95,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",96,[[],["w"]]],[11,"clear_bit","","Clears the field bit",96,[[],["w"]]],[11,"bit","","Writes raw bits to the field",96,[[["bool"]],["w"]]],[11,"rxf","","Bit 0 - RX SRAM FIFO Full",97,[[["self"]],["rxf_r"]]],[11,"rxlvl","","Bit 1 - RX SRAM FIFO is above the level",97,[[["self"]],["rxlvl_r"]]],[11,"txlvl","","Bit 2 - TX SRAM FIFO is under the level",97,[[["self"]],["txlvl_r"]]],[11,"rxerr","","Bit 3 - MOSI in FwMode has error",97,[[["self"]],["rxerr_r"]]],[11,"rxoverflow","","Bit 4 - RX Async FIFO overflow",97,[[["self"]],["rxoverflow_r"]]],[11,"txunderflow","","Bit 5 - TX Async FIFO underflow",97,[[["self"]],["txunderflow_r"]]],[11,"rxf","","Bit 0 - RX SRAM FIFO Full",98,[[["self"]],["rxf_w"]]],[11,"rxlvl","","Bit 1 - RX SRAM FIFO is above the level",98,[[["self"]],["rxlvl_w"]]],[11,"txlvl","","Bit 2 - TX SRAM FIFO is under the level",98,[[["self"]],["txlvl_w"]]],[11,"rxerr","","Bit 3 - MOSI in FwMode has error",98,[[["self"]],["rxerr_w"]]],[11,"rxoverflow","","Bit 4 - RX Async FIFO overflow",98,[[["self"]],["rxoverflow_w"]]],[11,"txunderflow","","Bit 5 - TX Async FIFO underflow",98,[[["self"]],["txunderflow_w"]]],[0,"intr_enable","earlgrey_registers::spi_device","Interrupt Enable Register",null,null],[3,"RXF_W","earlgrey_registers::spi_device::intr_enable","Write proxy for field `rxf`",null,null],[3,"RXLVL_W","","Write proxy for field `rxlvl`",null,null],[3,"TXLVL_W","","Write proxy for field `txlvl`",null,null],[3,"RXERR_W","","Write proxy for field `rxerr`",null,null],[3,"RXOVERFLOW_W","","Write proxy for field `rxoverflow`",null,null],[3,"TXUNDERFLOW_W","","Write proxy for field `txunderflow`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"RXF_R","","Reader of field `rxf`",null,null],[6,"RXLVL_R","","Reader of field `rxlvl`",null,null],[6,"TXLVL_R","","Reader of field `txlvl`",null,null],[6,"RXERR_R","","Reader of field `rxerr`",null,null],[6,"RXOVERFLOW_R","","Reader of field `rxoverflow`",null,null],[6,"TXUNDERFLOW_R","","Reader of field `txunderflow`",null,null],[11,"set_bit","","Sets the field bit",99,[[],["w"]]],[11,"clear_bit","","Clears the field bit",99,[[],["w"]]],[11,"bit","","Writes raw bits to the field",99,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",100,[[],["w"]]],[11,"clear_bit","","Clears the field bit",100,[[],["w"]]],[11,"bit","","Writes raw bits to the field",100,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",101,[[],["w"]]],[11,"clear_bit","","Clears the field bit",101,[[],["w"]]],[11,"bit","","Writes raw bits to the field",101,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",102,[[],["w"]]],[11,"clear_bit","","Clears the field bit",102,[[],["w"]]],[11,"bit","","Writes raw bits to the field",102,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",103,[[],["w"]]],[11,"clear_bit","","Clears the field bit",103,[[],["w"]]],[11,"bit","","Writes raw bits to the field",103,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",104,[[],["w"]]],[11,"clear_bit","","Clears the field bit",104,[[],["w"]]],[11,"bit","","Writes raw bits to the field",104,[[["bool"]],["w"]]],[11,"rxf","","Bit 0 - Enable interrupt when !!INTR_STATE.rxf is set",105,[[["self"]],["rxf_r"]]],[11,"rxlvl","","Bit 1 - Enable interrupt when !!INTR_STATE.rxlvl is set",105,[[["self"]],["rxlvl_r"]]],[11,"txlvl","","Bit 2 - Enable interrupt when !!INTR_STATE.txlvl is set",105,[[["self"]],["txlvl_r"]]],[11,"rxerr","","Bit 3 - Enable interrupt when !!INTR_STATE.rxerr is set",105,[[["self"]],["rxerr_r"]]],[11,"rxoverflow","","Bit 4 - Enable interrupt when !!INTR_STATE.rxoverflow is set",105,[[["self"]],["rxoverflow_r"]]],[11,"txunderflow","","Bit 5 - Enable interrupt when !!INTR_STATE.txunderflow is…",105,[[["self"]],["txunderflow_r"]]],[11,"rxf","","Bit 0 - Enable interrupt when !!INTR_STATE.rxf is set",106,[[["self"]],["rxf_w"]]],[11,"rxlvl","","Bit 1 - Enable interrupt when !!INTR_STATE.rxlvl is set",106,[[["self"]],["rxlvl_w"]]],[11,"txlvl","","Bit 2 - Enable interrupt when !!INTR_STATE.txlvl is set",106,[[["self"]],["txlvl_w"]]],[11,"rxerr","","Bit 3 - Enable interrupt when !!INTR_STATE.rxerr is set",106,[[["self"]],["rxerr_w"]]],[11,"rxoverflow","","Bit 4 - Enable interrupt when !!INTR_STATE.rxoverflow is set",106,[[["self"]],["rxoverflow_w"]]],[11,"txunderflow","","Bit 5 - Enable interrupt when !!INTR_STATE.txunderflow is…",106,[[["self"]],["txunderflow_w"]]],[0,"intr_test","earlgrey_registers::spi_device","Interrupt Test Register",null,null],[3,"RXF_W","earlgrey_registers::spi_device::intr_test","Write proxy for field `rxf`",null,null],[3,"RXLVL_W","","Write proxy for field `rxlvl`",null,null],[3,"TXLVL_W","","Write proxy for field `txlvl`",null,null],[3,"RXERR_W","","Write proxy for field `rxerr`",null,null],[3,"RXOVERFLOW_W","","Write proxy for field `rxoverflow`",null,null],[3,"TXUNDERFLOW_W","","Write proxy for field `txunderflow`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"set_bit","","Sets the field bit",107,[[],["w"]]],[11,"clear_bit","","Clears the field bit",107,[[],["w"]]],[11,"bit","","Writes raw bits to the field",107,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",108,[[],["w"]]],[11,"clear_bit","","Clears the field bit",108,[[],["w"]]],[11,"bit","","Writes raw bits to the field",108,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",109,[[],["w"]]],[11,"clear_bit","","Clears the field bit",109,[[],["w"]]],[11,"bit","","Writes raw bits to the field",109,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",110,[[],["w"]]],[11,"clear_bit","","Clears the field bit",110,[[],["w"]]],[11,"bit","","Writes raw bits to the field",110,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",111,[[],["w"]]],[11,"clear_bit","","Clears the field bit",111,[[],["w"]]],[11,"bit","","Writes raw bits to the field",111,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",112,[[],["w"]]],[11,"clear_bit","","Clears the field bit",112,[[],["w"]]],[11,"bit","","Writes raw bits to the field",112,[[["bool"]],["w"]]],[11,"rxf","","Bit 0 - Write 1 to force !!INTR_STATE.rxf to 1",113,[[["self"]],["rxf_w"]]],[11,"rxlvl","","Bit 1 - Write 1 to force !!INTR_STATE.rxlvl to 1",113,[[["self"]],["rxlvl_w"]]],[11,"txlvl","","Bit 2 - Write 1 to force !!INTR_STATE.txlvl to 1",113,[[["self"]],["txlvl_w"]]],[11,"rxerr","","Bit 3 - Write 1 to force !!INTR_STATE.rxerr to 1",113,[[["self"]],["rxerr_w"]]],[11,"rxoverflow","","Bit 4 - Write 1 to force !!INTR_STATE.rxoverflow to 1",113,[[["self"]],["rxoverflow_w"]]],[11,"txunderflow","","Bit 5 - Write 1 to force !!INTR_STATE.txunderflow to 1",113,[[["self"]],["txunderflow_w"]]],[0,"control","earlgrey_registers::spi_device","Control register",null,null],[3,"ABORT_W","earlgrey_registers::spi_device::control","Write proxy for field `ABORT`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RST_TXFIFO_W","","Write proxy for field `rst_txfifo`",null,null],[3,"RST_RXFIFO_W","","Write proxy for field `rst_rxfifo`",null,null],[6,"R","","Reader of register CONTROL",null,null],[6,"W","","Writer for register CONTROL",null,null],[6,"ABORT_R","","Reader of field `ABORT`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RST_TXFIFO_R","","Reader of field `rst_txfifo`",null,null],[6,"RST_RXFIFO_R","","Reader of field `rst_rxfifo`",null,null],[11,"set_bit","","Sets the field bit",114,[[],["w"]]],[11,"clear_bit","","Clears the field bit",114,[[],["w"]]],[11,"bit","","Writes raw bits to the field",114,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",115,[[["u8"]],["w"]]],[11,"set_bit","","Sets the field bit",116,[[],["w"]]],[11,"clear_bit","","Clears the field bit",116,[[],["w"]]],[11,"bit","","Writes raw bits to the field",116,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",117,[[],["w"]]],[11,"clear_bit","","Clears the field bit",117,[[],["w"]]],[11,"bit","","Writes raw bits to the field",117,[[["bool"]],["w"]]],[11,"abort","","Bit 0 - Abort pending jobs. If TX_FIFO (async) is full,…",118,[[["self"]],["abort_r"]]],[11,"mode","","Bits 4:5 - SPI Device operation mode. Currently only…",118,[[["self"]],["mode_r"]]],[11,"rst_txfifo","","Bit 16 - Reset Async TX_FIFO. This only resets…",118,[[["self"]],["rst_txfifo_r"]]],[11,"rst_rxfifo","","Bit 17 - Reset Async RX_FIFO. This only resets…",118,[[["self"]],["rst_rxfifo_r"]]],[11,"abort","","Bit 0 - Abort pending jobs. If TX_FIFO (async) is full,…",119,[[["self"]],["abort_w"]]],[11,"mode","","Bits 4:5 - SPI Device operation mode. Currently only…",119,[[["self"]],["mode_w"]]],[11,"rst_txfifo","","Bit 16 - Reset Async TX_FIFO. This only resets…",119,[[["self"]],["rst_txfifo_w"]]],[11,"rst_rxfifo","","Bit 17 - Reset Async RX_FIFO. This only resets…",119,[[["self"]],["rst_rxfifo_w"]]],[0,"cfg","earlgrey_registers::spi_device","Configuration Register",null,null],[3,"CPOL_W","earlgrey_registers::spi_device::cfg","Write proxy for field `CPOL`",null,null],[3,"CPHA_W","","Write proxy for field `CPHA`",null,null],[3,"TX_ORDER_W","","Write proxy for field `tx_order`",null,null],[3,"RX_ORDER_W","","Write proxy for field `rx_order`",null,null],[3,"TIMER_V_W","","Write proxy for field `timer_v`",null,null],[6,"R","","Reader of register CFG",null,null],[6,"W","","Writer for register CFG",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"CPHA_R","","Reader of field `CPHA`",null,null],[6,"TX_ORDER_R","","Reader of field `tx_order`",null,null],[6,"RX_ORDER_R","","Reader of field `rx_order`",null,null],[6,"TIMER_V_R","","Reader of field `timer_v`",null,null],[11,"set_bit","","Sets the field bit",120,[[],["w"]]],[11,"clear_bit","","Clears the field bit",120,[[],["w"]]],[11,"bit","","Writes raw bits to the field",120,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",121,[[],["w"]]],[11,"clear_bit","","Clears the field bit",121,[[],["w"]]],[11,"bit","","Writes raw bits to the field",121,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",122,[[],["w"]]],[11,"clear_bit","","Clears the field bit",122,[[],["w"]]],[11,"bit","","Writes raw bits to the field",122,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",123,[[],["w"]]],[11,"clear_bit","","Clears the field bit",123,[[],["w"]]],[11,"bit","","Writes raw bits to the field",123,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",124,[[["u8"]],["w"]]],[11,"cpol","","Bit 0 - Clock polarity. 0 for normal SPI, 1 for negative…",125,[[["self"]],["cpol_r"]]],[11,"cpha","","Bit 1 - Data phase. 0 for negative edge change, 1 for…",125,[[["self"]],["cpha_r"]]],[11,"tx_order","","Bit 2 - TX bit order on MISO. 0 for MSB to LSB, 1 for LSB…",125,[[["self"]],["tx_order_r"]]],[11,"rx_order","","Bit 3 - RX bit order on MOSI. Module stores bitstream from…",125,[[["self"]],["rx_order_r"]]],[11,"timer_v","","Bits 8:15 - number of clocks for RXF to wait. To reduce…",125,[[["self"]],["timer_v_r"]]],[11,"cpol","","Bit 0 - Clock polarity. 0 for normal SPI, 1 for negative…",126,[[["self"]],["cpol_w"]]],[11,"cpha","","Bit 1 - Data phase. 0 for negative edge change, 1 for…",126,[[["self"]],["cpha_w"]]],[11,"tx_order","","Bit 2 - TX bit order on MISO. 0 for MSB to LSB, 1 for LSB…",126,[[["self"]],["tx_order_w"]]],[11,"rx_order","","Bit 3 - RX bit order on MOSI. Module stores bitstream from…",126,[[["self"]],["rx_order_w"]]],[11,"timer_v","","Bits 8:15 - number of clocks for RXF to wait. To reduce…",126,[[["self"]],["timer_v_w"]]],[0,"fifo_level","earlgrey_registers::spi_device","RX/ TX FIFO levels.",null,null],[3,"RXLVL_W","earlgrey_registers::spi_device::fifo_level","Write proxy for field `rxlvl`",null,null],[3,"TXLVL_W","","Write proxy for field `txlvl`",null,null],[6,"R","","Reader of register FIFO_LEVEL",null,null],[6,"W","","Writer for register FIFO_LEVEL",null,null],[6,"RXLVL_R","","Reader of field `rxlvl`",null,null],[6,"TXLVL_R","","Reader of field `txlvl`",null,null],[11,"bits","","Writes raw bits to the field",127,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",128,[[["u16"]],["w"]]],[11,"rxlvl","","Bits 0:15 - RX FIFO level. If RX SRAM FIFO level exceeds…",129,[[["self"]],["rxlvl_r"]]],[11,"txlvl","","Bits 16:31 - TX FIFO level. If TX SRAM FIFO level drops…",129,[[["self"]],["txlvl_r"]]],[11,"rxlvl","","Bits 0:15 - RX FIFO level. If RX SRAM FIFO level exceeds…",130,[[["self"]],["rxlvl_w"]]],[11,"txlvl","","Bits 16:31 - TX FIFO level. If TX SRAM FIFO level drops…",130,[[["self"]],["txlvl_w"]]],[0,"async_fifo_level","earlgrey_registers::spi_device","RX/ TX Async FIFO levels between main clk and spi clock",null,null],[6,"R","earlgrey_registers::spi_device::async_fifo_level","Reader of register ASYNC_FIFO_LEVEL",null,null],[6,"RXLVL_R","","Reader of field `rxlvl`",null,null],[6,"TXLVL_R","","Reader of field `txlvl`",null,null],[11,"rxlvl","","Bits 0:7 - RX Async FIFO level. This value shows the…",131,[[["self"]],["rxlvl_r"]]],[11,"txlvl","","Bits 16:23 - TX Async FIFO level. This value shows the…",131,[[["self"]],["txlvl_r"]]],[0,"status","earlgrey_registers::spi_device","SPI Device status register",null,null],[6,"R","earlgrey_registers::spi_device::status","Reader of register STATUS",null,null],[6,"RXF_FULL_R","","Reader of field `rxf_full`",null,null],[6,"RXF_EMPTY_R","","Reader of field `rxf_empty`",null,null],[6,"TXF_FULL_R","","Reader of field `txf_full`",null,null],[6,"TXF_EMPTY_R","","Reader of field `txf_empty`",null,null],[6,"ABORT_DONE_R","","Reader of field `abort_done`",null,null],[6,"CSB_R","","Reader of field `csb`",null,null],[11,"rxf_full","","Bit 0 - RX FIFO full",132,[[["self"]],["rxf_full_r"]]],[11,"rxf_empty","","Bit 1 - RX FIFO empty",132,[[["self"]],["rxf_empty_r"]]],[11,"txf_full","","Bit 2 - TX FIFO full",132,[[["self"]],["txf_full_r"]]],[11,"txf_empty","","Bit 3 - TX FIFO empty",132,[[["self"]],["txf_empty_r"]]],[11,"abort_done","","Bit 4 - Abort process is completed",132,[[["self"]],["abort_done_r"]]],[11,"csb","","Bit 5 - Direct input of CSb signal",132,[[["self"]],["csb_r"]]],[0,"rxf_ptr","earlgrey_registers::spi_device","Receiver FIFO (SRAM) pointers",null,null],[3,"RPTR_W","earlgrey_registers::spi_device::rxf_ptr","Write proxy for field `RPTR`",null,null],[6,"R","","Reader of register RXF_PTR",null,null],[6,"W","","Writer for register RXF_PTR",null,null],[6,"RPTR_R","","Reader of field `RPTR`",null,null],[6,"WPTR_R","","Reader of field `WPTR`",null,null],[11,"bits","","Writes raw bits to the field",133,[[["u16"]],["w"]]],[11,"rptr","","Bits 0:15 - Read pointer. bit x is for phase bit. check…",134,[[["self"]],["rptr_r"]]],[11,"wptr","","Bits 16:31 - Write pointer. Bit x is phase bit.",134,[[["self"]],["wptr_r"]]],[11,"rptr","","Bits 0:15 - Read pointer. bit x is for phase bit. check…",135,[[["self"]],["rptr_w"]]],[0,"txf_ptr","earlgrey_registers::spi_device","Transmitter FIFO (SRAM) pointers",null,null],[3,"WPTR_W","earlgrey_registers::spi_device::txf_ptr","Write proxy for field `WPTR`",null,null],[6,"R","","Reader of register TXF_PTR",null,null],[6,"W","","Writer for register TXF_PTR",null,null],[6,"RPTR_R","","Reader of field `RPTR`",null,null],[6,"WPTR_R","","Reader of field `WPTR`",null,null],[11,"bits","","Writes raw bits to the field",136,[[["u16"]],["w"]]],[11,"rptr","","Bits 0:15 - Read pointer. bit x is for phase bit. check…",137,[[["self"]],["rptr_r"]]],[11,"wptr","","Bits 16:31 - Write pointer. Bit x is phase bit.",137,[[["self"]],["wptr_r"]]],[11,"wptr","","Bits 16:31 - Write pointer. Bit x is phase bit.",138,[[["self"]],["wptr_w"]]],[0,"rxf_addr","earlgrey_registers::spi_device","Receiver FIFO (SRAM) Addresses",null,null],[3,"BASE_W","earlgrey_registers::spi_device::rxf_addr","Write proxy for field `base`",null,null],[3,"LIMIT_W","","Write proxy for field `limit`",null,null],[6,"R","","Reader of register RXF_ADDR",null,null],[6,"W","","Writer for register RXF_ADDR",null,null],[6,"BASE_R","","Reader of field `base`",null,null],[6,"LIMIT_R","","Reader of field `limit`",null,null],[11,"bits","","Writes raw bits to the field",139,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",140,[[["u16"]],["w"]]],[11,"base","","Bits 0:15 - Base offset in bytes in the SRAM. Lower 2 bits…",141,[[["self"]],["base_r"]]],[11,"limit","","Bits 16:31 - Limit offset in bytes in the SRAM. Lower 2…",141,[[["self"]],["limit_r"]]],[11,"base","","Bits 0:15 - Base offset in bytes in the SRAM. Lower 2 bits…",142,[[["self"]],["base_w"]]],[11,"limit","","Bits 16:31 - Limit offset in bytes in the SRAM. Lower 2…",142,[[["self"]],["limit_w"]]],[0,"txf_addr","earlgrey_registers::spi_device","Transmitter FIFO (SRAM) Addresses",null,null],[3,"BASE_W","earlgrey_registers::spi_device::txf_addr","Write proxy for field `base`",null,null],[3,"LIMIT_W","","Write proxy for field `limit`",null,null],[6,"R","","Reader of register TXF_ADDR",null,null],[6,"W","","Writer for register TXF_ADDR",null,null],[6,"BASE_R","","Reader of field `base`",null,null],[6,"LIMIT_R","","Reader of field `limit`",null,null],[11,"bits","","Writes raw bits to the field",143,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",144,[[["u16"]],["w"]]],[11,"base","","Bits 0:15 - Base offset in bytes in the SRAM. Lower 2 bits…",145,[[["self"]],["base_r"]]],[11,"limit","","Bits 16:31 - Limit offset in bytes in the SRAM. Lower 2…",145,[[["self"]],["limit_r"]]],[11,"base","","Bits 0:15 - Base offset in bytes in the SRAM. Lower 2 bits…",146,[[["self"]],["base_w"]]],[11,"limit","","Bits 16:31 - Limit offset in bytes in the SRAM. Lower 2…",146,[[["self"]],["limit_w"]]],[0,"buffer","earlgrey_registers::spi_device","SPI internal 2kB buffer. This buffer is shared by RX and…",null,null],[6,"R","earlgrey_registers::spi_device::buffer","Reader of register buffer%s",null,null],[6,"W","","Writer for register buffer%s",null,null],[6,"INTR_STATE","earlgrey_registers::spi_device","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[6,"CONTROL","","Control register",null,null],[6,"CFG","","Configuration Register",null,null],[6,"FIFO_LEVEL","","RX/ TX FIFO levels.",null,null],[6,"ASYNC_FIFO_LEVEL","","RX/ TX Async FIFO levels between main clk and spi clock",null,null],[6,"STATUS","","SPI Device status register",null,null],[6,"RXF_PTR","","Receiver FIFO (SRAM) pointers",null,null],[6,"TXF_PTR","","Transmitter FIFO (SRAM) pointers",null,null],[6,"RXF_ADDR","","Receiver FIFO (SRAM) Addresses",null,null],[6,"TXF_ADDR","","Transmitter FIFO (SRAM) Addresses",null,null],[6,"BUFFER","","SPI internal 2kB buffer. This buffer is shared by RX and…",null,null],[0,"flash_ctrl","earlgrey_registers","flash_ctrl",null,null],[3,"RegisterBlock","earlgrey_registers::flash_ctrl","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",147,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",147,null],[12,"intr_test","","0x08 - Interrupt Test Register",147,null],[12,"control","","0x0c - Control register",147,null],[12,"addr","","0x10 - Address for flash operation",147,null],[12,"region_cfg_regwen","","0x14 - Memory region registers configuration enable.",147,null],[12,"mp_region_cfg","","0x18 - Memory protection configuration",147,null],[12,"default_region","","0x38 - Default region permissions",147,null],[12,"bank_cfg_regwen","","0x3c - Bank configuration registers configuration enable.",147,null],[12,"mp_bank_cfg","","0x40 - Memory protect bank configuration",147,null],[12,"op_status","","0x44 - Flash Operation Status",147,null],[12,"status","","0x48 - Flash Controller Status",147,null],[12,"scratch","","0x4c - Flash Controller Scratch",147,null],[12,"fifo_lvl","","0x50 - Programmable depth where fifos should generate…",147,null],[12,"prog_fifo","","0x54 - Flash program fifo. The fifo is 16 entries of 4B…",147,null],[12,"rd_fifo","","0x58 - Flash read fifo. The fifo is 16 entries of 4B flash…",147,null],[3,"MP_REGION_CFG","","Register block",null,null],[12,"mp_region_cfg0","","0x00 - Memory protection configuration",148,null],[12,"mp_region_cfg1","","0x04 - Memory protection configuration",148,null],[12,"mp_region_cfg2","","0x08 - Memory protection configuration",148,null],[12,"mp_region_cfg3","","0x0c - Memory protection configuration",148,null],[12,"mp_region_cfg4","","0x10 - Memory protection configuration",148,null],[12,"mp_region_cfg5","","0x14 - Memory protection configuration",148,null],[12,"mp_region_cfg6","","0x18 - Memory protection configuration",148,null],[12,"mp_region_cfg7","","0x1c - Memory protection configuration",148,null],[0,"mp_region_cfg","","Register block Memory protection configuration",null,null],[0,"mp_region_cfg0","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN0_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg0","Write proxy for field `EN0`",null,null],[3,"RD_EN0_W","","Write proxy for field `RD_EN0`",null,null],[3,"PROG_EN0_W","","Write proxy for field `PROG_EN0`",null,null],[3,"ERASE_EN0_W","","Write proxy for field `ERASE_EN0`",null,null],[3,"BASE0_W","","Write proxy for field `BASE0`",null,null],[3,"SIZE0_W","","Write proxy for field `SIZE0`",null,null],[6,"R","","Reader of register MP_REGION_CFG0",null,null],[6,"W","","Writer for register MP_REGION_CFG0",null,null],[6,"EN0_R","","Reader of field `EN0`",null,null],[6,"RD_EN0_R","","Reader of field `RD_EN0`",null,null],[6,"PROG_EN0_R","","Reader of field `PROG_EN0`",null,null],[6,"ERASE_EN0_R","","Reader of field `ERASE_EN0`",null,null],[6,"BASE0_R","","Reader of field `BASE0`",null,null],[6,"SIZE0_R","","Reader of field `SIZE0`",null,null],[11,"set_bit","","Sets the field bit",149,[[],["w"]]],[11,"clear_bit","","Clears the field bit",149,[[],["w"]]],[11,"bit","","Writes raw bits to the field",149,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",150,[[],["w"]]],[11,"clear_bit","","Clears the field bit",150,[[],["w"]]],[11,"bit","","Writes raw bits to the field",150,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",151,[[],["w"]]],[11,"clear_bit","","Clears the field bit",151,[[],["w"]]],[11,"bit","","Writes raw bits to the field",151,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",152,[[],["w"]]],[11,"clear_bit","","Clears the field bit",152,[[],["w"]]],[11,"bit","","Writes raw bits to the field",152,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",153,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",154,[[["u16"]],["w"]]],[11,"en0","","Bit 0 - Region enabled, following fields apply for…",155,[[["self"]],["en0_r"]]],[11,"rd_en0","","Bit 1 - Region can be read for FLASH_CTRL0",155,[[["self"]],["rd_en0_r"]]],[11,"prog_en0","","Bit 2 - Region can be programmed for FLASH_CTRL0",155,[[["self"]],["prog_en0_r"]]],[11,"erase_en0","","Bit 3 - Region can be erased for FLASH_CTRL0",155,[[["self"]],["erase_en0_r"]]],[11,"base0","","Bits 4:12 - Region base page. Note the granularity is…",155,[[["self"]],["base0_r"]]],[11,"size0","","Bits 16:24 - Region size in number of pages for FLASH_CTRL0",155,[[["self"]],["size0_r"]]],[11,"en0","","Bit 0 - Region enabled, following fields apply for…",156,[[["self"]],["en0_w"]]],[11,"rd_en0","","Bit 1 - Region can be read for FLASH_CTRL0",156,[[["self"]],["rd_en0_w"]]],[11,"prog_en0","","Bit 2 - Region can be programmed for FLASH_CTRL0",156,[[["self"]],["prog_en0_w"]]],[11,"erase_en0","","Bit 3 - Region can be erased for FLASH_CTRL0",156,[[["self"]],["erase_en0_w"]]],[11,"base0","","Bits 4:12 - Region base page. Note the granularity is…",156,[[["self"]],["base0_w"]]],[11,"size0","","Bits 16:24 - Region size in number of pages for FLASH_CTRL0",156,[[["self"]],["size0_w"]]],[0,"mp_region_cfg1","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN1_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg1","Write proxy for field `EN1`",null,null],[3,"RD_EN1_W","","Write proxy for field `RD_EN1`",null,null],[3,"PROG_EN1_W","","Write proxy for field `PROG_EN1`",null,null],[3,"ERASE_EN1_W","","Write proxy for field `ERASE_EN1`",null,null],[3,"BASE1_W","","Write proxy for field `BASE1`",null,null],[3,"SIZE1_W","","Write proxy for field `SIZE1`",null,null],[6,"R","","Reader of register MP_REGION_CFG1",null,null],[6,"W","","Writer for register MP_REGION_CFG1",null,null],[6,"EN1_R","","Reader of field `EN1`",null,null],[6,"RD_EN1_R","","Reader of field `RD_EN1`",null,null],[6,"PROG_EN1_R","","Reader of field `PROG_EN1`",null,null],[6,"ERASE_EN1_R","","Reader of field `ERASE_EN1`",null,null],[6,"BASE1_R","","Reader of field `BASE1`",null,null],[6,"SIZE1_R","","Reader of field `SIZE1`",null,null],[11,"set_bit","","Sets the field bit",157,[[],["w"]]],[11,"clear_bit","","Clears the field bit",157,[[],["w"]]],[11,"bit","","Writes raw bits to the field",157,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",158,[[],["w"]]],[11,"clear_bit","","Clears the field bit",158,[[],["w"]]],[11,"bit","","Writes raw bits to the field",158,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",159,[[],["w"]]],[11,"clear_bit","","Clears the field bit",159,[[],["w"]]],[11,"bit","","Writes raw bits to the field",159,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",160,[[],["w"]]],[11,"clear_bit","","Clears the field bit",160,[[],["w"]]],[11,"bit","","Writes raw bits to the field",160,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",161,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",162,[[["u16"]],["w"]]],[11,"en1","","Bit 0 - Region enabled, following fields apply for…",163,[[["self"]],["en1_r"]]],[11,"rd_en1","","Bit 1 - Region can be read for FLASH_CTRL1",163,[[["self"]],["rd_en1_r"]]],[11,"prog_en1","","Bit 2 - Region can be programmed for FLASH_CTRL1",163,[[["self"]],["prog_en1_r"]]],[11,"erase_en1","","Bit 3 - Region can be erased for FLASH_CTRL1",163,[[["self"]],["erase_en1_r"]]],[11,"base1","","Bits 4:12 - Region base page. Note the granularity is…",163,[[["self"]],["base1_r"]]],[11,"size1","","Bits 16:24 - Region size in number of pages for FLASH_CTRL1",163,[[["self"]],["size1_r"]]],[11,"en1","","Bit 0 - Region enabled, following fields apply for…",164,[[["self"]],["en1_w"]]],[11,"rd_en1","","Bit 1 - Region can be read for FLASH_CTRL1",164,[[["self"]],["rd_en1_w"]]],[11,"prog_en1","","Bit 2 - Region can be programmed for FLASH_CTRL1",164,[[["self"]],["prog_en1_w"]]],[11,"erase_en1","","Bit 3 - Region can be erased for FLASH_CTRL1",164,[[["self"]],["erase_en1_w"]]],[11,"base1","","Bits 4:12 - Region base page. Note the granularity is…",164,[[["self"]],["base1_w"]]],[11,"size1","","Bits 16:24 - Region size in number of pages for FLASH_CTRL1",164,[[["self"]],["size1_w"]]],[0,"mp_region_cfg2","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN2_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg2","Write proxy for field `EN2`",null,null],[3,"RD_EN2_W","","Write proxy for field `RD_EN2`",null,null],[3,"PROG_EN2_W","","Write proxy for field `PROG_EN2`",null,null],[3,"ERASE_EN2_W","","Write proxy for field `ERASE_EN2`",null,null],[3,"BASE2_W","","Write proxy for field `BASE2`",null,null],[3,"SIZE2_W","","Write proxy for field `SIZE2`",null,null],[6,"R","","Reader of register MP_REGION_CFG2",null,null],[6,"W","","Writer for register MP_REGION_CFG2",null,null],[6,"EN2_R","","Reader of field `EN2`",null,null],[6,"RD_EN2_R","","Reader of field `RD_EN2`",null,null],[6,"PROG_EN2_R","","Reader of field `PROG_EN2`",null,null],[6,"ERASE_EN2_R","","Reader of field `ERASE_EN2`",null,null],[6,"BASE2_R","","Reader of field `BASE2`",null,null],[6,"SIZE2_R","","Reader of field `SIZE2`",null,null],[11,"set_bit","","Sets the field bit",165,[[],["w"]]],[11,"clear_bit","","Clears the field bit",165,[[],["w"]]],[11,"bit","","Writes raw bits to the field",165,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",166,[[],["w"]]],[11,"clear_bit","","Clears the field bit",166,[[],["w"]]],[11,"bit","","Writes raw bits to the field",166,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",167,[[],["w"]]],[11,"clear_bit","","Clears the field bit",167,[[],["w"]]],[11,"bit","","Writes raw bits to the field",167,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",168,[[],["w"]]],[11,"clear_bit","","Clears the field bit",168,[[],["w"]]],[11,"bit","","Writes raw bits to the field",168,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",169,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",170,[[["u16"]],["w"]]],[11,"en2","","Bit 0 - Region enabled, following fields apply for…",171,[[["self"]],["en2_r"]]],[11,"rd_en2","","Bit 1 - Region can be read for FLASH_CTRL2",171,[[["self"]],["rd_en2_r"]]],[11,"prog_en2","","Bit 2 - Region can be programmed for FLASH_CTRL2",171,[[["self"]],["prog_en2_r"]]],[11,"erase_en2","","Bit 3 - Region can be erased for FLASH_CTRL2",171,[[["self"]],["erase_en2_r"]]],[11,"base2","","Bits 4:12 - Region base page. Note the granularity is…",171,[[["self"]],["base2_r"]]],[11,"size2","","Bits 16:24 - Region size in number of pages for FLASH_CTRL2",171,[[["self"]],["size2_r"]]],[11,"en2","","Bit 0 - Region enabled, following fields apply for…",172,[[["self"]],["en2_w"]]],[11,"rd_en2","","Bit 1 - Region can be read for FLASH_CTRL2",172,[[["self"]],["rd_en2_w"]]],[11,"prog_en2","","Bit 2 - Region can be programmed for FLASH_CTRL2",172,[[["self"]],["prog_en2_w"]]],[11,"erase_en2","","Bit 3 - Region can be erased for FLASH_CTRL2",172,[[["self"]],["erase_en2_w"]]],[11,"base2","","Bits 4:12 - Region base page. Note the granularity is…",172,[[["self"]],["base2_w"]]],[11,"size2","","Bits 16:24 - Region size in number of pages for FLASH_CTRL2",172,[[["self"]],["size2_w"]]],[0,"mp_region_cfg3","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN3_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg3","Write proxy for field `EN3`",null,null],[3,"RD_EN3_W","","Write proxy for field `RD_EN3`",null,null],[3,"PROG_EN3_W","","Write proxy for field `PROG_EN3`",null,null],[3,"ERASE_EN3_W","","Write proxy for field `ERASE_EN3`",null,null],[3,"BASE3_W","","Write proxy for field `BASE3`",null,null],[3,"SIZE3_W","","Write proxy for field `SIZE3`",null,null],[6,"R","","Reader of register MP_REGION_CFG3",null,null],[6,"W","","Writer for register MP_REGION_CFG3",null,null],[6,"EN3_R","","Reader of field `EN3`",null,null],[6,"RD_EN3_R","","Reader of field `RD_EN3`",null,null],[6,"PROG_EN3_R","","Reader of field `PROG_EN3`",null,null],[6,"ERASE_EN3_R","","Reader of field `ERASE_EN3`",null,null],[6,"BASE3_R","","Reader of field `BASE3`",null,null],[6,"SIZE3_R","","Reader of field `SIZE3`",null,null],[11,"set_bit","","Sets the field bit",173,[[],["w"]]],[11,"clear_bit","","Clears the field bit",173,[[],["w"]]],[11,"bit","","Writes raw bits to the field",173,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",174,[[],["w"]]],[11,"clear_bit","","Clears the field bit",174,[[],["w"]]],[11,"bit","","Writes raw bits to the field",174,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",175,[[],["w"]]],[11,"clear_bit","","Clears the field bit",175,[[],["w"]]],[11,"bit","","Writes raw bits to the field",175,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",176,[[],["w"]]],[11,"clear_bit","","Clears the field bit",176,[[],["w"]]],[11,"bit","","Writes raw bits to the field",176,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",177,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",178,[[["u16"]],["w"]]],[11,"en3","","Bit 0 - Region enabled, following fields apply for…",179,[[["self"]],["en3_r"]]],[11,"rd_en3","","Bit 1 - Region can be read for FLASH_CTRL3",179,[[["self"]],["rd_en3_r"]]],[11,"prog_en3","","Bit 2 - Region can be programmed for FLASH_CTRL3",179,[[["self"]],["prog_en3_r"]]],[11,"erase_en3","","Bit 3 - Region can be erased for FLASH_CTRL3",179,[[["self"]],["erase_en3_r"]]],[11,"base3","","Bits 4:12 - Region base page. Note the granularity is…",179,[[["self"]],["base3_r"]]],[11,"size3","","Bits 16:24 - Region size in number of pages for FLASH_CTRL3",179,[[["self"]],["size3_r"]]],[11,"en3","","Bit 0 - Region enabled, following fields apply for…",180,[[["self"]],["en3_w"]]],[11,"rd_en3","","Bit 1 - Region can be read for FLASH_CTRL3",180,[[["self"]],["rd_en3_w"]]],[11,"prog_en3","","Bit 2 - Region can be programmed for FLASH_CTRL3",180,[[["self"]],["prog_en3_w"]]],[11,"erase_en3","","Bit 3 - Region can be erased for FLASH_CTRL3",180,[[["self"]],["erase_en3_w"]]],[11,"base3","","Bits 4:12 - Region base page. Note the granularity is…",180,[[["self"]],["base3_w"]]],[11,"size3","","Bits 16:24 - Region size in number of pages for FLASH_CTRL3",180,[[["self"]],["size3_w"]]],[0,"mp_region_cfg4","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN4_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg4","Write proxy for field `EN4`",null,null],[3,"RD_EN4_W","","Write proxy for field `RD_EN4`",null,null],[3,"PROG_EN4_W","","Write proxy for field `PROG_EN4`",null,null],[3,"ERASE_EN4_W","","Write proxy for field `ERASE_EN4`",null,null],[3,"BASE4_W","","Write proxy for field `BASE4`",null,null],[3,"SIZE4_W","","Write proxy for field `SIZE4`",null,null],[6,"R","","Reader of register MP_REGION_CFG4",null,null],[6,"W","","Writer for register MP_REGION_CFG4",null,null],[6,"EN4_R","","Reader of field `EN4`",null,null],[6,"RD_EN4_R","","Reader of field `RD_EN4`",null,null],[6,"PROG_EN4_R","","Reader of field `PROG_EN4`",null,null],[6,"ERASE_EN4_R","","Reader of field `ERASE_EN4`",null,null],[6,"BASE4_R","","Reader of field `BASE4`",null,null],[6,"SIZE4_R","","Reader of field `SIZE4`",null,null],[11,"set_bit","","Sets the field bit",181,[[],["w"]]],[11,"clear_bit","","Clears the field bit",181,[[],["w"]]],[11,"bit","","Writes raw bits to the field",181,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",182,[[],["w"]]],[11,"clear_bit","","Clears the field bit",182,[[],["w"]]],[11,"bit","","Writes raw bits to the field",182,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",183,[[],["w"]]],[11,"clear_bit","","Clears the field bit",183,[[],["w"]]],[11,"bit","","Writes raw bits to the field",183,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",184,[[],["w"]]],[11,"clear_bit","","Clears the field bit",184,[[],["w"]]],[11,"bit","","Writes raw bits to the field",184,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",185,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",186,[[["u16"]],["w"]]],[11,"en4","","Bit 0 - Region enabled, following fields apply for…",187,[[["self"]],["en4_r"]]],[11,"rd_en4","","Bit 1 - Region can be read for FLASH_CTRL4",187,[[["self"]],["rd_en4_r"]]],[11,"prog_en4","","Bit 2 - Region can be programmed for FLASH_CTRL4",187,[[["self"]],["prog_en4_r"]]],[11,"erase_en4","","Bit 3 - Region can be erased for FLASH_CTRL4",187,[[["self"]],["erase_en4_r"]]],[11,"base4","","Bits 4:12 - Region base page. Note the granularity is…",187,[[["self"]],["base4_r"]]],[11,"size4","","Bits 16:24 - Region size in number of pages for FLASH_CTRL4",187,[[["self"]],["size4_r"]]],[11,"en4","","Bit 0 - Region enabled, following fields apply for…",188,[[["self"]],["en4_w"]]],[11,"rd_en4","","Bit 1 - Region can be read for FLASH_CTRL4",188,[[["self"]],["rd_en4_w"]]],[11,"prog_en4","","Bit 2 - Region can be programmed for FLASH_CTRL4",188,[[["self"]],["prog_en4_w"]]],[11,"erase_en4","","Bit 3 - Region can be erased for FLASH_CTRL4",188,[[["self"]],["erase_en4_w"]]],[11,"base4","","Bits 4:12 - Region base page. Note the granularity is…",188,[[["self"]],["base4_w"]]],[11,"size4","","Bits 16:24 - Region size in number of pages for FLASH_CTRL4",188,[[["self"]],["size4_w"]]],[0,"mp_region_cfg5","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN5_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg5","Write proxy for field `EN5`",null,null],[3,"RD_EN5_W","","Write proxy for field `RD_EN5`",null,null],[3,"PROG_EN5_W","","Write proxy for field `PROG_EN5`",null,null],[3,"ERASE_EN5_W","","Write proxy for field `ERASE_EN5`",null,null],[3,"BASE5_W","","Write proxy for field `BASE5`",null,null],[3,"SIZE5_W","","Write proxy for field `SIZE5`",null,null],[6,"R","","Reader of register MP_REGION_CFG5",null,null],[6,"W","","Writer for register MP_REGION_CFG5",null,null],[6,"EN5_R","","Reader of field `EN5`",null,null],[6,"RD_EN5_R","","Reader of field `RD_EN5`",null,null],[6,"PROG_EN5_R","","Reader of field `PROG_EN5`",null,null],[6,"ERASE_EN5_R","","Reader of field `ERASE_EN5`",null,null],[6,"BASE5_R","","Reader of field `BASE5`",null,null],[6,"SIZE5_R","","Reader of field `SIZE5`",null,null],[11,"set_bit","","Sets the field bit",189,[[],["w"]]],[11,"clear_bit","","Clears the field bit",189,[[],["w"]]],[11,"bit","","Writes raw bits to the field",189,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",190,[[],["w"]]],[11,"clear_bit","","Clears the field bit",190,[[],["w"]]],[11,"bit","","Writes raw bits to the field",190,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",191,[[],["w"]]],[11,"clear_bit","","Clears the field bit",191,[[],["w"]]],[11,"bit","","Writes raw bits to the field",191,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",192,[[],["w"]]],[11,"clear_bit","","Clears the field bit",192,[[],["w"]]],[11,"bit","","Writes raw bits to the field",192,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",193,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",194,[[["u16"]],["w"]]],[11,"en5","","Bit 0 - Region enabled, following fields apply for…",195,[[["self"]],["en5_r"]]],[11,"rd_en5","","Bit 1 - Region can be read for FLASH_CTRL5",195,[[["self"]],["rd_en5_r"]]],[11,"prog_en5","","Bit 2 - Region can be programmed for FLASH_CTRL5",195,[[["self"]],["prog_en5_r"]]],[11,"erase_en5","","Bit 3 - Region can be erased for FLASH_CTRL5",195,[[["self"]],["erase_en5_r"]]],[11,"base5","","Bits 4:12 - Region base page. Note the granularity is…",195,[[["self"]],["base5_r"]]],[11,"size5","","Bits 16:24 - Region size in number of pages for FLASH_CTRL5",195,[[["self"]],["size5_r"]]],[11,"en5","","Bit 0 - Region enabled, following fields apply for…",196,[[["self"]],["en5_w"]]],[11,"rd_en5","","Bit 1 - Region can be read for FLASH_CTRL5",196,[[["self"]],["rd_en5_w"]]],[11,"prog_en5","","Bit 2 - Region can be programmed for FLASH_CTRL5",196,[[["self"]],["prog_en5_w"]]],[11,"erase_en5","","Bit 3 - Region can be erased for FLASH_CTRL5",196,[[["self"]],["erase_en5_w"]]],[11,"base5","","Bits 4:12 - Region base page. Note the granularity is…",196,[[["self"]],["base5_w"]]],[11,"size5","","Bits 16:24 - Region size in number of pages for FLASH_CTRL5",196,[[["self"]],["size5_w"]]],[0,"mp_region_cfg6","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN6_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg6","Write proxy for field `EN6`",null,null],[3,"RD_EN6_W","","Write proxy for field `RD_EN6`",null,null],[3,"PROG_EN6_W","","Write proxy for field `PROG_EN6`",null,null],[3,"ERASE_EN6_W","","Write proxy for field `ERASE_EN6`",null,null],[3,"BASE6_W","","Write proxy for field `BASE6`",null,null],[3,"SIZE6_W","","Write proxy for field `SIZE6`",null,null],[6,"R","","Reader of register MP_REGION_CFG6",null,null],[6,"W","","Writer for register MP_REGION_CFG6",null,null],[6,"EN6_R","","Reader of field `EN6`",null,null],[6,"RD_EN6_R","","Reader of field `RD_EN6`",null,null],[6,"PROG_EN6_R","","Reader of field `PROG_EN6`",null,null],[6,"ERASE_EN6_R","","Reader of field `ERASE_EN6`",null,null],[6,"BASE6_R","","Reader of field `BASE6`",null,null],[6,"SIZE6_R","","Reader of field `SIZE6`",null,null],[11,"set_bit","","Sets the field bit",197,[[],["w"]]],[11,"clear_bit","","Clears the field bit",197,[[],["w"]]],[11,"bit","","Writes raw bits to the field",197,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",198,[[],["w"]]],[11,"clear_bit","","Clears the field bit",198,[[],["w"]]],[11,"bit","","Writes raw bits to the field",198,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",199,[[],["w"]]],[11,"clear_bit","","Clears the field bit",199,[[],["w"]]],[11,"bit","","Writes raw bits to the field",199,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",200,[[],["w"]]],[11,"clear_bit","","Clears the field bit",200,[[],["w"]]],[11,"bit","","Writes raw bits to the field",200,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",201,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",202,[[["u16"]],["w"]]],[11,"en6","","Bit 0 - Region enabled, following fields apply for…",203,[[["self"]],["en6_r"]]],[11,"rd_en6","","Bit 1 - Region can be read for FLASH_CTRL6",203,[[["self"]],["rd_en6_r"]]],[11,"prog_en6","","Bit 2 - Region can be programmed for FLASH_CTRL6",203,[[["self"]],["prog_en6_r"]]],[11,"erase_en6","","Bit 3 - Region can be erased for FLASH_CTRL6",203,[[["self"]],["erase_en6_r"]]],[11,"base6","","Bits 4:12 - Region base page. Note the granularity is…",203,[[["self"]],["base6_r"]]],[11,"size6","","Bits 16:24 - Region size in number of pages for FLASH_CTRL6",203,[[["self"]],["size6_r"]]],[11,"en6","","Bit 0 - Region enabled, following fields apply for…",204,[[["self"]],["en6_w"]]],[11,"rd_en6","","Bit 1 - Region can be read for FLASH_CTRL6",204,[[["self"]],["rd_en6_w"]]],[11,"prog_en6","","Bit 2 - Region can be programmed for FLASH_CTRL6",204,[[["self"]],["prog_en6_w"]]],[11,"erase_en6","","Bit 3 - Region can be erased for FLASH_CTRL6",204,[[["self"]],["erase_en6_w"]]],[11,"base6","","Bits 4:12 - Region base page. Note the granularity is…",204,[[["self"]],["base6_w"]]],[11,"size6","","Bits 16:24 - Region size in number of pages for FLASH_CTRL6",204,[[["self"]],["size6_w"]]],[0,"mp_region_cfg7","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[3,"EN7_W","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg7","Write proxy for field `EN7`",null,null],[3,"RD_EN7_W","","Write proxy for field `RD_EN7`",null,null],[3,"PROG_EN7_W","","Write proxy for field `PROG_EN7`",null,null],[3,"ERASE_EN7_W","","Write proxy for field `ERASE_EN7`",null,null],[3,"BASE7_W","","Write proxy for field `BASE7`",null,null],[3,"SIZE7_W","","Write proxy for field `SIZE7`",null,null],[6,"R","","Reader of register MP_REGION_CFG7",null,null],[6,"W","","Writer for register MP_REGION_CFG7",null,null],[6,"EN7_R","","Reader of field `EN7`",null,null],[6,"RD_EN7_R","","Reader of field `RD_EN7`",null,null],[6,"PROG_EN7_R","","Reader of field `PROG_EN7`",null,null],[6,"ERASE_EN7_R","","Reader of field `ERASE_EN7`",null,null],[6,"BASE7_R","","Reader of field `BASE7`",null,null],[6,"SIZE7_R","","Reader of field `SIZE7`",null,null],[11,"set_bit","","Sets the field bit",205,[[],["w"]]],[11,"clear_bit","","Clears the field bit",205,[[],["w"]]],[11,"bit","","Writes raw bits to the field",205,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",206,[[],["w"]]],[11,"clear_bit","","Clears the field bit",206,[[],["w"]]],[11,"bit","","Writes raw bits to the field",206,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",207,[[],["w"]]],[11,"clear_bit","","Clears the field bit",207,[[],["w"]]],[11,"bit","","Writes raw bits to the field",207,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",208,[[],["w"]]],[11,"clear_bit","","Clears the field bit",208,[[],["w"]]],[11,"bit","","Writes raw bits to the field",208,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",209,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",210,[[["u16"]],["w"]]],[11,"en7","","Bit 0 - Region enabled, following fields apply for…",211,[[["self"]],["en7_r"]]],[11,"rd_en7","","Bit 1 - Region can be read for FLASH_CTRL7",211,[[["self"]],["rd_en7_r"]]],[11,"prog_en7","","Bit 2 - Region can be programmed for FLASH_CTRL7",211,[[["self"]],["prog_en7_r"]]],[11,"erase_en7","","Bit 3 - Region can be erased for FLASH_CTRL7",211,[[["self"]],["erase_en7_r"]]],[11,"base7","","Bits 4:12 - Region base page. Note the granularity is…",211,[[["self"]],["base7_r"]]],[11,"size7","","Bits 16:24 - Region size in number of pages for FLASH_CTRL7",211,[[["self"]],["size7_r"]]],[11,"en7","","Bit 0 - Region enabled, following fields apply for…",212,[[["self"]],["en7_w"]]],[11,"rd_en7","","Bit 1 - Region can be read for FLASH_CTRL7",212,[[["self"]],["rd_en7_w"]]],[11,"prog_en7","","Bit 2 - Region can be programmed for FLASH_CTRL7",212,[[["self"]],["prog_en7_w"]]],[11,"erase_en7","","Bit 3 - Region can be erased for FLASH_CTRL7",212,[[["self"]],["erase_en7_w"]]],[11,"base7","","Bits 4:12 - Region base page. Note the granularity is…",212,[[["self"]],["base7_w"]]],[11,"size7","","Bits 16:24 - Region size in number of pages for FLASH_CTRL7",212,[[["self"]],["size7_w"]]],[6,"MP_REGION_CFG0","earlgrey_registers::flash_ctrl::mp_region_cfg","Memory protection configuration",null,null],[6,"MP_REGION_CFG1","","Memory protection configuration",null,null],[6,"MP_REGION_CFG2","","Memory protection configuration",null,null],[6,"MP_REGION_CFG3","","Memory protection configuration",null,null],[6,"MP_REGION_CFG4","","Memory protection configuration",null,null],[6,"MP_REGION_CFG5","","Memory protection configuration",null,null],[6,"MP_REGION_CFG6","","Memory protection configuration",null,null],[6,"MP_REGION_CFG7","","Memory protection configuration",null,null],[0,"intr_state","earlgrey_registers::flash_ctrl","Interrupt State Register",null,null],[3,"PROG_EMPTY_W","earlgrey_registers::flash_ctrl::intr_state","Write proxy for field `prog_empty`",null,null],[3,"PROG_LVL_W","","Write proxy for field `prog_lvl`",null,null],[3,"RD_FULL_W","","Write proxy for field `rd_full`",null,null],[3,"RD_LVL_W","","Write proxy for field `rd_lvl`",null,null],[3,"OP_DONE_W","","Write proxy for field `op_done`",null,null],[3,"OP_ERROR_W","","Write proxy for field `op_error`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"PROG_EMPTY_R","","Reader of field `prog_empty`",null,null],[6,"PROG_LVL_R","","Reader of field `prog_lvl`",null,null],[6,"RD_FULL_R","","Reader of field `rd_full`",null,null],[6,"RD_LVL_R","","Reader of field `rd_lvl`",null,null],[6,"OP_DONE_R","","Reader of field `op_done`",null,null],[6,"OP_ERROR_R","","Reader of field `op_error`",null,null],[11,"set_bit","","Sets the field bit",213,[[],["w"]]],[11,"clear_bit","","Clears the field bit",213,[[],["w"]]],[11,"bit","","Writes raw bits to the field",213,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",214,[[],["w"]]],[11,"clear_bit","","Clears the field bit",214,[[],["w"]]],[11,"bit","","Writes raw bits to the field",214,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",215,[[],["w"]]],[11,"clear_bit","","Clears the field bit",215,[[],["w"]]],[11,"bit","","Writes raw bits to the field",215,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",216,[[],["w"]]],[11,"clear_bit","","Clears the field bit",216,[[],["w"]]],[11,"bit","","Writes raw bits to the field",216,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",217,[[],["w"]]],[11,"clear_bit","","Clears the field bit",217,[[],["w"]]],[11,"bit","","Writes raw bits to the field",217,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",218,[[],["w"]]],[11,"clear_bit","","Clears the field bit",218,[[],["w"]]],[11,"bit","","Writes raw bits to the field",218,[[["bool"]],["w"]]],[11,"prog_empty","","Bit 0 - Program FIFO empty",219,[[["self"]],["prog_empty_r"]]],[11,"prog_lvl","","Bit 1 - Program FIFO drained to level",219,[[["self"]],["prog_lvl_r"]]],[11,"rd_full","","Bit 2 - Read FIFO full",219,[[["self"]],["rd_full_r"]]],[11,"rd_lvl","","Bit 3 - Read FIFO filled to level",219,[[["self"]],["rd_lvl_r"]]],[11,"op_done","","Bit 4 - Operation complete",219,[[["self"]],["op_done_r"]]],[11,"op_error","","Bit 5 - Operation failed with error",219,[[["self"]],["op_error_r"]]],[11,"prog_empty","","Bit 0 - Program FIFO empty",220,[[["self"]],["prog_empty_w"]]],[11,"prog_lvl","","Bit 1 - Program FIFO drained to level",220,[[["self"]],["prog_lvl_w"]]],[11,"rd_full","","Bit 2 - Read FIFO full",220,[[["self"]],["rd_full_w"]]],[11,"rd_lvl","","Bit 3 - Read FIFO filled to level",220,[[["self"]],["rd_lvl_w"]]],[11,"op_done","","Bit 4 - Operation complete",220,[[["self"]],["op_done_w"]]],[11,"op_error","","Bit 5 - Operation failed with error",220,[[["self"]],["op_error_w"]]],[0,"intr_enable","earlgrey_registers::flash_ctrl","Interrupt Enable Register",null,null],[3,"PROG_EMPTY_W","earlgrey_registers::flash_ctrl::intr_enable","Write proxy for field `prog_empty`",null,null],[3,"PROG_LVL_W","","Write proxy for field `prog_lvl`",null,null],[3,"RD_FULL_W","","Write proxy for field `rd_full`",null,null],[3,"RD_LVL_W","","Write proxy for field `rd_lvl`",null,null],[3,"OP_DONE_W","","Write proxy for field `op_done`",null,null],[3,"OP_ERROR_W","","Write proxy for field `op_error`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"PROG_EMPTY_R","","Reader of field `prog_empty`",null,null],[6,"PROG_LVL_R","","Reader of field `prog_lvl`",null,null],[6,"RD_FULL_R","","Reader of field `rd_full`",null,null],[6,"RD_LVL_R","","Reader of field `rd_lvl`",null,null],[6,"OP_DONE_R","","Reader of field `op_done`",null,null],[6,"OP_ERROR_R","","Reader of field `op_error`",null,null],[11,"set_bit","","Sets the field bit",221,[[],["w"]]],[11,"clear_bit","","Clears the field bit",221,[[],["w"]]],[11,"bit","","Writes raw bits to the field",221,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",222,[[],["w"]]],[11,"clear_bit","","Clears the field bit",222,[[],["w"]]],[11,"bit","","Writes raw bits to the field",222,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",223,[[],["w"]]],[11,"clear_bit","","Clears the field bit",223,[[],["w"]]],[11,"bit","","Writes raw bits to the field",223,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",224,[[],["w"]]],[11,"clear_bit","","Clears the field bit",224,[[],["w"]]],[11,"bit","","Writes raw bits to the field",224,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",225,[[],["w"]]],[11,"clear_bit","","Clears the field bit",225,[[],["w"]]],[11,"bit","","Writes raw bits to the field",225,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",226,[[],["w"]]],[11,"clear_bit","","Clears the field bit",226,[[],["w"]]],[11,"bit","","Writes raw bits to the field",226,[[["bool"]],["w"]]],[11,"prog_empty","","Bit 0 - Enable interrupt when !!INTR_STATE.prog_empty is set",227,[[["self"]],["prog_empty_r"]]],[11,"prog_lvl","","Bit 1 - Enable interrupt when !!INTR_STATE.prog_lvl is set",227,[[["self"]],["prog_lvl_r"]]],[11,"rd_full","","Bit 2 - Enable interrupt when !!INTR_STATE.rd_full is set",227,[[["self"]],["rd_full_r"]]],[11,"rd_lvl","","Bit 3 - Enable interrupt when !!INTR_STATE.rd_lvl is set",227,[[["self"]],["rd_lvl_r"]]],[11,"op_done","","Bit 4 - Enable interrupt when !!INTR_STATE.op_done is set",227,[[["self"]],["op_done_r"]]],[11,"op_error","","Bit 5 - Enable interrupt when !!INTR_STATE.op_error is set",227,[[["self"]],["op_error_r"]]],[11,"prog_empty","","Bit 0 - Enable interrupt when !!INTR_STATE.prog_empty is set",228,[[["self"]],["prog_empty_w"]]],[11,"prog_lvl","","Bit 1 - Enable interrupt when !!INTR_STATE.prog_lvl is set",228,[[["self"]],["prog_lvl_w"]]],[11,"rd_full","","Bit 2 - Enable interrupt when !!INTR_STATE.rd_full is set",228,[[["self"]],["rd_full_w"]]],[11,"rd_lvl","","Bit 3 - Enable interrupt when !!INTR_STATE.rd_lvl is set",228,[[["self"]],["rd_lvl_w"]]],[11,"op_done","","Bit 4 - Enable interrupt when !!INTR_STATE.op_done is set",228,[[["self"]],["op_done_w"]]],[11,"op_error","","Bit 5 - Enable interrupt when !!INTR_STATE.op_error is set",228,[[["self"]],["op_error_w"]]],[0,"intr_test","earlgrey_registers::flash_ctrl","Interrupt Test Register",null,null],[3,"PROG_EMPTY_W","earlgrey_registers::flash_ctrl::intr_test","Write proxy for field `prog_empty`",null,null],[3,"PROG_LVL_W","","Write proxy for field `prog_lvl`",null,null],[3,"RD_FULL_W","","Write proxy for field `rd_full`",null,null],[3,"RD_LVL_W","","Write proxy for field `rd_lvl`",null,null],[3,"OP_DONE_W","","Write proxy for field `op_done`",null,null],[3,"OP_ERROR_W","","Write proxy for field `op_error`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"set_bit","","Sets the field bit",229,[[],["w"]]],[11,"clear_bit","","Clears the field bit",229,[[],["w"]]],[11,"bit","","Writes raw bits to the field",229,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",230,[[],["w"]]],[11,"clear_bit","","Clears the field bit",230,[[],["w"]]],[11,"bit","","Writes raw bits to the field",230,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",231,[[],["w"]]],[11,"clear_bit","","Clears the field bit",231,[[],["w"]]],[11,"bit","","Writes raw bits to the field",231,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",232,[[],["w"]]],[11,"clear_bit","","Clears the field bit",232,[[],["w"]]],[11,"bit","","Writes raw bits to the field",232,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",233,[[],["w"]]],[11,"clear_bit","","Clears the field bit",233,[[],["w"]]],[11,"bit","","Writes raw bits to the field",233,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",234,[[],["w"]]],[11,"clear_bit","","Clears the field bit",234,[[],["w"]]],[11,"bit","","Writes raw bits to the field",234,[[["bool"]],["w"]]],[11,"prog_empty","","Bit 0 - Write 1 to force !!INTR_STATE.prog_empty to 1",235,[[["self"]],["prog_empty_w"]]],[11,"prog_lvl","","Bit 1 - Write 1 to force !!INTR_STATE.prog_lvl to 1",235,[[["self"]],["prog_lvl_w"]]],[11,"rd_full","","Bit 2 - Write 1 to force !!INTR_STATE.rd_full to 1",235,[[["self"]],["rd_full_w"]]],[11,"rd_lvl","","Bit 3 - Write 1 to force !!INTR_STATE.rd_lvl to 1",235,[[["self"]],["rd_lvl_w"]]],[11,"op_done","","Bit 4 - Write 1 to force !!INTR_STATE.op_done to 1",235,[[["self"]],["op_done_w"]]],[11,"op_error","","Bit 5 - Write 1 to force !!INTR_STATE.op_error to 1",235,[[["self"]],["op_error_w"]]],[0,"control","earlgrey_registers::flash_ctrl","Control register",null,null],[3,"START_W","earlgrey_registers::flash_ctrl::control","Write proxy for field `START`",null,null],[3,"OP_W","","Write proxy for field `OP`",null,null],[3,"ERASE_SEL_W","","Write proxy for field `ERASE_SEL`",null,null],[3,"FIFO_RST_W","","Write proxy for field `FIFO_RST`",null,null],[3,"NUM_W","","Write proxy for field `NUM`",null,null],[6,"R","","Reader of register CONTROL",null,null],[6,"W","","Writer for register CONTROL",null,null],[6,"START_R","","Reader of field `START`",null,null],[6,"OP_R","","Reader of field `OP`",null,null],[6,"ERASE_SEL_R","","Reader of field `ERASE_SEL`",null,null],[6,"FIFO_RST_R","","Reader of field `FIFO_RST`",null,null],[6,"NUM_R","","Reader of field `NUM`",null,null],[11,"set_bit","","Sets the field bit",236,[[],["w"]]],[11,"clear_bit","","Clears the field bit",236,[[],["w"]]],[11,"bit","","Writes raw bits to the field",236,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",237,[[["u8"]],["w"]]],[11,"set_bit","","Sets the field bit",238,[[],["w"]]],[11,"clear_bit","","Clears the field bit",238,[[],["w"]]],[11,"bit","","Writes raw bits to the field",238,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",239,[[],["w"]]],[11,"clear_bit","","Clears the field bit",239,[[],["w"]]],[11,"bit","","Writes raw bits to the field",239,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",240,[[["u16"]],["w"]]],[11,"start","","Bit 0 - Start flash transaction. This bit shall only be…",241,[[["self"]],["start_r"]]],[11,"op","","Bits 4:5 - Flash operation selection",241,[[["self"]],["op_r"]]],[11,"erase_sel","","Bit 6 - Flash operation selection",241,[[["self"]],["erase_sel_r"]]],[11,"fifo_rst","","Bit 7 - RST FIFOs",241,[[["self"]],["fifo_rst_r"]]],[11,"num","","Bits 16:27 - Number of flash words the flash operation…",241,[[["self"]],["num_r"]]],[11,"start","","Bit 0 - Start flash transaction. This bit shall only be…",242,[[["self"]],["start_w"]]],[11,"op","","Bits 4:5 - Flash operation selection",242,[[["self"]],["op_w"]]],[11,"erase_sel","","Bit 6 - Flash operation selection",242,[[["self"]],["erase_sel_w"]]],[11,"fifo_rst","","Bit 7 - RST FIFOs",242,[[["self"]],["fifo_rst_w"]]],[11,"num","","Bits 16:27 - Number of flash words the flash operation…",242,[[["self"]],["num_w"]]],[0,"addr","earlgrey_registers::flash_ctrl","Address for flash operation",null,null],[3,"START_W","earlgrey_registers::flash_ctrl::addr","Write proxy for field `START`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"START_R","","Reader of field `START`",null,null],[11,"bits","","Writes raw bits to the field",243,[[["u32"]],["w"]]],[11,"start","","Bits 0:31 - Start address of a flash transaction. Software…",244,[[["self"]],["start_r"]]],[11,"start","","Bits 0:31 - Start address of a flash transaction. Software…",245,[[["self"]],["start_w"]]],[0,"region_cfg_regwen","earlgrey_registers::flash_ctrl","Memory region registers configuration enable.",null,null],[3,"REGION0_W","earlgrey_registers::flash_ctrl::region_cfg_regwen","Write proxy for field `REGION0`",null,null],[3,"REGION1_W","","Write proxy for field `REGION1`",null,null],[3,"REGION2_W","","Write proxy for field `REGION2`",null,null],[3,"REGION3_W","","Write proxy for field `REGION3`",null,null],[3,"REGION4_W","","Write proxy for field `REGION4`",null,null],[3,"REGION5_W","","Write proxy for field `REGION5`",null,null],[3,"REGION6_W","","Write proxy for field `REGION6`",null,null],[3,"REGION7_W","","Write proxy for field `REGION7`",null,null],[6,"R","","Reader of register REGION_CFG_REGWEN",null,null],[6,"W","","Writer for register REGION_CFG_REGWEN",null,null],[6,"REGION0_R","","Reader of field `REGION0`",null,null],[6,"REGION1_R","","Reader of field `REGION1`",null,null],[6,"REGION2_R","","Reader of field `REGION2`",null,null],[6,"REGION3_R","","Reader of field `REGION3`",null,null],[6,"REGION4_R","","Reader of field `REGION4`",null,null],[6,"REGION5_R","","Reader of field `REGION5`",null,null],[6,"REGION6_R","","Reader of field `REGION6`",null,null],[6,"REGION7_R","","Reader of field `REGION7`",null,null],[11,"set_bit","","Sets the field bit",246,[[],["w"]]],[11,"clear_bit","","Clears the field bit",246,[[],["w"]]],[11,"bit","","Writes raw bits to the field",246,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",247,[[],["w"]]],[11,"clear_bit","","Clears the field bit",247,[[],["w"]]],[11,"bit","","Writes raw bits to the field",247,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",248,[[],["w"]]],[11,"clear_bit","","Clears the field bit",248,[[],["w"]]],[11,"bit","","Writes raw bits to the field",248,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",249,[[],["w"]]],[11,"clear_bit","","Clears the field bit",249,[[],["w"]]],[11,"bit","","Writes raw bits to the field",249,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",250,[[],["w"]]],[11,"clear_bit","","Clears the field bit",250,[[],["w"]]],[11,"bit","","Writes raw bits to the field",250,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",251,[[],["w"]]],[11,"clear_bit","","Clears the field bit",251,[[],["w"]]],[11,"bit","","Writes raw bits to the field",251,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",252,[[],["w"]]],[11,"clear_bit","","Clears the field bit",252,[[],["w"]]],[11,"bit","","Writes raw bits to the field",252,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",253,[[],["w"]]],[11,"clear_bit","","Clears the field bit",253,[[],["w"]]],[11,"bit","","Writes raw bits to the field",253,[[["bool"]],["w"]]],[11,"region0","","Bit 0 - Region register write enable. Once set to 0, it…",254,[[["self"]],["region0_r"]]],[11,"region1","","Bit 1 - for FLASH_CTRL1",254,[[["self"]],["region1_r"]]],[11,"region2","","Bit 2 - for FLASH_CTRL2",254,[[["self"]],["region2_r"]]],[11,"region3","","Bit 3 - for FLASH_CTRL3",254,[[["self"]],["region3_r"]]],[11,"region4","","Bit 4 - for FLASH_CTRL4",254,[[["self"]],["region4_r"]]],[11,"region5","","Bit 5 - for FLASH_CTRL5",254,[[["self"]],["region5_r"]]],[11,"region6","","Bit 6 - for FLASH_CTRL6",254,[[["self"]],["region6_r"]]],[11,"region7","","Bit 7 - for FLASH_CTRL7",254,[[["self"]],["region7_r"]]],[11,"region0","","Bit 0 - Region register write enable. Once set to 0, it…",255,[[["self"]],["region0_w"]]],[11,"region1","","Bit 1 - for FLASH_CTRL1",255,[[["self"]],["region1_w"]]],[11,"region2","","Bit 2 - for FLASH_CTRL2",255,[[["self"]],["region2_w"]]],[11,"region3","","Bit 3 - for FLASH_CTRL3",255,[[["self"]],["region3_w"]]],[11,"region4","","Bit 4 - for FLASH_CTRL4",255,[[["self"]],["region4_w"]]],[11,"region5","","Bit 5 - for FLASH_CTRL5",255,[[["self"]],["region5_w"]]],[11,"region6","","Bit 6 - for FLASH_CTRL6",255,[[["self"]],["region6_w"]]],[11,"region7","","Bit 7 - for FLASH_CTRL7",255,[[["self"]],["region7_w"]]],[0,"default_region","earlgrey_registers::flash_ctrl","Default region permissions",null,null],[3,"RD_EN_W","earlgrey_registers::flash_ctrl::default_region","Write proxy for field `RD_EN`",null,null],[3,"PROG_EN_W","","Write proxy for field `PROG_EN`",null,null],[3,"ERASE_EN_W","","Write proxy for field `ERASE_EN`",null,null],[6,"R","","Reader of register DEFAULT_REGION",null,null],[6,"W","","Writer for register DEFAULT_REGION",null,null],[6,"RD_EN_R","","Reader of field `RD_EN`",null,null],[6,"PROG_EN_R","","Reader of field `PROG_EN`",null,null],[6,"ERASE_EN_R","","Reader of field `ERASE_EN`",null,null],[11,"set_bit","","Sets the field bit",256,[[],["w"]]],[11,"clear_bit","","Clears the field bit",256,[[],["w"]]],[11,"bit","","Writes raw bits to the field",256,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",257,[[],["w"]]],[11,"clear_bit","","Clears the field bit",257,[[],["w"]]],[11,"bit","","Writes raw bits to the field",257,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",258,[[],["w"]]],[11,"clear_bit","","Clears the field bit",258,[[],["w"]]],[11,"bit","","Writes raw bits to the field",258,[[["bool"]],["w"]]],[11,"rd_en","","Bit 0 - Region can be read",259,[[["self"]],["rd_en_r"]]],[11,"prog_en","","Bit 1 - Region can be programmed",259,[[["self"]],["prog_en_r"]]],[11,"erase_en","","Bit 2 - Region can be erased",259,[[["self"]],["erase_en_r"]]],[11,"rd_en","","Bit 0 - Region can be read",260,[[["self"]],["rd_en_w"]]],[11,"prog_en","","Bit 1 - Region can be programmed",260,[[["self"]],["prog_en_w"]]],[11,"erase_en","","Bit 2 - Region can be erased",260,[[["self"]],["erase_en_w"]]],[0,"bank_cfg_regwen","earlgrey_registers::flash_ctrl","Bank configuration registers configuration enable.",null,null],[3,"BANK_W","earlgrey_registers::flash_ctrl::bank_cfg_regwen","Write proxy for field `BANK`",null,null],[6,"R","","Reader of register BANK_CFG_REGWEN",null,null],[6,"W","","Writer for register BANK_CFG_REGWEN",null,null],[6,"BANK_R","","Reader of field `BANK`",null,null],[11,"set_bit","","Sets the field bit",261,[[],["w"]]],[11,"clear_bit","","Clears the field bit",261,[[],["w"]]],[11,"bit","","Writes raw bits to the field",261,[[["bool"]],["w"]]],[11,"bank","","Bit 0 - Bank register write enable. Once set to 0, it can…",262,[[["self"]],["bank_r"]]],[11,"bank","","Bit 0 - Bank register write enable. Once set to 0, it can…",263,[[["self"]],["bank_w"]]],[0,"mp_bank_cfg","earlgrey_registers::flash_ctrl","Memory protect bank configuration",null,null],[3,"ERASE_EN0_W","earlgrey_registers::flash_ctrl::mp_bank_cfg","Write proxy for field `ERASE_EN0`",null,null],[3,"ERASE_EN1_W","","Write proxy for field `ERASE_EN1`",null,null],[6,"R","","Reader of register MP_BANK_CFG",null,null],[6,"W","","Writer for register MP_BANK_CFG",null,null],[6,"ERASE_EN0_R","","Reader of field `ERASE_EN0`",null,null],[6,"ERASE_EN1_R","","Reader of field `ERASE_EN1`",null,null],[11,"set_bit","","Sets the field bit",264,[[],["w"]]],[11,"clear_bit","","Clears the field bit",264,[[],["w"]]],[11,"bit","","Writes raw bits to the field",264,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",265,[[],["w"]]],[11,"clear_bit","","Clears the field bit",265,[[],["w"]]],[11,"bit","","Writes raw bits to the field",265,[[["bool"]],["w"]]],[11,"erase_en0","","Bit 0 - Bank wide erase enable for FLASH_CTRL0",266,[[["self"]],["erase_en0_r"]]],[11,"erase_en1","","Bit 1 - for FLASH_CTRL1",266,[[["self"]],["erase_en1_r"]]],[11,"erase_en0","","Bit 0 - Bank wide erase enable for FLASH_CTRL0",267,[[["self"]],["erase_en0_w"]]],[11,"erase_en1","","Bit 1 - for FLASH_CTRL1",267,[[["self"]],["erase_en1_w"]]],[0,"op_status","earlgrey_registers::flash_ctrl","Flash Operation Status",null,null],[3,"DONE_W","earlgrey_registers::flash_ctrl::op_status","Write proxy for field `done`",null,null],[3,"ERR_W","","Write proxy for field `err`",null,null],[6,"R","","Reader of register OP_STATUS",null,null],[6,"W","","Writer for register OP_STATUS",null,null],[6,"DONE_R","","Reader of field `done`",null,null],[6,"ERR_R","","Reader of field `err`",null,null],[11,"set_bit","","Sets the field bit",268,[[],["w"]]],[11,"clear_bit","","Clears the field bit",268,[[],["w"]]],[11,"bit","","Writes raw bits to the field",268,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",269,[[],["w"]]],[11,"clear_bit","","Clears the field bit",269,[[],["w"]]],[11,"bit","","Writes raw bits to the field",269,[[["bool"]],["w"]]],[11,"done","","Bit 0 - Flash operation done. Set by HW, cleared by SW",270,[[["self"]],["done_r"]]],[11,"err","","Bit 1 - Flash operation error. Set by HW, cleared by SW",270,[[["self"]],["err_r"]]],[11,"done","","Bit 0 - Flash operation done. Set by HW, cleared by SW",271,[[["self"]],["done_w"]]],[11,"err","","Bit 1 - Flash operation error. Set by HW, cleared by SW",271,[[["self"]],["err_w"]]],[0,"status","earlgrey_registers::flash_ctrl","Flash Controller Status",null,null],[6,"R","earlgrey_registers::flash_ctrl::status","Reader of register STATUS",null,null],[6,"RD_FULL_R","","Reader of field `rd_full`",null,null],[6,"RD_EMPTY_R","","Reader of field `rd_empty`",null,null],[6,"PROG_FULL_R","","Reader of field `prog_full`",null,null],[6,"PROG_EMPTY_R","","Reader of field `prog_empty`",null,null],[6,"INIT_WIP_R","","Reader of field `init_wip`",null,null],[6,"ERROR_PAGE_R","","Reader of field `error_page`",null,null],[6,"ERROR_BANK_R","","Reader of field `error_bank`",null,null],[11,"rd_full","","Bit 0 - Flash read fifo full, software must consume data",272,[[["self"]],["rd_full_r"]]],[11,"rd_empty","","Bit 1 - Flash read fifo empty",272,[[["self"]],["rd_empty_r"]]],[11,"prog_full","","Bit 2 - Flash program fifo full",272,[[["self"]],["prog_full_r"]]],[11,"prog_empty","","Bit 3 - Flash program fifo empty, software must provide data",272,[[["self"]],["prog_empty_r"]]],[11,"init_wip","","Bit 4 - Flash controller undergoing init",272,[[["self"]],["init_wip_r"]]],[11,"error_page","","Bits 8:16 - Flash controller error page.",272,[[["self"]],["error_page_r"]]],[11,"error_bank","","Bit 17 - Flash controller error bank.",272,[[["self"]],["error_bank_r"]]],[0,"scratch","earlgrey_registers::flash_ctrl","Flash Controller Scratch",null,null],[3,"DATA_W","earlgrey_registers::flash_ctrl::scratch","Write proxy for field `data`",null,null],[6,"R","","Reader of register Scratch",null,null],[6,"W","","Writer for register Scratch",null,null],[6,"DATA_R","","Reader of field `data`",null,null],[11,"bits","","Writes raw bits to the field",273,[[["u32"]],["w"]]],[11,"data","","Bits 0:31 - Flash ctrl scratch register",274,[[["self"]],["data_r"]]],[11,"data","","Bits 0:31 - Flash ctrl scratch register",275,[[["self"]],["data_w"]]],[0,"fifo_lvl","earlgrey_registers::flash_ctrl","Programmable depth where fifos should generate interrupts",null,null],[3,"PROG_W","earlgrey_registers::flash_ctrl::fifo_lvl","Write proxy for field `PROG`",null,null],[3,"RD_W","","Write proxy for field `RD`",null,null],[6,"R","","Reader of register FIFO_LVL",null,null],[6,"W","","Writer for register FIFO_LVL",null,null],[6,"PROG_R","","Reader of field `PROG`",null,null],[6,"RD_R","","Reader of field `RD`",null,null],[11,"bits","","Writes raw bits to the field",276,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",277,[[["u8"]],["w"]]],[11,"prog","","Bits 0:4 - When the program fifo drains to this level,…",278,[[["self"]],["prog_r"]]],[11,"rd","","Bits 8:12 - When the read fifo fills to this level,…",278,[[["self"]],["rd_r"]]],[11,"prog","","Bits 0:4 - When the program fifo drains to this level,…",279,[[["self"]],["prog_w"]]],[11,"rd","","Bits 8:12 - When the read fifo fills to this level,…",279,[[["self"]],["rd_w"]]],[0,"prog_fifo","earlgrey_registers::flash_ctrl","Flash program fifo. The fifo is 16 entries of 4B flash words",null,null],[6,"W","earlgrey_registers::flash_ctrl::prog_fifo","Writer for register prog_fifo%s",null,null],[0,"rd_fifo","earlgrey_registers::flash_ctrl","Flash read fifo. The fifo is 16 entries of 4B flash words",null,null],[6,"R","earlgrey_registers::flash_ctrl::rd_fifo","Reader of register rd_fifo%s",null,null],[6,"INTR_STATE","earlgrey_registers::flash_ctrl","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[6,"CONTROL","","Control register",null,null],[6,"ADDR","","Address for flash operation",null,null],[6,"REGION_CFG_REGWEN","","Memory region registers configuration enable.",null,null],[6,"DEFAULT_REGION","","Default region permissions",null,null],[6,"BANK_CFG_REGWEN","","Bank configuration registers configuration enable.",null,null],[6,"MP_BANK_CFG","","Memory protect bank configuration",null,null],[6,"OP_STATUS","","Flash Operation Status",null,null],[6,"STATUS","","Flash Controller Status",null,null],[6,"SCRATCH","","Flash Controller Scratch",null,null],[6,"FIFO_LVL","","Programmable depth where fifos should generate interrupts",null,null],[6,"PROG_FIFO","","Flash program fifo. The fifo is 16 entries of 4B flash words",null,null],[6,"RD_FIFO","","Flash read fifo. The fifo is 16 entries of 4B flash words",null,null],[0,"rv_timer","earlgrey_registers","rv_timer",null,null],[3,"RegisterBlock","earlgrey_registers::rv_timer","Register block",null,null],[12,"ctrl","","0x00 - Control register",280,null],[12,"cfg0","","0x100 - Configuration for Hart 0",280,null],[12,"timer_v_lower0","","0x104 - Timer value Lower",280,null],[12,"timer_v_upper0","","0x108 - Timer value Upper",280,null],[12,"compare_lower0_0","","0x10c - Timer value Lower",280,null],[12,"compare_upper0_0","","0x110 - Timer value Upper",280,null],[12,"intr_enable0","","0x114 - Interrupt Enable",280,null],[12,"intr_state0","","0x118 - Interrupt Status",280,null],[12,"intr_test0","","0x11c - Interrupt test register",280,null],[0,"ctrl","","Control register",null,null],[3,"ACTIVE0_W","earlgrey_registers::rv_timer::ctrl","Write proxy for field `active0`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ACTIVE0_R","","Reader of field `active0`",null,null],[11,"set_bit","","Sets the field bit",281,[[],["w"]]],[11,"clear_bit","","Clears the field bit",281,[[],["w"]]],[11,"bit","","Writes raw bits to the field",281,[[["bool"]],["w"]]],[11,"active0","","Bit 0 - If 1, timer operates for TIMER0",282,[[["self"]],["active0_r"]]],[11,"active0","","Bit 0 - If 1, timer operates for TIMER0",283,[[["self"]],["active0_w"]]],[0,"cfg0","earlgrey_registers::rv_timer","Configuration for Hart 0",null,null],[3,"PRESCALE_W","earlgrey_registers::rv_timer::cfg0","Write proxy for field `prescale`",null,null],[3,"STEP_W","","Write proxy for field `step`",null,null],[6,"R","","Reader of register CFG0",null,null],[6,"W","","Writer for register CFG0",null,null],[6,"PRESCALE_R","","Reader of field `prescale`",null,null],[6,"STEP_R","","Reader of field `step`",null,null],[11,"bits","","Writes raw bits to the field",284,[[["u16"]],["w"]]],[11,"bits","","Writes raw bits to the field",285,[[["u8"]],["w"]]],[11,"prescale","","Bits 0:11 - Prescaler to generate tick",286,[[["self"]],["prescale_r"]]],[11,"step","","Bits 16:23 - Incremental value for each tick",286,[[["self"]],["step_r"]]],[11,"prescale","","Bits 0:11 - Prescaler to generate tick",287,[[["self"]],["prescale_w"]]],[11,"step","","Bits 16:23 - Incremental value for each tick",287,[[["self"]],["step_w"]]],[0,"timer_v_lower0","earlgrey_registers::rv_timer","Timer value Lower",null,null],[3,"V_W","earlgrey_registers::rv_timer::timer_v_lower0","Write proxy for field `v`",null,null],[6,"R","","Reader of register TIMER_V_LOWER0",null,null],[6,"W","","Writer for register TIMER_V_LOWER0",null,null],[6,"V_R","","Reader of field `v`",null,null],[11,"bits","","Writes raw bits to the field",288,[[["u32"]],["w"]]],[11,"v","","Bits 0:31 - Timer value [31:0]",289,[[["self"]],["v_r"]]],[11,"v","","Bits 0:31 - Timer value [31:0]",290,[[["self"]],["v_w"]]],[0,"timer_v_upper0","earlgrey_registers::rv_timer","Timer value Upper",null,null],[3,"V_W","earlgrey_registers::rv_timer::timer_v_upper0","Write proxy for field `v`",null,null],[6,"R","","Reader of register TIMER_V_UPPER0",null,null],[6,"W","","Writer for register TIMER_V_UPPER0",null,null],[6,"V_R","","Reader of field `v`",null,null],[11,"bits","","Writes raw bits to the field",291,[[["u32"]],["w"]]],[11,"v","","Bits 0:31 - Timer value [63:32]",292,[[["self"]],["v_r"]]],[11,"v","","Bits 0:31 - Timer value [63:32]",293,[[["self"]],["v_w"]]],[0,"compare_lower0_0","earlgrey_registers::rv_timer","Timer value Lower",null,null],[3,"V_W","earlgrey_registers::rv_timer::compare_lower0_0","Write proxy for field `v`",null,null],[6,"R","","Reader of register COMPARE_LOWER0_0",null,null],[6,"W","","Writer for register COMPARE_LOWER0_0",null,null],[6,"V_R","","Reader of field `v`",null,null],[11,"bits","","Writes raw bits to the field",294,[[["u32"]],["w"]]],[11,"v","","Bits 0:31 - Timer compare value [31:0]",295,[[["self"]],["v_r"]]],[11,"v","","Bits 0:31 - Timer compare value [31:0]",296,[[["self"]],["v_w"]]],[0,"compare_upper0_0","earlgrey_registers::rv_timer","Timer value Upper",null,null],[3,"V_W","earlgrey_registers::rv_timer::compare_upper0_0","Write proxy for field `v`",null,null],[6,"R","","Reader of register COMPARE_UPPER0_0",null,null],[6,"W","","Writer for register COMPARE_UPPER0_0",null,null],[6,"V_R","","Reader of field `v`",null,null],[11,"bits","","Writes raw bits to the field",297,[[["u32"]],["w"]]],[11,"v","","Bits 0:31 - Timer compare value [63:32]",298,[[["self"]],["v_r"]]],[11,"v","","Bits 0:31 - Timer compare value [63:32]",299,[[["self"]],["v_w"]]],[0,"intr_enable0","earlgrey_registers::rv_timer","Interrupt Enable",null,null],[3,"IE0_W","earlgrey_registers::rv_timer::intr_enable0","Write proxy for field `IE0`",null,null],[6,"R","","Reader of register INTR_ENABLE0",null,null],[6,"W","","Writer for register INTR_ENABLE0",null,null],[6,"IE0_R","","Reader of field `IE0`",null,null],[11,"set_bit","","Sets the field bit",300,[[],["w"]]],[11,"clear_bit","","Clears the field bit",300,[[],["w"]]],[11,"bit","","Writes raw bits to the field",300,[[["bool"]],["w"]]],[11,"ie0","","Bit 0 - Interrupt Enable for timer for TIMER0",301,[[["self"]],["ie0_r"]]],[11,"ie0","","Bit 0 - Interrupt Enable for timer for TIMER0",302,[[["self"]],["ie0_w"]]],[0,"intr_state0","earlgrey_registers::rv_timer","Interrupt Status",null,null],[3,"IS0_W","earlgrey_registers::rv_timer::intr_state0","Write proxy for field `IS0`",null,null],[6,"R","","Reader of register INTR_STATE0",null,null],[6,"W","","Writer for register INTR_STATE0",null,null],[6,"IS0_R","","Reader of field `IS0`",null,null],[11,"set_bit","","Sets the field bit",303,[[],["w"]]],[11,"clear_bit","","Clears the field bit",303,[[],["w"]]],[11,"bit","","Writes raw bits to the field",303,[[["bool"]],["w"]]],[11,"is0","","Bit 0 - Interrupt status for timer for TIMER0",304,[[["self"]],["is0_r"]]],[11,"is0","","Bit 0 - Interrupt status for timer for TIMER0",305,[[["self"]],["is0_w"]]],[0,"intr_test0","earlgrey_registers::rv_timer","Interrupt test register",null,null],[3,"T0_W","earlgrey_registers::rv_timer::intr_test0","Write proxy for field `T0`",null,null],[6,"W","","Writer for register INTR_TEST0",null,null],[11,"set_bit","","Sets the field bit",306,[[],["w"]]],[11,"clear_bit","","Clears the field bit",306,[[],["w"]]],[11,"bit","","Writes raw bits to the field",306,[[["bool"]],["w"]]],[11,"t0","","Bit 0 - Interrupt test for timer for TIMER0",307,[[["self"]],["t0_w"]]],[6,"CTRL","earlgrey_registers::rv_timer","Control register",null,null],[6,"CFG0","","Configuration for Hart 0",null,null],[6,"TIMER_V_LOWER0","","Timer value Lower",null,null],[6,"TIMER_V_UPPER0","","Timer value Upper",null,null],[6,"COMPARE_LOWER0_0","","Timer value Lower",null,null],[6,"COMPARE_UPPER0_0","","Timer value Upper",null,null],[6,"INTR_ENABLE0","","Interrupt Enable",null,null],[6,"INTR_STATE0","","Interrupt Status",null,null],[6,"INTR_TEST0","","Interrupt test register",null,null],[0,"aes","earlgrey_registers","aes",null,null],[3,"RegisterBlock","earlgrey_registers::aes","Register block",null,null],[12,"key","","0x00 - Initial Key Registers. Loaded into the internal…",308,null],[12,"data_in","","0x20 - Input Data Registers. Loaded into the internal…",308,null],[12,"data_out","","0x30 - Output Data Register. Holds the output data…",308,null],[12,"ctrl","","0x40 - Control Register. Can only be updated when the AES…",308,null],[12,"trigger","","0x44 - Trigger Register",308,null],[12,"status","","0x48 - Status Register",308,null],[3,"KEY","","Register block",null,null],[12,"key0","","0x00 - Initial Key Registers. Loaded into the internal…",309,null],[12,"key1","","0x04 - Initial Key Registers. Loaded into the internal…",309,null],[12,"key2","","0x08 - Initial Key Registers. Loaded into the internal…",309,null],[12,"key3","","0x0c - Initial Key Registers. Loaded into the internal…",309,null],[12,"key4","","0x10 - Initial Key Registers. Loaded into the internal…",309,null],[12,"key5","","0x14 - Initial Key Registers. Loaded into the internal…",309,null],[12,"key6","","0x18 - Initial Key Registers. Loaded into the internal…",309,null],[12,"key7","","0x1c - Initial Key Registers. Loaded into the internal…",309,null],[3,"DATA_IN","","Register block",null,null],[12,"data_in0","","0x00 - Input Data Registers. Loaded into the internal…",310,null],[12,"data_in1","","0x04 - Input Data Registers. Loaded into the internal…",310,null],[12,"data_in2","","0x08 - Input Data Registers. Loaded into the internal…",310,null],[12,"data_in3","","0x0c - Input Data Registers. Loaded into the internal…",310,null],[3,"DATA_OUT","","Register block",null,null],[12,"data_out0","","0x00 - Output Data Register. Holds the output data…",311,null],[12,"data_out1","","0x04 - Output Data Register. Holds the output data…",311,null],[12,"data_out2","","0x08 - Output Data Register. Holds the output data…",311,null],[12,"data_out3","","0x0c - Output Data Register. Holds the output data…",311,null],[0,"key","","Register block Initial Key Registers. Loaded into the…",null,null],[0,"key0","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY0_W","earlgrey_registers::aes::key::key0","Write proxy for field `key0`",null,null],[6,"W","","Writer for register KEY0",null,null],[11,"bits","","Writes raw bits to the field",312,[[["u32"]],["w"]]],[11,"key0","","Bits 0:31 - Initial Key for KEY0",313,[[["self"]],["key0_w"]]],[0,"key1","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY1_W","earlgrey_registers::aes::key::key1","Write proxy for field `key1`",null,null],[6,"W","","Writer for register KEY1",null,null],[11,"bits","","Writes raw bits to the field",314,[[["u32"]],["w"]]],[11,"key1","","Bits 0:31 - Initial Key for KEY1",315,[[["self"]],["key1_w"]]],[0,"key2","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY2_W","earlgrey_registers::aes::key::key2","Write proxy for field `key2`",null,null],[6,"W","","Writer for register KEY2",null,null],[11,"bits","","Writes raw bits to the field",316,[[["u32"]],["w"]]],[11,"key2","","Bits 0:31 - Initial Key for KEY2",317,[[["self"]],["key2_w"]]],[0,"key3","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY3_W","earlgrey_registers::aes::key::key3","Write proxy for field `key3`",null,null],[6,"W","","Writer for register KEY3",null,null],[11,"bits","","Writes raw bits to the field",318,[[["u32"]],["w"]]],[11,"key3","","Bits 0:31 - Initial Key for KEY3",319,[[["self"]],["key3_w"]]],[0,"key4","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY4_W","earlgrey_registers::aes::key::key4","Write proxy for field `key4`",null,null],[6,"W","","Writer for register KEY4",null,null],[11,"bits","","Writes raw bits to the field",320,[[["u32"]],["w"]]],[11,"key4","","Bits 0:31 - Initial Key for KEY4",321,[[["self"]],["key4_w"]]],[0,"key5","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY5_W","earlgrey_registers::aes::key::key5","Write proxy for field `key5`",null,null],[6,"W","","Writer for register KEY5",null,null],[11,"bits","","Writes raw bits to the field",322,[[["u32"]],["w"]]],[11,"key5","","Bits 0:31 - Initial Key for KEY5",323,[[["self"]],["key5_w"]]],[0,"key6","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY6_W","earlgrey_registers::aes::key::key6","Write proxy for field `key6`",null,null],[6,"W","","Writer for register KEY6",null,null],[11,"bits","","Writes raw bits to the field",324,[[["u32"]],["w"]]],[11,"key6","","Bits 0:31 - Initial Key for KEY6",325,[[["self"]],["key6_w"]]],[0,"key7","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[3,"KEY7_W","earlgrey_registers::aes::key::key7","Write proxy for field `key7`",null,null],[6,"W","","Writer for register KEY7",null,null],[11,"bits","","Writes raw bits to the field",326,[[["u32"]],["w"]]],[11,"key7","","Bits 0:31 - Initial Key for KEY7",327,[[["self"]],["key7_w"]]],[6,"KEY0","earlgrey_registers::aes::key","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY1","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY2","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY3","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY4","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY5","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY6","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[6,"KEY7","","Initial Key Registers. Loaded into the internal Full Key…",null,null],[0,"data_in","earlgrey_registers::aes","Register block Input Data Registers. Loaded into the…",null,null],[0,"data_in0","earlgrey_registers::aes::data_in","Input Data Registers. Loaded into the internal State…",null,null],[3,"DATA_IN0_W","earlgrey_registers::aes::data_in::data_in0","Write proxy for field `data_in0`",null,null],[6,"W","","Writer for register DATA_IN0",null,null],[11,"bits","","Writes raw bits to the field",328,[[["u32"]],["w"]]],[11,"data_in0","","Bits 0:31 - Input Data for DATA_IN0",329,[[["self"]],["data_in0_w"]]],[0,"data_in1","earlgrey_registers::aes::data_in","Input Data Registers. Loaded into the internal State…",null,null],[3,"DATA_IN1_W","earlgrey_registers::aes::data_in::data_in1","Write proxy for field `data_in1`",null,null],[6,"W","","Writer for register DATA_IN1",null,null],[11,"bits","","Writes raw bits to the field",330,[[["u32"]],["w"]]],[11,"data_in1","","Bits 0:31 - Input Data for DATA_IN1",331,[[["self"]],["data_in1_w"]]],[0,"data_in2","earlgrey_registers::aes::data_in","Input Data Registers. Loaded into the internal State…",null,null],[3,"DATA_IN2_W","earlgrey_registers::aes::data_in::data_in2","Write proxy for field `data_in2`",null,null],[6,"W","","Writer for register DATA_IN2",null,null],[11,"bits","","Writes raw bits to the field",332,[[["u32"]],["w"]]],[11,"data_in2","","Bits 0:31 - Input Data for DATA_IN2",333,[[["self"]],["data_in2_w"]]],[0,"data_in3","earlgrey_registers::aes::data_in","Input Data Registers. Loaded into the internal State…",null,null],[3,"DATA_IN3_W","earlgrey_registers::aes::data_in::data_in3","Write proxy for field `data_in3`",null,null],[6,"W","","Writer for register DATA_IN3",null,null],[11,"bits","","Writes raw bits to the field",334,[[["u32"]],["w"]]],[11,"data_in3","","Bits 0:31 - Input Data for DATA_IN3",335,[[["self"]],["data_in3_w"]]],[6,"DATA_IN0","earlgrey_registers::aes::data_in","Input Data Registers. Loaded into the internal State…",null,null],[6,"DATA_IN1","","Input Data Registers. Loaded into the internal State…",null,null],[6,"DATA_IN2","","Input Data Registers. Loaded into the internal State…",null,null],[6,"DATA_IN3","","Input Data Registers. Loaded into the internal State…",null,null],[0,"data_out","earlgrey_registers::aes","Register block Output Data Register. Holds the output data…",null,null],[0,"data_out0","earlgrey_registers::aes::data_out","Output Data Register. Holds the output data produced by…",null,null],[6,"R","earlgrey_registers::aes::data_out::data_out0","Reader of register DATA_OUT0",null,null],[6,"DATA_OUT0_R","","Reader of field `data_out0`",null,null],[11,"data_out0","","Bits 0:31 - Output Data for DATA_OUT0",336,[[["self"]],["data_out0_r"]]],[0,"data_out1","earlgrey_registers::aes::data_out","Output Data Register. Holds the output data produced by…",null,null],[6,"R","earlgrey_registers::aes::data_out::data_out1","Reader of register DATA_OUT1",null,null],[6,"DATA_OUT1_R","","Reader of field `data_out1`",null,null],[11,"data_out1","","Bits 0:31 - Output Data for DATA_OUT1",337,[[["self"]],["data_out1_r"]]],[0,"data_out2","earlgrey_registers::aes::data_out","Output Data Register. Holds the output data produced by…",null,null],[6,"R","earlgrey_registers::aes::data_out::data_out2","Reader of register DATA_OUT2",null,null],[6,"DATA_OUT2_R","","Reader of field `data_out2`",null,null],[11,"data_out2","","Bits 0:31 - Output Data for DATA_OUT2",338,[[["self"]],["data_out2_r"]]],[0,"data_out3","earlgrey_registers::aes::data_out","Output Data Register. Holds the output data produced by…",null,null],[6,"R","earlgrey_registers::aes::data_out::data_out3","Reader of register DATA_OUT3",null,null],[6,"DATA_OUT3_R","","Reader of field `data_out3`",null,null],[11,"data_out3","","Bits 0:31 - Output Data for DATA_OUT3",339,[[["self"]],["data_out3_r"]]],[6,"DATA_OUT0","earlgrey_registers::aes::data_out","Output Data Register. Holds the output data produced by…",null,null],[6,"DATA_OUT1","","Output Data Register. Holds the output data produced by…",null,null],[6,"DATA_OUT2","","Output Data Register. Holds the output data produced by…",null,null],[6,"DATA_OUT3","","Output Data Register. Holds the output data produced by…",null,null],[0,"ctrl","earlgrey_registers::aes","Control Register. Can only be updated when the AES unit is…",null,null],[3,"MODE_W","earlgrey_registers::aes::ctrl","Write proxy for field `MODE`",null,null],[3,"KEY_LEN_W","","Write proxy for field `KEY_LEN`",null,null],[3,"MANUAL_START_TRIGGER_W","","Write proxy for field `MANUAL_START_TRIGGER`",null,null],[3,"FORCE_DATA_OVERWRITE_W","","Write proxy for field `FORCE_DATA_OVERWRITE`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"KEY_LEN_R","","Reader of field `KEY_LEN`",null,null],[6,"MANUAL_START_TRIGGER_R","","Reader of field `MANUAL_START_TRIGGER`",null,null],[6,"FORCE_DATA_OVERWRITE_R","","Reader of field `FORCE_DATA_OVERWRITE`",null,null],[11,"set_bit","","Sets the field bit",340,[[],["w"]]],[11,"clear_bit","","Clears the field bit",340,[[],["w"]]],[11,"bit","","Writes raw bits to the field",340,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",341,[[["u8"]],["w"]]],[11,"set_bit","","Sets the field bit",342,[[],["w"]]],[11,"clear_bit","","Clears the field bit",342,[[],["w"]]],[11,"bit","","Writes raw bits to the field",342,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",343,[[],["w"]]],[11,"clear_bit","","Clears the field bit",343,[[],["w"]]],[11,"bit","","Writes raw bits to the field",343,[[["bool"]],["w"]]],[11,"mode","","Bit 0 - Select encryption(0) or decryption(1) operating…",344,[[["self"]],["mode_r"]]],[11,"key_len","","Bits 1:3 - 3-bit one-hot field to select AES key length:…",344,[[["self"]],["key_len_r"]]],[11,"manual_start_trigger","","Bit 4 - Controls whether the AES unit should automatically…",344,[[["self"]],["manual_start_trigger_r"]]],[11,"force_data_overwrite","","Bit 5 - Control whether the AES unit is stalled during the…",344,[[["self"]],["force_data_overwrite_r"]]],[11,"mode","","Bit 0 - Select encryption(0) or decryption(1) operating…",345,[[["self"]],["mode_w"]]],[11,"key_len","","Bits 1:3 - 3-bit one-hot field to select AES key length:…",345,[[["self"]],["key_len_w"]]],[11,"manual_start_trigger","","Bit 4 - Controls whether the AES unit should automatically…",345,[[["self"]],["manual_start_trigger_w"]]],[11,"force_data_overwrite","","Bit 5 - Control whether the AES unit is stalled during the…",345,[[["self"]],["force_data_overwrite_w"]]],[0,"trigger","earlgrey_registers::aes","Trigger Register",null,null],[3,"START_W","earlgrey_registers::aes::trigger","Write proxy for field `START`",null,null],[3,"KEY_CLEAR_W","","Write proxy for field `KEY_CLEAR`",null,null],[3,"DATA_IN_CLEAR_W","","Write proxy for field `DATA_IN_CLEAR`",null,null],[3,"DATA_OUT_CLEAR_W","","Write proxy for field `DATA_OUT_CLEAR`",null,null],[6,"W","","Writer for register TRIGGER",null,null],[11,"set_bit","","Sets the field bit",346,[[],["w"]]],[11,"clear_bit","","Clears the field bit",346,[[],["w"]]],[11,"bit","","Writes raw bits to the field",346,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",347,[[],["w"]]],[11,"clear_bit","","Clears the field bit",347,[[],["w"]]],[11,"bit","","Writes raw bits to the field",347,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",348,[[],["w"]]],[11,"clear_bit","","Clears the field bit",348,[[],["w"]]],[11,"bit","","Writes raw bits to the field",348,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",349,[[],["w"]]],[11,"clear_bit","","Clears the field bit",349,[[],["w"]]],[11,"bit","","Writes raw bits to the field",349,[[["bool"]],["w"]]],[11,"start","","Bit 0 - Keep AES unit paused (0) or trigger the…",350,[[["self"]],["start_w"]]],[11,"key_clear","","Bit 1 - Keep current values in Initial Key, internal Full…",350,[[["self"]],["key_clear_w"]]],[11,"data_in_clear","","Bit 2 - Keep current values in input registers (0) or…",350,[[["self"]],["data_in_clear_w"]]],[11,"data_out_clear","","Bit 3 - Keep current values in output registers (0) or…",350,[[["self"]],["data_out_clear_w"]]],[0,"status","earlgrey_registers::aes","Status Register",null,null],[6,"R","earlgrey_registers::aes::status","Reader of register STATUS",null,null],[6,"IDLE_R","","Reader of field `IDLE`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[6,"OUTPUT_VALID_R","","Reader of field `OUTPUT_VALID`",null,null],[6,"INPUT_READY_R","","Reader of field `INPUT_READY`",null,null],[11,"idle","","Bit 0 - The AES unit is idle (0) or busy (1).",351,[[["self"]],["idle_r"]]],[11,"stall","","Bit 1 - The AES unit is not stalled (0) or stalled (1)…",351,[[["self"]],["stall_r"]]],[11,"output_valid","","Bit 2 - The AES unit has no valid output (0) or has valid…",351,[[["self"]],["output_valid_r"]]],[11,"input_ready","","Bit 3 - The AES unit is ready (1) to receive new data…",351,[[["self"]],["input_ready_r"]]],[6,"CTRL","earlgrey_registers::aes","Control Register. Can only be updated when the AES unit is…",null,null],[6,"TRIGGER","","Trigger Register",null,null],[6,"STATUS","","Status Register",null,null],[0,"hmac","earlgrey_registers","hmac",null,null],[3,"RegisterBlock","earlgrey_registers::hmac","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",352,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",352,null],[12,"intr_test","","0x08 - Interrupt Test Register",352,null],[12,"cfg","","0x0c - HMAC Configuration register. The register is…",352,null],[12,"cmd","","0x10 - HMAC command register",352,null],[12,"status","","0x14 - HMAC Status register",352,null],[12,"err_code","","0x18 - HMAC Error Code",352,null],[12,"wipe_secret","","0x1c - Randomize internal secret registers. If CPU writes…",352,null],[12,"key","","0x20 - HMAC Secret Key SHA256 assumes secret key is hashed…",352,null],[12,"digest","","0x40 - Digest output. If HMAC is disabled, the register…",352,null],[12,"msg_length_lower","","0x60 - Received Message Length calculated by the HMAC in…",352,null],[12,"msg_length_upper","","0x64 - Received Message Length calculated by the HMAC in…",352,null],[12,"msg_fifo","","0x800 - Message FIFO. Any write to this window will be…",352,null],[3,"KEY","","Register block",null,null],[12,"key0","","0x00 - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key1","","0x04 - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key2","","0x08 - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key3","","0x0c - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key4","","0x10 - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key5","","0x14 - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key6","","0x18 - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[12,"key7","","0x1c - HMAC Secret Key SHA256 assumes secret key is hashed…",353,null],[3,"DIGEST","","Register block",null,null],[12,"digest0","","0x00 - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest1","","0x04 - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest2","","0x08 - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest3","","0x0c - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest4","","0x10 - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest5","","0x14 - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest6","","0x18 - Digest output. If HMAC is disabled, the register…",354,null],[12,"digest7","","0x1c - Digest output. If HMAC is disabled, the register…",354,null],[0,"key","","Register block HMAC Secret Key SHA256 assumes secret key…",null,null],[0,"key0","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY0_W","earlgrey_registers::hmac::key::key0","Write proxy for field `key0`",null,null],[6,"W","","Writer for register KEY0",null,null],[11,"bits","","Writes raw bits to the field",355,[[["u32"]],["w"]]],[11,"key0","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC0",356,[[["self"]],["key0_w"]]],[0,"key1","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY1_W","earlgrey_registers::hmac::key::key1","Write proxy for field `key1`",null,null],[6,"W","","Writer for register KEY1",null,null],[11,"bits","","Writes raw bits to the field",357,[[["u32"]],["w"]]],[11,"key1","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC1",358,[[["self"]],["key1_w"]]],[0,"key2","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY2_W","earlgrey_registers::hmac::key::key2","Write proxy for field `key2`",null,null],[6,"W","","Writer for register KEY2",null,null],[11,"bits","","Writes raw bits to the field",359,[[["u32"]],["w"]]],[11,"key2","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC2",360,[[["self"]],["key2_w"]]],[0,"key3","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY3_W","earlgrey_registers::hmac::key::key3","Write proxy for field `key3`",null,null],[6,"W","","Writer for register KEY3",null,null],[11,"bits","","Writes raw bits to the field",361,[[["u32"]],["w"]]],[11,"key3","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC3",362,[[["self"]],["key3_w"]]],[0,"key4","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY4_W","earlgrey_registers::hmac::key::key4","Write proxy for field `key4`",null,null],[6,"W","","Writer for register KEY4",null,null],[11,"bits","","Writes raw bits to the field",363,[[["u32"]],["w"]]],[11,"key4","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC4",364,[[["self"]],["key4_w"]]],[0,"key5","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY5_W","earlgrey_registers::hmac::key::key5","Write proxy for field `key5`",null,null],[6,"W","","Writer for register KEY5",null,null],[11,"bits","","Writes raw bits to the field",365,[[["u32"]],["w"]]],[11,"key5","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC5",366,[[["self"]],["key5_w"]]],[0,"key6","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY6_W","earlgrey_registers::hmac::key::key6","Write proxy for field `key6`",null,null],[6,"W","","Writer for register KEY6",null,null],[11,"bits","","Writes raw bits to the field",367,[[["u32"]],["w"]]],[11,"key6","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC6",368,[[["self"]],["key6_w"]]],[0,"key7","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[3,"KEY7_W","earlgrey_registers::hmac::key::key7","Write proxy for field `key7`",null,null],[6,"W","","Writer for register KEY7",null,null],[11,"bits","","Writes raw bits to the field",369,[[["u32"]],["w"]]],[11,"key7","","Bits 0:31 - 32-bit chunk of 256-bit Secret Key for HMAC7",370,[[["self"]],["key7_w"]]],[6,"KEY0","earlgrey_registers::hmac::key","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY1","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY2","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY3","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY4","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY5","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY6","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[6,"KEY7","","HMAC Secret Key SHA256 assumes secret key is hashed 256bit…",null,null],[0,"digest","earlgrey_registers::hmac","Register block Digest output. If HMAC is disabled, the…",null,null],[0,"digest0","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest0","Reader of register DIGEST0",null,null],[6,"DIGEST0_R","","Reader of field `digest0`",null,null],[11,"digest0","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC0",371,[[["self"]],["digest0_r"]]],[0,"digest1","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest1","Reader of register DIGEST1",null,null],[6,"DIGEST1_R","","Reader of field `digest1`",null,null],[11,"digest1","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC1",372,[[["self"]],["digest1_r"]]],[0,"digest2","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest2","Reader of register DIGEST2",null,null],[6,"DIGEST2_R","","Reader of field `digest2`",null,null],[11,"digest2","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC2",373,[[["self"]],["digest2_r"]]],[0,"digest3","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest3","Reader of register DIGEST3",null,null],[6,"DIGEST3_R","","Reader of field `digest3`",null,null],[11,"digest3","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC3",374,[[["self"]],["digest3_r"]]],[0,"digest4","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest4","Reader of register DIGEST4",null,null],[6,"DIGEST4_R","","Reader of field `digest4`",null,null],[11,"digest4","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC4",375,[[["self"]],["digest4_r"]]],[0,"digest5","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest5","Reader of register DIGEST5",null,null],[6,"DIGEST5_R","","Reader of field `digest5`",null,null],[11,"digest5","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC5",376,[[["self"]],["digest5_r"]]],[0,"digest6","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest6","Reader of register DIGEST6",null,null],[6,"DIGEST6_R","","Reader of field `digest6`",null,null],[11,"digest6","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC6",377,[[["self"]],["digest6_r"]]],[0,"digest7","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"R","earlgrey_registers::hmac::digest::digest7","Reader of register DIGEST7",null,null],[6,"DIGEST7_R","","Reader of field `digest7`",null,null],[11,"digest7","","Bits 0:31 - 32-bit chunk of 256-bit Digest for HMAC7",378,[[["self"]],["digest7_r"]]],[6,"DIGEST0","earlgrey_registers::hmac::digest","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST1","","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST2","","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST3","","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST4","","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST5","","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST6","","Digest output. If HMAC is disabled, the register shows…",null,null],[6,"DIGEST7","","Digest output. If HMAC is disabled, the register shows…",null,null],[0,"intr_state","earlgrey_registers::hmac","Interrupt State Register",null,null],[3,"HMAC_DONE_W","earlgrey_registers::hmac::intr_state","Write proxy for field `hmac_done`",null,null],[3,"FIFO_FULL_W","","Write proxy for field `fifo_full`",null,null],[3,"HMAC_ERR_W","","Write proxy for field `hmac_err`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"HMAC_DONE_R","","Reader of field `hmac_done`",null,null],[6,"FIFO_FULL_R","","Reader of field `fifo_full`",null,null],[6,"HMAC_ERR_R","","Reader of field `hmac_err`",null,null],[11,"set_bit","","Sets the field bit",379,[[],["w"]]],[11,"clear_bit","","Clears the field bit",379,[[],["w"]]],[11,"bit","","Writes raw bits to the field",379,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",380,[[],["w"]]],[11,"clear_bit","","Clears the field bit",380,[[],["w"]]],[11,"bit","","Writes raw bits to the field",380,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",381,[[],["w"]]],[11,"clear_bit","","Clears the field bit",381,[[],["w"]]],[11,"bit","","Writes raw bits to the field",381,[[["bool"]],["w"]]],[11,"hmac_done","","Bit 0 - HMAC-256 completes a message with key",382,[[["self"]],["hmac_done_r"]]],[11,"fifo_full","","Bit 1 - Message FIFO full condition",382,[[["self"]],["fifo_full_r"]]],[11,"hmac_err","","Bit 2 - HMAC error occurred. ERR_CODE register shows which…",382,[[["self"]],["hmac_err_r"]]],[11,"hmac_done","","Bit 0 - HMAC-256 completes a message with key",383,[[["self"]],["hmac_done_w"]]],[11,"fifo_full","","Bit 1 - Message FIFO full condition",383,[[["self"]],["fifo_full_w"]]],[11,"hmac_err","","Bit 2 - HMAC error occurred. ERR_CODE register shows which…",383,[[["self"]],["hmac_err_w"]]],[0,"intr_enable","earlgrey_registers::hmac","Interrupt Enable Register",null,null],[3,"HMAC_DONE_W","earlgrey_registers::hmac::intr_enable","Write proxy for field `hmac_done`",null,null],[3,"FIFO_FULL_W","","Write proxy for field `fifo_full`",null,null],[3,"HMAC_ERR_W","","Write proxy for field `hmac_err`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"HMAC_DONE_R","","Reader of field `hmac_done`",null,null],[6,"FIFO_FULL_R","","Reader of field `fifo_full`",null,null],[6,"HMAC_ERR_R","","Reader of field `hmac_err`",null,null],[11,"set_bit","","Sets the field bit",384,[[],["w"]]],[11,"clear_bit","","Clears the field bit",384,[[],["w"]]],[11,"bit","","Writes raw bits to the field",384,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",385,[[],["w"]]],[11,"clear_bit","","Clears the field bit",385,[[],["w"]]],[11,"bit","","Writes raw bits to the field",385,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",386,[[],["w"]]],[11,"clear_bit","","Clears the field bit",386,[[],["w"]]],[11,"bit","","Writes raw bits to the field",386,[[["bool"]],["w"]]],[11,"hmac_done","","Bit 0 - Enable interrupt when !!INTR_STATE.hmac_done is set",387,[[["self"]],["hmac_done_r"]]],[11,"fifo_full","","Bit 1 - Enable interrupt when !!INTR_STATE.fifo_full is set",387,[[["self"]],["fifo_full_r"]]],[11,"hmac_err","","Bit 2 - Enable interrupt when !!INTR_STATE.hmac_err is set",387,[[["self"]],["hmac_err_r"]]],[11,"hmac_done","","Bit 0 - Enable interrupt when !!INTR_STATE.hmac_done is set",388,[[["self"]],["hmac_done_w"]]],[11,"fifo_full","","Bit 1 - Enable interrupt when !!INTR_STATE.fifo_full is set",388,[[["self"]],["fifo_full_w"]]],[11,"hmac_err","","Bit 2 - Enable interrupt when !!INTR_STATE.hmac_err is set",388,[[["self"]],["hmac_err_w"]]],[0,"intr_test","earlgrey_registers::hmac","Interrupt Test Register",null,null],[3,"HMAC_DONE_W","earlgrey_registers::hmac::intr_test","Write proxy for field `hmac_done`",null,null],[3,"FIFO_FULL_W","","Write proxy for field `fifo_full`",null,null],[3,"HMAC_ERR_W","","Write proxy for field `hmac_err`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"set_bit","","Sets the field bit",389,[[],["w"]]],[11,"clear_bit","","Clears the field bit",389,[[],["w"]]],[11,"bit","","Writes raw bits to the field",389,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",390,[[],["w"]]],[11,"clear_bit","","Clears the field bit",390,[[],["w"]]],[11,"bit","","Writes raw bits to the field",390,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",391,[[],["w"]]],[11,"clear_bit","","Clears the field bit",391,[[],["w"]]],[11,"bit","","Writes raw bits to the field",391,[[["bool"]],["w"]]],[11,"hmac_done","","Bit 0 - Write 1 to force !!INTR_STATE.hmac_done to 1",392,[[["self"]],["hmac_done_w"]]],[11,"fifo_full","","Bit 1 - Write 1 to force !!INTR_STATE.fifo_full to 1",392,[[["self"]],["fifo_full_w"]]],[11,"hmac_err","","Bit 2 - Write 1 to force !!INTR_STATE.hmac_err to 1",392,[[["self"]],["hmac_err_w"]]],[0,"cfg","earlgrey_registers::hmac","HMAC Configuration register. The register is updated when…",null,null],[3,"HMAC_EN_W","earlgrey_registers::hmac::cfg","Write proxy for field `hmac_en`",null,null],[3,"SHA_EN_W","","Write proxy for field `sha_en`",null,null],[3,"ENDIAN_SWAP_W","","Write proxy for field `endian_swap`",null,null],[3,"DIGEST_SWAP_W","","Write proxy for field `digest_swap`",null,null],[6,"R","","Reader of register CFG",null,null],[6,"W","","Writer for register CFG",null,null],[6,"HMAC_EN_R","","Reader of field `hmac_en`",null,null],[6,"SHA_EN_R","","Reader of field `sha_en`",null,null],[6,"ENDIAN_SWAP_R","","Reader of field `endian_swap`",null,null],[6,"DIGEST_SWAP_R","","Reader of field `digest_swap`",null,null],[11,"set_bit","","Sets the field bit",393,[[],["w"]]],[11,"clear_bit","","Clears the field bit",393,[[],["w"]]],[11,"bit","","Writes raw bits to the field",393,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",394,[[],["w"]]],[11,"clear_bit","","Clears the field bit",394,[[],["w"]]],[11,"bit","","Writes raw bits to the field",394,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",395,[[],["w"]]],[11,"clear_bit","","Clears the field bit",395,[[],["w"]]],[11,"bit","","Writes raw bits to the field",395,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",396,[[],["w"]]],[11,"clear_bit","","Clears the field bit",396,[[],["w"]]],[11,"bit","","Writes raw bits to the field",396,[[["bool"]],["w"]]],[11,"hmac_en","","Bit 0 - HMAC datapath enable. If this bit is 1, HMAC…",397,[[["self"]],["hmac_en_r"]]],[11,"sha_en","","Bit 1 - SHA256 enable. If 0, SHA engine won't initiate…",397,[[["self"]],["sha_en_r"]]],[11,"endian_swap","","Bit 2 - Convert TL-UL wdata[31:0] to big-endian style…",397,[[["self"]],["endian_swap_r"]]],[11,"digest_swap","","Bit 3 - DIGEST register byte-order. If 1, it swaps each…",397,[[["self"]],["digest_swap_r"]]],[11,"hmac_en","","Bit 0 - HMAC datapath enable. If this bit is 1, HMAC…",398,[[["self"]],["hmac_en_w"]]],[11,"sha_en","","Bit 1 - SHA256 enable. If 0, SHA engine won't initiate…",398,[[["self"]],["sha_en_w"]]],[11,"endian_swap","","Bit 2 - Convert TL-UL wdata[31:0] to big-endian style…",398,[[["self"]],["endian_swap_w"]]],[11,"digest_swap","","Bit 3 - DIGEST register byte-order. If 1, it swaps each…",398,[[["self"]],["digest_swap_w"]]],[0,"cmd","earlgrey_registers::hmac","HMAC command register",null,null],[3,"HASH_START_W","earlgrey_registers::hmac::cmd","Write proxy for field `hash_start`",null,null],[3,"HASH_PROCESS_W","","Write proxy for field `hash_process`",null,null],[6,"W","","Writer for register CMD",null,null],[11,"set_bit","","Sets the field bit",399,[[],["w"]]],[11,"clear_bit","","Clears the field bit",399,[[],["w"]]],[11,"bit","","Writes raw bits to the field",399,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",400,[[],["w"]]],[11,"clear_bit","","Clears the field bit",400,[[],["w"]]],[11,"bit","","Writes raw bits to the field",400,[[["bool"]],["w"]]],[11,"hash_start","","Bit 0 - If writes 1 into this field, SHA256 or HMAC begins…",401,[[["self"]],["hash_start_w"]]],[11,"hash_process","","Bit 1 - If writes 1 into this field, SHA256 or HMAC…",401,[[["self"]],["hash_process_w"]]],[0,"status","earlgrey_registers::hmac","HMAC Status register",null,null],[6,"R","earlgrey_registers::hmac::status","Reader of register STATUS",null,null],[6,"FIFO_EMPTY_R","","Reader of field `fifo_empty`",null,null],[6,"FIFO_FULL_R","","Reader of field `fifo_full`",null,null],[6,"FIFO_DEPTH_R","","Reader of field `fifo_depth`",null,null],[11,"fifo_empty","","Bit 0 - FIFO empty",402,[[["self"]],["fifo_empty_r"]]],[11,"fifo_full","","Bit 1 - FIFO full. Data written to the FIFO whilst it is…",402,[[["self"]],["fifo_full_r"]]],[11,"fifo_depth","","Bits 4:8 - FIFO entry count.",402,[[["self"]],["fifo_depth_r"]]],[0,"err_code","earlgrey_registers::hmac","HMAC Error Code",null,null],[6,"R","earlgrey_registers::hmac::err_code","Reader of register ERR_CODE",null,null],[6,"ERR_CODE_R","","Reader of field `err_code`",null,null],[11,"err_code","","Bits 0:31 - If error interrupt occurs, this register has…",403,[[["self"]],["err_code_r"]]],[0,"wipe_secret","earlgrey_registers::hmac","Randomize internal secret registers. If CPU writes value…",null,null],[3,"SECRET_W","earlgrey_registers::hmac::wipe_secret","Write proxy for field `secret`",null,null],[6,"W","","Writer for register WIPE_SECRET",null,null],[11,"bits","","Writes raw bits to the field",404,[[["u32"]],["w"]]],[11,"secret","","Bits 0:31 - Secret value",405,[[["self"]],["secret_w"]]],[0,"msg_length_lower","earlgrey_registers::hmac","Received Message Length calculated by the HMAC in bits…",null,null],[6,"R","earlgrey_registers::hmac::msg_length_lower","Reader of register MSG_LENGTH_LOWER",null,null],[6,"V_R","","Reader of field `v`",null,null],[11,"v","","Bits 0:31 - Message Length [31:0]",406,[[["self"]],["v_r"]]],[0,"msg_length_upper","earlgrey_registers::hmac","Received Message Length calculated by the HMAC in bits…",null,null],[6,"R","earlgrey_registers::hmac::msg_length_upper","Reader of register MSG_LENGTH_UPPER",null,null],[6,"V_R","","Reader of field `v`",null,null],[11,"v","","Bits 0:31 - Message Length [63:32]",407,[[["self"]],["v_r"]]],[0,"msg_fifo","earlgrey_registers::hmac","Message FIFO. Any write to this window will be appended to…",null,null],[6,"W","earlgrey_registers::hmac::msg_fifo","Writer for register MSG_FIFO%s",null,null],[6,"INTR_STATE","earlgrey_registers::hmac","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[6,"CFG","","HMAC Configuration register. The register is updated when…",null,null],[6,"CMD","","HMAC command register",null,null],[6,"STATUS","","HMAC Status register",null,null],[6,"ERR_CODE","","HMAC Error Code",null,null],[6,"WIPE_SECRET","","Randomize internal secret registers. If CPU writes value…",null,null],[6,"MSG_LENGTH_LOWER","","Received Message Length calculated by the HMAC in bits…",null,null],[6,"MSG_LENGTH_UPPER","","Received Message Length calculated by the HMAC in bits…",null,null],[6,"MSG_FIFO","","Message FIFO. Any write to this window will be appended to…",null,null],[0,"rv_plic","earlgrey_registers","rv_plic",null,null],[3,"RegisterBlock","earlgrey_registers::rv_plic","Register block",null,null],[12,"ip","","0x00 - Interrupt Pending",408,null],[12,"le","","0x08 - Interrupt Source mode. 0: Level, 1: Edge-triggered",408,null],[12,"prio0","","0x10 - Interrupt Source 0 Priority",408,null],[12,"prio1","","0x14 - Interrupt Source 1 Priority",408,null],[12,"prio2","","0x18 - Interrupt Source 2 Priority",408,null],[12,"prio3","","0x1c - Interrupt Source 3 Priority",408,null],[12,"prio4","","0x20 - Interrupt Source 4 Priority",408,null],[12,"prio5","","0x24 - Interrupt Source 5 Priority",408,null],[12,"prio6","","0x28 - Interrupt Source 6 Priority",408,null],[12,"prio7","","0x2c - Interrupt Source 7 Priority",408,null],[12,"prio8","","0x30 - Interrupt Source 8 Priority",408,null],[12,"prio9","","0x34 - Interrupt Source 9 Priority",408,null],[12,"prio10","","0x38 - Interrupt Source 10 Priority",408,null],[12,"prio11","","0x3c - Interrupt Source 11 Priority",408,null],[12,"prio12","","0x40 - Interrupt Source 12 Priority",408,null],[12,"prio13","","0x44 - Interrupt Source 13 Priority",408,null],[12,"prio14","","0x48 - Interrupt Source 14 Priority",408,null],[12,"prio15","","0x4c - Interrupt Source 15 Priority",408,null],[12,"prio16","","0x50 - Interrupt Source 16 Priority",408,null],[12,"prio17","","0x54 - Interrupt Source 17 Priority",408,null],[12,"prio18","","0x58 - Interrupt Source 18 Priority",408,null],[12,"prio19","","0x5c - Interrupt Source 19 Priority",408,null],[12,"prio20","","0x60 - Interrupt Source 20 Priority",408,null],[12,"prio21","","0x64 - Interrupt Source 21 Priority",408,null],[12,"prio22","","0x68 - Interrupt Source 22 Priority",408,null],[12,"prio23","","0x6c - Interrupt Source 23 Priority",408,null],[12,"prio24","","0x70 - Interrupt Source 24 Priority",408,null],[12,"prio25","","0x74 - Interrupt Source 25 Priority",408,null],[12,"prio26","","0x78 - Interrupt Source 26 Priority",408,null],[12,"prio27","","0x7c - Interrupt Source 27 Priority",408,null],[12,"prio28","","0x80 - Interrupt Source 28 Priority",408,null],[12,"prio29","","0x84 - Interrupt Source 29 Priority",408,null],[12,"prio30","","0x88 - Interrupt Source 30 Priority",408,null],[12,"prio31","","0x8c - Interrupt Source 31 Priority",408,null],[12,"prio32","","0x90 - Interrupt Source 32 Priority",408,null],[12,"prio33","","0x94 - Interrupt Source 33 Priority",408,null],[12,"prio34","","0x98 - Interrupt Source 34 Priority",408,null],[12,"prio35","","0x9c - Interrupt Source 35 Priority",408,null],[12,"prio36","","0xa0 - Interrupt Source 36 Priority",408,null],[12,"prio37","","0xa4 - Interrupt Source 37 Priority",408,null],[12,"prio38","","0xa8 - Interrupt Source 38 Priority",408,null],[12,"prio39","","0xac - Interrupt Source 39 Priority",408,null],[12,"prio40","","0xb0 - Interrupt Source 40 Priority",408,null],[12,"prio41","","0xb4 - Interrupt Source 41 Priority",408,null],[12,"prio42","","0xb8 - Interrupt Source 42 Priority",408,null],[12,"prio43","","0xbc - Interrupt Source 43 Priority",408,null],[12,"prio44","","0xc0 - Interrupt Source 44 Priority",408,null],[12,"prio45","","0xc4 - Interrupt Source 45 Priority",408,null],[12,"prio46","","0xc8 - Interrupt Source 46 Priority",408,null],[12,"prio47","","0xcc - Interrupt Source 47 Priority",408,null],[12,"prio48","","0xd0 - Interrupt Source 48 Priority",408,null],[12,"prio49","","0xd4 - Interrupt Source 49 Priority",408,null],[12,"prio50","","0xd8 - Interrupt Source 50 Priority",408,null],[12,"prio51","","0xdc - Interrupt Source 51 Priority",408,null],[12,"prio52","","0xe0 - Interrupt Source 52 Priority",408,null],[12,"prio53","","0xe4 - Interrupt Source 53 Priority",408,null],[12,"prio54","","0xe8 - Interrupt Source 54 Priority",408,null],[12,"prio55","","0xec - Interrupt Source 55 Priority",408,null],[12,"prio56","","0xf0 - Interrupt Source 56 Priority",408,null],[12,"prio57","","0xf4 - Interrupt Source 57 Priority",408,null],[12,"prio58","","0xf8 - Interrupt Source 58 Priority",408,null],[12,"prio59","","0xfc - Interrupt Source 59 Priority",408,null],[12,"prio60","","0x100 - Interrupt Source 60 Priority",408,null],[12,"prio61","","0x104 - Interrupt Source 61 Priority",408,null],[12,"prio62","","0x108 - Interrupt Source 62 Priority",408,null],[12,"ie0","","0x200 - Interrupt Enable for Target 0",408,null],[12,"threshold0","","0x208 - Threshold of priority for Target 0",408,null],[12,"cc0","","0x20c - Claim interrupt by read, complete interrupt by…",408,null],[12,"msip0","","0x210 - msip for Hart 0. Write 1 to here asserts software…",408,null],[3,"IP","","Register block",null,null],[12,"ip0","","0x00 - Interrupt Pending",409,null],[12,"ip1","","0x04 - Interrupt Pending",409,null],[3,"LE","","Register block",null,null],[12,"le0","","0x00 - Interrupt Source mode. 0: Level, 1: Edge-triggered",410,null],[12,"le1","","0x04 - Interrupt Source mode. 0: Level, 1: Edge-triggered",410,null],[3,"IE0","","Register block",null,null],[12,"ie00","","0x00 - Interrupt Enable for Target 0",411,null],[12,"ie01","","0x04 - Interrupt Enable for Target 0",411,null],[0,"ip","","Register block Interrupt Pending",null,null],[0,"ip0","earlgrey_registers::rv_plic::ip","Interrupt Pending",null,null],[6,"R","earlgrey_registers::rv_plic::ip::ip0","Reader of register IP0",null,null],[6,"P0_R","","Reader of field `P0`",null,null],[6,"P1_R","","Reader of field `P1`",null,null],[6,"P2_R","","Reader of field `P2`",null,null],[6,"P3_R","","Reader of field `P3`",null,null],[6,"P4_R","","Reader of field `P4`",null,null],[6,"P5_R","","Reader of field `P5`",null,null],[6,"P6_R","","Reader of field `P6`",null,null],[6,"P7_R","","Reader of field `P7`",null,null],[6,"P8_R","","Reader of field `P8`",null,null],[6,"P9_R","","Reader of field `P9`",null,null],[6,"P10_R","","Reader of field `P10`",null,null],[6,"P11_R","","Reader of field `P11`",null,null],[6,"P12_R","","Reader of field `P12`",null,null],[6,"P13_R","","Reader of field `P13`",null,null],[6,"P14_R","","Reader of field `P14`",null,null],[6,"P15_R","","Reader of field `P15`",null,null],[6,"P16_R","","Reader of field `P16`",null,null],[6,"P17_R","","Reader of field `P17`",null,null],[6,"P18_R","","Reader of field `P18`",null,null],[6,"P19_R","","Reader of field `P19`",null,null],[6,"P20_R","","Reader of field `P20`",null,null],[6,"P21_R","","Reader of field `P21`",null,null],[6,"P22_R","","Reader of field `P22`",null,null],[6,"P23_R","","Reader of field `P23`",null,null],[6,"P24_R","","Reader of field `P24`",null,null],[6,"P25_R","","Reader of field `P25`",null,null],[6,"P26_R","","Reader of field `P26`",null,null],[6,"P27_R","","Reader of field `P27`",null,null],[6,"P28_R","","Reader of field `P28`",null,null],[6,"P29_R","","Reader of field `P29`",null,null],[6,"P30_R","","Reader of field `P30`",null,null],[6,"P31_R","","Reader of field `P31`",null,null],[11,"p0","","Bit 0 - Interrupt Pending of Source for RV_PLIC0",412,[[["self"]],["p0_r"]]],[11,"p1","","Bit 1 - for RV_PLIC1",412,[[["self"]],["p1_r"]]],[11,"p2","","Bit 2 - for RV_PLIC2",412,[[["self"]],["p2_r"]]],[11,"p3","","Bit 3 - for RV_PLIC3",412,[[["self"]],["p3_r"]]],[11,"p4","","Bit 4 - for RV_PLIC4",412,[[["self"]],["p4_r"]]],[11,"p5","","Bit 5 - for RV_PLIC5",412,[[["self"]],["p5_r"]]],[11,"p6","","Bit 6 - for RV_PLIC6",412,[[["self"]],["p6_r"]]],[11,"p7","","Bit 7 - for RV_PLIC7",412,[[["self"]],["p7_r"]]],[11,"p8","","Bit 8 - for RV_PLIC8",412,[[["self"]],["p8_r"]]],[11,"p9","","Bit 9 - for RV_PLIC9",412,[[["self"]],["p9_r"]]],[11,"p10","","Bit 10 - for RV_PLIC10",412,[[["self"]],["p10_r"]]],[11,"p11","","Bit 11 - for RV_PLIC11",412,[[["self"]],["p11_r"]]],[11,"p12","","Bit 12 - for RV_PLIC12",412,[[["self"]],["p12_r"]]],[11,"p13","","Bit 13 - for RV_PLIC13",412,[[["self"]],["p13_r"]]],[11,"p14","","Bit 14 - for RV_PLIC14",412,[[["self"]],["p14_r"]]],[11,"p15","","Bit 15 - for RV_PLIC15",412,[[["self"]],["p15_r"]]],[11,"p16","","Bit 16 - for RV_PLIC16",412,[[["self"]],["p16_r"]]],[11,"p17","","Bit 17 - for RV_PLIC17",412,[[["self"]],["p17_r"]]],[11,"p18","","Bit 18 - for RV_PLIC18",412,[[["self"]],["p18_r"]]],[11,"p19","","Bit 19 - for RV_PLIC19",412,[[["self"]],["p19_r"]]],[11,"p20","","Bit 20 - for RV_PLIC20",412,[[["self"]],["p20_r"]]],[11,"p21","","Bit 21 - for RV_PLIC21",412,[[["self"]],["p21_r"]]],[11,"p22","","Bit 22 - for RV_PLIC22",412,[[["self"]],["p22_r"]]],[11,"p23","","Bit 23 - for RV_PLIC23",412,[[["self"]],["p23_r"]]],[11,"p24","","Bit 24 - for RV_PLIC24",412,[[["self"]],["p24_r"]]],[11,"p25","","Bit 25 - for RV_PLIC25",412,[[["self"]],["p25_r"]]],[11,"p26","","Bit 26 - for RV_PLIC26",412,[[["self"]],["p26_r"]]],[11,"p27","","Bit 27 - for RV_PLIC27",412,[[["self"]],["p27_r"]]],[11,"p28","","Bit 28 - for RV_PLIC28",412,[[["self"]],["p28_r"]]],[11,"p29","","Bit 29 - for RV_PLIC29",412,[[["self"]],["p29_r"]]],[11,"p30","","Bit 30 - for RV_PLIC30",412,[[["self"]],["p30_r"]]],[11,"p31","","Bit 31 - for RV_PLIC31",412,[[["self"]],["p31_r"]]],[0,"ip1","earlgrey_registers::rv_plic::ip","Interrupt Pending",null,null],[6,"R","earlgrey_registers::rv_plic::ip::ip1","Reader of register IP1",null,null],[6,"P32_R","","Reader of field `P32`",null,null],[6,"P33_R","","Reader of field `P33`",null,null],[6,"P34_R","","Reader of field `P34`",null,null],[6,"P35_R","","Reader of field `P35`",null,null],[6,"P36_R","","Reader of field `P36`",null,null],[6,"P37_R","","Reader of field `P37`",null,null],[6,"P38_R","","Reader of field `P38`",null,null],[6,"P39_R","","Reader of field `P39`",null,null],[6,"P40_R","","Reader of field `P40`",null,null],[6,"P41_R","","Reader of field `P41`",null,null],[6,"P42_R","","Reader of field `P42`",null,null],[6,"P43_R","","Reader of field `P43`",null,null],[6,"P44_R","","Reader of field `P44`",null,null],[6,"P45_R","","Reader of field `P45`",null,null],[6,"P46_R","","Reader of field `P46`",null,null],[6,"P47_R","","Reader of field `P47`",null,null],[6,"P48_R","","Reader of field `P48`",null,null],[6,"P49_R","","Reader of field `P49`",null,null],[6,"P50_R","","Reader of field `P50`",null,null],[6,"P51_R","","Reader of field `P51`",null,null],[6,"P52_R","","Reader of field `P52`",null,null],[6,"P53_R","","Reader of field `P53`",null,null],[6,"P54_R","","Reader of field `P54`",null,null],[6,"P55_R","","Reader of field `P55`",null,null],[6,"P56_R","","Reader of field `P56`",null,null],[6,"P57_R","","Reader of field `P57`",null,null],[6,"P58_R","","Reader of field `P58`",null,null],[6,"P59_R","","Reader of field `P59`",null,null],[6,"P60_R","","Reader of field `P60`",null,null],[6,"P61_R","","Reader of field `P61`",null,null],[6,"P62_R","","Reader of field `P62`",null,null],[11,"p32","","Bit 0 - Interrupt Pending of Source for RV_PLIC32",413,[[["self"]],["p32_r"]]],[11,"p33","","Bit 1 - for RV_PLIC33",413,[[["self"]],["p33_r"]]],[11,"p34","","Bit 2 - for RV_PLIC34",413,[[["self"]],["p34_r"]]],[11,"p35","","Bit 3 - for RV_PLIC35",413,[[["self"]],["p35_r"]]],[11,"p36","","Bit 4 - for RV_PLIC36",413,[[["self"]],["p36_r"]]],[11,"p37","","Bit 5 - for RV_PLIC37",413,[[["self"]],["p37_r"]]],[11,"p38","","Bit 6 - for RV_PLIC38",413,[[["self"]],["p38_r"]]],[11,"p39","","Bit 7 - for RV_PLIC39",413,[[["self"]],["p39_r"]]],[11,"p40","","Bit 8 - for RV_PLIC40",413,[[["self"]],["p40_r"]]],[11,"p41","","Bit 9 - for RV_PLIC41",413,[[["self"]],["p41_r"]]],[11,"p42","","Bit 10 - for RV_PLIC42",413,[[["self"]],["p42_r"]]],[11,"p43","","Bit 11 - for RV_PLIC43",413,[[["self"]],["p43_r"]]],[11,"p44","","Bit 12 - for RV_PLIC44",413,[[["self"]],["p44_r"]]],[11,"p45","","Bit 13 - for RV_PLIC45",413,[[["self"]],["p45_r"]]],[11,"p46","","Bit 14 - for RV_PLIC46",413,[[["self"]],["p46_r"]]],[11,"p47","","Bit 15 - for RV_PLIC47",413,[[["self"]],["p47_r"]]],[11,"p48","","Bit 16 - for RV_PLIC48",413,[[["self"]],["p48_r"]]],[11,"p49","","Bit 17 - for RV_PLIC49",413,[[["self"]],["p49_r"]]],[11,"p50","","Bit 18 - for RV_PLIC50",413,[[["self"]],["p50_r"]]],[11,"p51","","Bit 19 - for RV_PLIC51",413,[[["self"]],["p51_r"]]],[11,"p52","","Bit 20 - for RV_PLIC52",413,[[["self"]],["p52_r"]]],[11,"p53","","Bit 21 - for RV_PLIC53",413,[[["self"]],["p53_r"]]],[11,"p54","","Bit 22 - for RV_PLIC54",413,[[["self"]],["p54_r"]]],[11,"p55","","Bit 23 - for RV_PLIC55",413,[[["self"]],["p55_r"]]],[11,"p56","","Bit 24 - for RV_PLIC56",413,[[["self"]],["p56_r"]]],[11,"p57","","Bit 25 - for RV_PLIC57",413,[[["self"]],["p57_r"]]],[11,"p58","","Bit 26 - for RV_PLIC58",413,[[["self"]],["p58_r"]]],[11,"p59","","Bit 27 - for RV_PLIC59",413,[[["self"]],["p59_r"]]],[11,"p60","","Bit 28 - for RV_PLIC60",413,[[["self"]],["p60_r"]]],[11,"p61","","Bit 29 - for RV_PLIC61",413,[[["self"]],["p61_r"]]],[11,"p62","","Bit 30 - for RV_PLIC62",413,[[["self"]],["p62_r"]]],[6,"IP0","earlgrey_registers::rv_plic::ip","Interrupt Pending",null,null],[6,"IP1","","Interrupt Pending",null,null],[0,"le","earlgrey_registers::rv_plic","Register block Interrupt Source mode. 0: Level, 1:…",null,null],[0,"le0","earlgrey_registers::rv_plic::le","Interrupt Source mode. 0: Level, 1: Edge-triggered",null,null],[3,"LE0_W","earlgrey_registers::rv_plic::le::le0","Write proxy for field `LE0`",null,null],[3,"LE1_W","","Write proxy for field `LE1`",null,null],[3,"LE2_W","","Write proxy for field `LE2`",null,null],[3,"LE3_W","","Write proxy for field `LE3`",null,null],[3,"LE4_W","","Write proxy for field `LE4`",null,null],[3,"LE5_W","","Write proxy for field `LE5`",null,null],[3,"LE6_W","","Write proxy for field `LE6`",null,null],[3,"LE7_W","","Write proxy for field `LE7`",null,null],[3,"LE8_W","","Write proxy for field `LE8`",null,null],[3,"LE9_W","","Write proxy for field `LE9`",null,null],[3,"LE10_W","","Write proxy for field `LE10`",null,null],[3,"LE11_W","","Write proxy for field `LE11`",null,null],[3,"LE12_W","","Write proxy for field `LE12`",null,null],[3,"LE13_W","","Write proxy for field `LE13`",null,null],[3,"LE14_W","","Write proxy for field `LE14`",null,null],[3,"LE15_W","","Write proxy for field `LE15`",null,null],[3,"LE16_W","","Write proxy for field `LE16`",null,null],[3,"LE17_W","","Write proxy for field `LE17`",null,null],[3,"LE18_W","","Write proxy for field `LE18`",null,null],[3,"LE19_W","","Write proxy for field `LE19`",null,null],[3,"LE20_W","","Write proxy for field `LE20`",null,null],[3,"LE21_W","","Write proxy for field `LE21`",null,null],[3,"LE22_W","","Write proxy for field `LE22`",null,null],[3,"LE23_W","","Write proxy for field `LE23`",null,null],[3,"LE24_W","","Write proxy for field `LE24`",null,null],[3,"LE25_W","","Write proxy for field `LE25`",null,null],[3,"LE26_W","","Write proxy for field `LE26`",null,null],[3,"LE27_W","","Write proxy for field `LE27`",null,null],[3,"LE28_W","","Write proxy for field `LE28`",null,null],[3,"LE29_W","","Write proxy for field `LE29`",null,null],[3,"LE30_W","","Write proxy for field `LE30`",null,null],[3,"LE31_W","","Write proxy for field `LE31`",null,null],[6,"R","","Reader of register LE0",null,null],[6,"W","","Writer for register LE0",null,null],[6,"LE0_R","","Reader of field `LE0`",null,null],[6,"LE1_R","","Reader of field `LE1`",null,null],[6,"LE2_R","","Reader of field `LE2`",null,null],[6,"LE3_R","","Reader of field `LE3`",null,null],[6,"LE4_R","","Reader of field `LE4`",null,null],[6,"LE5_R","","Reader of field `LE5`",null,null],[6,"LE6_R","","Reader of field `LE6`",null,null],[6,"LE7_R","","Reader of field `LE7`",null,null],[6,"LE8_R","","Reader of field `LE8`",null,null],[6,"LE9_R","","Reader of field `LE9`",null,null],[6,"LE10_R","","Reader of field `LE10`",null,null],[6,"LE11_R","","Reader of field `LE11`",null,null],[6,"LE12_R","","Reader of field `LE12`",null,null],[6,"LE13_R","","Reader of field `LE13`",null,null],[6,"LE14_R","","Reader of field `LE14`",null,null],[6,"LE15_R","","Reader of field `LE15`",null,null],[6,"LE16_R","","Reader of field `LE16`",null,null],[6,"LE17_R","","Reader of field `LE17`",null,null],[6,"LE18_R","","Reader of field `LE18`",null,null],[6,"LE19_R","","Reader of field `LE19`",null,null],[6,"LE20_R","","Reader of field `LE20`",null,null],[6,"LE21_R","","Reader of field `LE21`",null,null],[6,"LE22_R","","Reader of field `LE22`",null,null],[6,"LE23_R","","Reader of field `LE23`",null,null],[6,"LE24_R","","Reader of field `LE24`",null,null],[6,"LE25_R","","Reader of field `LE25`",null,null],[6,"LE26_R","","Reader of field `LE26`",null,null],[6,"LE27_R","","Reader of field `LE27`",null,null],[6,"LE28_R","","Reader of field `LE28`",null,null],[6,"LE29_R","","Reader of field `LE29`",null,null],[6,"LE30_R","","Reader of field `LE30`",null,null],[6,"LE31_R","","Reader of field `LE31`",null,null],[11,"set_bit","","Sets the field bit",414,[[],["w"]]],[11,"clear_bit","","Clears the field bit",414,[[],["w"]]],[11,"bit","","Writes raw bits to the field",414,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",415,[[],["w"]]],[11,"clear_bit","","Clears the field bit",415,[[],["w"]]],[11,"bit","","Writes raw bits to the field",415,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",416,[[],["w"]]],[11,"clear_bit","","Clears the field bit",416,[[],["w"]]],[11,"bit","","Writes raw bits to the field",416,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",417,[[],["w"]]],[11,"clear_bit","","Clears the field bit",417,[[],["w"]]],[11,"bit","","Writes raw bits to the field",417,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",418,[[],["w"]]],[11,"clear_bit","","Clears the field bit",418,[[],["w"]]],[11,"bit","","Writes raw bits to the field",418,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",419,[[],["w"]]],[11,"clear_bit","","Clears the field bit",419,[[],["w"]]],[11,"bit","","Writes raw bits to the field",419,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",420,[[],["w"]]],[11,"clear_bit","","Clears the field bit",420,[[],["w"]]],[11,"bit","","Writes raw bits to the field",420,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",421,[[],["w"]]],[11,"clear_bit","","Clears the field bit",421,[[],["w"]]],[11,"bit","","Writes raw bits to the field",421,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",422,[[],["w"]]],[11,"clear_bit","","Clears the field bit",422,[[],["w"]]],[11,"bit","","Writes raw bits to the field",422,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",423,[[],["w"]]],[11,"clear_bit","","Clears the field bit",423,[[],["w"]]],[11,"bit","","Writes raw bits to the field",423,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",424,[[],["w"]]],[11,"clear_bit","","Clears the field bit",424,[[],["w"]]],[11,"bit","","Writes raw bits to the field",424,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",425,[[],["w"]]],[11,"clear_bit","","Clears the field bit",425,[[],["w"]]],[11,"bit","","Writes raw bits to the field",425,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",426,[[],["w"]]],[11,"clear_bit","","Clears the field bit",426,[[],["w"]]],[11,"bit","","Writes raw bits to the field",426,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",427,[[],["w"]]],[11,"clear_bit","","Clears the field bit",427,[[],["w"]]],[11,"bit","","Writes raw bits to the field",427,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",428,[[],["w"]]],[11,"clear_bit","","Clears the field bit",428,[[],["w"]]],[11,"bit","","Writes raw bits to the field",428,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",429,[[],["w"]]],[11,"clear_bit","","Clears the field bit",429,[[],["w"]]],[11,"bit","","Writes raw bits to the field",429,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",430,[[],["w"]]],[11,"clear_bit","","Clears the field bit",430,[[],["w"]]],[11,"bit","","Writes raw bits to the field",430,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",431,[[],["w"]]],[11,"clear_bit","","Clears the field bit",431,[[],["w"]]],[11,"bit","","Writes raw bits to the field",431,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",432,[[],["w"]]],[11,"clear_bit","","Clears the field bit",432,[[],["w"]]],[11,"bit","","Writes raw bits to the field",432,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",433,[[],["w"]]],[11,"clear_bit","","Clears the field bit",433,[[],["w"]]],[11,"bit","","Writes raw bits to the field",433,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",434,[[],["w"]]],[11,"clear_bit","","Clears the field bit",434,[[],["w"]]],[11,"bit","","Writes raw bits to the field",434,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",435,[[],["w"]]],[11,"clear_bit","","Clears the field bit",435,[[],["w"]]],[11,"bit","","Writes raw bits to the field",435,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",436,[[],["w"]]],[11,"clear_bit","","Clears the field bit",436,[[],["w"]]],[11,"bit","","Writes raw bits to the field",436,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",437,[[],["w"]]],[11,"clear_bit","","Clears the field bit",437,[[],["w"]]],[11,"bit","","Writes raw bits to the field",437,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",438,[[],["w"]]],[11,"clear_bit","","Clears the field bit",438,[[],["w"]]],[11,"bit","","Writes raw bits to the field",438,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",439,[[],["w"]]],[11,"clear_bit","","Clears the field bit",439,[[],["w"]]],[11,"bit","","Writes raw bits to the field",439,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",440,[[],["w"]]],[11,"clear_bit","","Clears the field bit",440,[[],["w"]]],[11,"bit","","Writes raw bits to the field",440,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",441,[[],["w"]]],[11,"clear_bit","","Clears the field bit",441,[[],["w"]]],[11,"bit","","Writes raw bits to the field",441,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",442,[[],["w"]]],[11,"clear_bit","","Clears the field bit",442,[[],["w"]]],[11,"bit","","Writes raw bits to the field",442,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",443,[[],["w"]]],[11,"clear_bit","","Clears the field bit",443,[[],["w"]]],[11,"bit","","Writes raw bits to the field",443,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",444,[[],["w"]]],[11,"clear_bit","","Clears the field bit",444,[[],["w"]]],[11,"bit","","Writes raw bits to the field",444,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",445,[[],["w"]]],[11,"clear_bit","","Clears the field bit",445,[[],["w"]]],[11,"bit","","Writes raw bits to the field",445,[[["bool"]],["w"]]],[11,"le0","","Bit 0 - L0E1 for RV_PLIC0",446,[[["self"]],["le0_r"]]],[11,"le1","","Bit 1 - for RV_PLIC1",446,[[["self"]],["le1_r"]]],[11,"le2","","Bit 2 - for RV_PLIC2",446,[[["self"]],["le2_r"]]],[11,"le3","","Bit 3 - for RV_PLIC3",446,[[["self"]],["le3_r"]]],[11,"le4","","Bit 4 - for RV_PLIC4",446,[[["self"]],["le4_r"]]],[11,"le5","","Bit 5 - for RV_PLIC5",446,[[["self"]],["le5_r"]]],[11,"le6","","Bit 6 - for RV_PLIC6",446,[[["self"]],["le6_r"]]],[11,"le7","","Bit 7 - for RV_PLIC7",446,[[["self"]],["le7_r"]]],[11,"le8","","Bit 8 - for RV_PLIC8",446,[[["self"]],["le8_r"]]],[11,"le9","","Bit 9 - for RV_PLIC9",446,[[["self"]],["le9_r"]]],[11,"le10","","Bit 10 - for RV_PLIC10",446,[[["self"]],["le10_r"]]],[11,"le11","","Bit 11 - for RV_PLIC11",446,[[["self"]],["le11_r"]]],[11,"le12","","Bit 12 - for RV_PLIC12",446,[[["self"]],["le12_r"]]],[11,"le13","","Bit 13 - for RV_PLIC13",446,[[["self"]],["le13_r"]]],[11,"le14","","Bit 14 - for RV_PLIC14",446,[[["self"]],["le14_r"]]],[11,"le15","","Bit 15 - for RV_PLIC15",446,[[["self"]],["le15_r"]]],[11,"le16","","Bit 16 - for RV_PLIC16",446,[[["self"]],["le16_r"]]],[11,"le17","","Bit 17 - for RV_PLIC17",446,[[["self"]],["le17_r"]]],[11,"le18","","Bit 18 - for RV_PLIC18",446,[[["self"]],["le18_r"]]],[11,"le19","","Bit 19 - for RV_PLIC19",446,[[["self"]],["le19_r"]]],[11,"le20","","Bit 20 - for RV_PLIC20",446,[[["self"]],["le20_r"]]],[11,"le21","","Bit 21 - for RV_PLIC21",446,[[["self"]],["le21_r"]]],[11,"le22","","Bit 22 - for RV_PLIC22",446,[[["self"]],["le22_r"]]],[11,"le23","","Bit 23 - for RV_PLIC23",446,[[["self"]],["le23_r"]]],[11,"le24","","Bit 24 - for RV_PLIC24",446,[[["self"]],["le24_r"]]],[11,"le25","","Bit 25 - for RV_PLIC25",446,[[["self"]],["le25_r"]]],[11,"le26","","Bit 26 - for RV_PLIC26",446,[[["self"]],["le26_r"]]],[11,"le27","","Bit 27 - for RV_PLIC27",446,[[["self"]],["le27_r"]]],[11,"le28","","Bit 28 - for RV_PLIC28",446,[[["self"]],["le28_r"]]],[11,"le29","","Bit 29 - for RV_PLIC29",446,[[["self"]],["le29_r"]]],[11,"le30","","Bit 30 - for RV_PLIC30",446,[[["self"]],["le30_r"]]],[11,"le31","","Bit 31 - for RV_PLIC31",446,[[["self"]],["le31_r"]]],[11,"le0","","Bit 0 - L0E1 for RV_PLIC0",447,[[["self"]],["le0_w"]]],[11,"le1","","Bit 1 - for RV_PLIC1",447,[[["self"]],["le1_w"]]],[11,"le2","","Bit 2 - for RV_PLIC2",447,[[["self"]],["le2_w"]]],[11,"le3","","Bit 3 - for RV_PLIC3",447,[[["self"]],["le3_w"]]],[11,"le4","","Bit 4 - for RV_PLIC4",447,[[["self"]],["le4_w"]]],[11,"le5","","Bit 5 - for RV_PLIC5",447,[[["self"]],["le5_w"]]],[11,"le6","","Bit 6 - for RV_PLIC6",447,[[["self"]],["le6_w"]]],[11,"le7","","Bit 7 - for RV_PLIC7",447,[[["self"]],["le7_w"]]],[11,"le8","","Bit 8 - for RV_PLIC8",447,[[["self"]],["le8_w"]]],[11,"le9","","Bit 9 - for RV_PLIC9",447,[[["self"]],["le9_w"]]],[11,"le10","","Bit 10 - for RV_PLIC10",447,[[["self"]],["le10_w"]]],[11,"le11","","Bit 11 - for RV_PLIC11",447,[[["self"]],["le11_w"]]],[11,"le12","","Bit 12 - for RV_PLIC12",447,[[["self"]],["le12_w"]]],[11,"le13","","Bit 13 - for RV_PLIC13",447,[[["self"]],["le13_w"]]],[11,"le14","","Bit 14 - for RV_PLIC14",447,[[["self"]],["le14_w"]]],[11,"le15","","Bit 15 - for RV_PLIC15",447,[[["self"]],["le15_w"]]],[11,"le16","","Bit 16 - for RV_PLIC16",447,[[["self"]],["le16_w"]]],[11,"le17","","Bit 17 - for RV_PLIC17",447,[[["self"]],["le17_w"]]],[11,"le18","","Bit 18 - for RV_PLIC18",447,[[["self"]],["le18_w"]]],[11,"le19","","Bit 19 - for RV_PLIC19",447,[[["self"]],["le19_w"]]],[11,"le20","","Bit 20 - for RV_PLIC20",447,[[["self"]],["le20_w"]]],[11,"le21","","Bit 21 - for RV_PLIC21",447,[[["self"]],["le21_w"]]],[11,"le22","","Bit 22 - for RV_PLIC22",447,[[["self"]],["le22_w"]]],[11,"le23","","Bit 23 - for RV_PLIC23",447,[[["self"]],["le23_w"]]],[11,"le24","","Bit 24 - for RV_PLIC24",447,[[["self"]],["le24_w"]]],[11,"le25","","Bit 25 - for RV_PLIC25",447,[[["self"]],["le25_w"]]],[11,"le26","","Bit 26 - for RV_PLIC26",447,[[["self"]],["le26_w"]]],[11,"le27","","Bit 27 - for RV_PLIC27",447,[[["self"]],["le27_w"]]],[11,"le28","","Bit 28 - for RV_PLIC28",447,[[["self"]],["le28_w"]]],[11,"le29","","Bit 29 - for RV_PLIC29",447,[[["self"]],["le29_w"]]],[11,"le30","","Bit 30 - for RV_PLIC30",447,[[["self"]],["le30_w"]]],[11,"le31","","Bit 31 - for RV_PLIC31",447,[[["self"]],["le31_w"]]],[0,"le1","earlgrey_registers::rv_plic::le","Interrupt Source mode. 0: Level, 1: Edge-triggered",null,null],[3,"LE32_W","earlgrey_registers::rv_plic::le::le1","Write proxy for field `LE32`",null,null],[3,"LE33_W","","Write proxy for field `LE33`",null,null],[3,"LE34_W","","Write proxy for field `LE34`",null,null],[3,"LE35_W","","Write proxy for field `LE35`",null,null],[3,"LE36_W","","Write proxy for field `LE36`",null,null],[3,"LE37_W","","Write proxy for field `LE37`",null,null],[3,"LE38_W","","Write proxy for field `LE38`",null,null],[3,"LE39_W","","Write proxy for field `LE39`",null,null],[3,"LE40_W","","Write proxy for field `LE40`",null,null],[3,"LE41_W","","Write proxy for field `LE41`",null,null],[3,"LE42_W","","Write proxy for field `LE42`",null,null],[3,"LE43_W","","Write proxy for field `LE43`",null,null],[3,"LE44_W","","Write proxy for field `LE44`",null,null],[3,"LE45_W","","Write proxy for field `LE45`",null,null],[3,"LE46_W","","Write proxy for field `LE46`",null,null],[3,"LE47_W","","Write proxy for field `LE47`",null,null],[3,"LE48_W","","Write proxy for field `LE48`",null,null],[3,"LE49_W","","Write proxy for field `LE49`",null,null],[3,"LE50_W","","Write proxy for field `LE50`",null,null],[3,"LE51_W","","Write proxy for field `LE51`",null,null],[3,"LE52_W","","Write proxy for field `LE52`",null,null],[3,"LE53_W","","Write proxy for field `LE53`",null,null],[3,"LE54_W","","Write proxy for field `LE54`",null,null],[3,"LE55_W","","Write proxy for field `LE55`",null,null],[3,"LE56_W","","Write proxy for field `LE56`",null,null],[3,"LE57_W","","Write proxy for field `LE57`",null,null],[3,"LE58_W","","Write proxy for field `LE58`",null,null],[3,"LE59_W","","Write proxy for field `LE59`",null,null],[3,"LE60_W","","Write proxy for field `LE60`",null,null],[3,"LE61_W","","Write proxy for field `LE61`",null,null],[3,"LE62_W","","Write proxy for field `LE62`",null,null],[6,"R","","Reader of register LE1",null,null],[6,"W","","Writer for register LE1",null,null],[6,"LE32_R","","Reader of field `LE32`",null,null],[6,"LE33_R","","Reader of field `LE33`",null,null],[6,"LE34_R","","Reader of field `LE34`",null,null],[6,"LE35_R","","Reader of field `LE35`",null,null],[6,"LE36_R","","Reader of field `LE36`",null,null],[6,"LE37_R","","Reader of field `LE37`",null,null],[6,"LE38_R","","Reader of field `LE38`",null,null],[6,"LE39_R","","Reader of field `LE39`",null,null],[6,"LE40_R","","Reader of field `LE40`",null,null],[6,"LE41_R","","Reader of field `LE41`",null,null],[6,"LE42_R","","Reader of field `LE42`",null,null],[6,"LE43_R","","Reader of field `LE43`",null,null],[6,"LE44_R","","Reader of field `LE44`",null,null],[6,"LE45_R","","Reader of field `LE45`",null,null],[6,"LE46_R","","Reader of field `LE46`",null,null],[6,"LE47_R","","Reader of field `LE47`",null,null],[6,"LE48_R","","Reader of field `LE48`",null,null],[6,"LE49_R","","Reader of field `LE49`",null,null],[6,"LE50_R","","Reader of field `LE50`",null,null],[6,"LE51_R","","Reader of field `LE51`",null,null],[6,"LE52_R","","Reader of field `LE52`",null,null],[6,"LE53_R","","Reader of field `LE53`",null,null],[6,"LE54_R","","Reader of field `LE54`",null,null],[6,"LE55_R","","Reader of field `LE55`",null,null],[6,"LE56_R","","Reader of field `LE56`",null,null],[6,"LE57_R","","Reader of field `LE57`",null,null],[6,"LE58_R","","Reader of field `LE58`",null,null],[6,"LE59_R","","Reader of field `LE59`",null,null],[6,"LE60_R","","Reader of field `LE60`",null,null],[6,"LE61_R","","Reader of field `LE61`",null,null],[6,"LE62_R","","Reader of field `LE62`",null,null],[11,"set_bit","","Sets the field bit",448,[[],["w"]]],[11,"clear_bit","","Clears the field bit",448,[[],["w"]]],[11,"bit","","Writes raw bits to the field",448,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",449,[[],["w"]]],[11,"clear_bit","","Clears the field bit",449,[[],["w"]]],[11,"bit","","Writes raw bits to the field",449,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",450,[[],["w"]]],[11,"clear_bit","","Clears the field bit",450,[[],["w"]]],[11,"bit","","Writes raw bits to the field",450,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",451,[[],["w"]]],[11,"clear_bit","","Clears the field bit",451,[[],["w"]]],[11,"bit","","Writes raw bits to the field",451,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",452,[[],["w"]]],[11,"clear_bit","","Clears the field bit",452,[[],["w"]]],[11,"bit","","Writes raw bits to the field",452,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",453,[[],["w"]]],[11,"clear_bit","","Clears the field bit",453,[[],["w"]]],[11,"bit","","Writes raw bits to the field",453,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",454,[[],["w"]]],[11,"clear_bit","","Clears the field bit",454,[[],["w"]]],[11,"bit","","Writes raw bits to the field",454,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",455,[[],["w"]]],[11,"clear_bit","","Clears the field bit",455,[[],["w"]]],[11,"bit","","Writes raw bits to the field",455,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",456,[[],["w"]]],[11,"clear_bit","","Clears the field bit",456,[[],["w"]]],[11,"bit","","Writes raw bits to the field",456,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",457,[[],["w"]]],[11,"clear_bit","","Clears the field bit",457,[[],["w"]]],[11,"bit","","Writes raw bits to the field",457,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",458,[[],["w"]]],[11,"clear_bit","","Clears the field bit",458,[[],["w"]]],[11,"bit","","Writes raw bits to the field",458,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",459,[[],["w"]]],[11,"clear_bit","","Clears the field bit",459,[[],["w"]]],[11,"bit","","Writes raw bits to the field",459,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",460,[[],["w"]]],[11,"clear_bit","","Clears the field bit",460,[[],["w"]]],[11,"bit","","Writes raw bits to the field",460,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",461,[[],["w"]]],[11,"clear_bit","","Clears the field bit",461,[[],["w"]]],[11,"bit","","Writes raw bits to the field",461,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",462,[[],["w"]]],[11,"clear_bit","","Clears the field bit",462,[[],["w"]]],[11,"bit","","Writes raw bits to the field",462,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",463,[[],["w"]]],[11,"clear_bit","","Clears the field bit",463,[[],["w"]]],[11,"bit","","Writes raw bits to the field",463,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",464,[[],["w"]]],[11,"clear_bit","","Clears the field bit",464,[[],["w"]]],[11,"bit","","Writes raw bits to the field",464,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",465,[[],["w"]]],[11,"clear_bit","","Clears the field bit",465,[[],["w"]]],[11,"bit","","Writes raw bits to the field",465,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",466,[[],["w"]]],[11,"clear_bit","","Clears the field bit",466,[[],["w"]]],[11,"bit","","Writes raw bits to the field",466,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",467,[[],["w"]]],[11,"clear_bit","","Clears the field bit",467,[[],["w"]]],[11,"bit","","Writes raw bits to the field",467,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",468,[[],["w"]]],[11,"clear_bit","","Clears the field bit",468,[[],["w"]]],[11,"bit","","Writes raw bits to the field",468,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",469,[[],["w"]]],[11,"clear_bit","","Clears the field bit",469,[[],["w"]]],[11,"bit","","Writes raw bits to the field",469,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",470,[[],["w"]]],[11,"clear_bit","","Clears the field bit",470,[[],["w"]]],[11,"bit","","Writes raw bits to the field",470,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",471,[[],["w"]]],[11,"clear_bit","","Clears the field bit",471,[[],["w"]]],[11,"bit","","Writes raw bits to the field",471,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",472,[[],["w"]]],[11,"clear_bit","","Clears the field bit",472,[[],["w"]]],[11,"bit","","Writes raw bits to the field",472,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",473,[[],["w"]]],[11,"clear_bit","","Clears the field bit",473,[[],["w"]]],[11,"bit","","Writes raw bits to the field",473,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",474,[[],["w"]]],[11,"clear_bit","","Clears the field bit",474,[[],["w"]]],[11,"bit","","Writes raw bits to the field",474,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",475,[[],["w"]]],[11,"clear_bit","","Clears the field bit",475,[[],["w"]]],[11,"bit","","Writes raw bits to the field",475,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",476,[[],["w"]]],[11,"clear_bit","","Clears the field bit",476,[[],["w"]]],[11,"bit","","Writes raw bits to the field",476,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",477,[[],["w"]]],[11,"clear_bit","","Clears the field bit",477,[[],["w"]]],[11,"bit","","Writes raw bits to the field",477,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",478,[[],["w"]]],[11,"clear_bit","","Clears the field bit",478,[[],["w"]]],[11,"bit","","Writes raw bits to the field",478,[[["bool"]],["w"]]],[11,"le32","","Bit 0 - L0E1 for RV_PLIC32",479,[[["self"]],["le32_r"]]],[11,"le33","","Bit 1 - for RV_PLIC33",479,[[["self"]],["le33_r"]]],[11,"le34","","Bit 2 - for RV_PLIC34",479,[[["self"]],["le34_r"]]],[11,"le35","","Bit 3 - for RV_PLIC35",479,[[["self"]],["le35_r"]]],[11,"le36","","Bit 4 - for RV_PLIC36",479,[[["self"]],["le36_r"]]],[11,"le37","","Bit 5 - for RV_PLIC37",479,[[["self"]],["le37_r"]]],[11,"le38","","Bit 6 - for RV_PLIC38",479,[[["self"]],["le38_r"]]],[11,"le39","","Bit 7 - for RV_PLIC39",479,[[["self"]],["le39_r"]]],[11,"le40","","Bit 8 - for RV_PLIC40",479,[[["self"]],["le40_r"]]],[11,"le41","","Bit 9 - for RV_PLIC41",479,[[["self"]],["le41_r"]]],[11,"le42","","Bit 10 - for RV_PLIC42",479,[[["self"]],["le42_r"]]],[11,"le43","","Bit 11 - for RV_PLIC43",479,[[["self"]],["le43_r"]]],[11,"le44","","Bit 12 - for RV_PLIC44",479,[[["self"]],["le44_r"]]],[11,"le45","","Bit 13 - for RV_PLIC45",479,[[["self"]],["le45_r"]]],[11,"le46","","Bit 14 - for RV_PLIC46",479,[[["self"]],["le46_r"]]],[11,"le47","","Bit 15 - for RV_PLIC47",479,[[["self"]],["le47_r"]]],[11,"le48","","Bit 16 - for RV_PLIC48",479,[[["self"]],["le48_r"]]],[11,"le49","","Bit 17 - for RV_PLIC49",479,[[["self"]],["le49_r"]]],[11,"le50","","Bit 18 - for RV_PLIC50",479,[[["self"]],["le50_r"]]],[11,"le51","","Bit 19 - for RV_PLIC51",479,[[["self"]],["le51_r"]]],[11,"le52","","Bit 20 - for RV_PLIC52",479,[[["self"]],["le52_r"]]],[11,"le53","","Bit 21 - for RV_PLIC53",479,[[["self"]],["le53_r"]]],[11,"le54","","Bit 22 - for RV_PLIC54",479,[[["self"]],["le54_r"]]],[11,"le55","","Bit 23 - for RV_PLIC55",479,[[["self"]],["le55_r"]]],[11,"le56","","Bit 24 - for RV_PLIC56",479,[[["self"]],["le56_r"]]],[11,"le57","","Bit 25 - for RV_PLIC57",479,[[["self"]],["le57_r"]]],[11,"le58","","Bit 26 - for RV_PLIC58",479,[[["self"]],["le58_r"]]],[11,"le59","","Bit 27 - for RV_PLIC59",479,[[["self"]],["le59_r"]]],[11,"le60","","Bit 28 - for RV_PLIC60",479,[[["self"]],["le60_r"]]],[11,"le61","","Bit 29 - for RV_PLIC61",479,[[["self"]],["le61_r"]]],[11,"le62","","Bit 30 - for RV_PLIC62",479,[[["self"]],["le62_r"]]],[11,"le32","","Bit 0 - L0E1 for RV_PLIC32",480,[[["self"]],["le32_w"]]],[11,"le33","","Bit 1 - for RV_PLIC33",480,[[["self"]],["le33_w"]]],[11,"le34","","Bit 2 - for RV_PLIC34",480,[[["self"]],["le34_w"]]],[11,"le35","","Bit 3 - for RV_PLIC35",480,[[["self"]],["le35_w"]]],[11,"le36","","Bit 4 - for RV_PLIC36",480,[[["self"]],["le36_w"]]],[11,"le37","","Bit 5 - for RV_PLIC37",480,[[["self"]],["le37_w"]]],[11,"le38","","Bit 6 - for RV_PLIC38",480,[[["self"]],["le38_w"]]],[11,"le39","","Bit 7 - for RV_PLIC39",480,[[["self"]],["le39_w"]]],[11,"le40","","Bit 8 - for RV_PLIC40",480,[[["self"]],["le40_w"]]],[11,"le41","","Bit 9 - for RV_PLIC41",480,[[["self"]],["le41_w"]]],[11,"le42","","Bit 10 - for RV_PLIC42",480,[[["self"]],["le42_w"]]],[11,"le43","","Bit 11 - for RV_PLIC43",480,[[["self"]],["le43_w"]]],[11,"le44","","Bit 12 - for RV_PLIC44",480,[[["self"]],["le44_w"]]],[11,"le45","","Bit 13 - for RV_PLIC45",480,[[["self"]],["le45_w"]]],[11,"le46","","Bit 14 - for RV_PLIC46",480,[[["self"]],["le46_w"]]],[11,"le47","","Bit 15 - for RV_PLIC47",480,[[["self"]],["le47_w"]]],[11,"le48","","Bit 16 - for RV_PLIC48",480,[[["self"]],["le48_w"]]],[11,"le49","","Bit 17 - for RV_PLIC49",480,[[["self"]],["le49_w"]]],[11,"le50","","Bit 18 - for RV_PLIC50",480,[[["self"]],["le50_w"]]],[11,"le51","","Bit 19 - for RV_PLIC51",480,[[["self"]],["le51_w"]]],[11,"le52","","Bit 20 - for RV_PLIC52",480,[[["self"]],["le52_w"]]],[11,"le53","","Bit 21 - for RV_PLIC53",480,[[["self"]],["le53_w"]]],[11,"le54","","Bit 22 - for RV_PLIC54",480,[[["self"]],["le54_w"]]],[11,"le55","","Bit 23 - for RV_PLIC55",480,[[["self"]],["le55_w"]]],[11,"le56","","Bit 24 - for RV_PLIC56",480,[[["self"]],["le56_w"]]],[11,"le57","","Bit 25 - for RV_PLIC57",480,[[["self"]],["le57_w"]]],[11,"le58","","Bit 26 - for RV_PLIC58",480,[[["self"]],["le58_w"]]],[11,"le59","","Bit 27 - for RV_PLIC59",480,[[["self"]],["le59_w"]]],[11,"le60","","Bit 28 - for RV_PLIC60",480,[[["self"]],["le60_w"]]],[11,"le61","","Bit 29 - for RV_PLIC61",480,[[["self"]],["le61_w"]]],[11,"le62","","Bit 30 - for RV_PLIC62",480,[[["self"]],["le62_w"]]],[6,"LE0","earlgrey_registers::rv_plic::le","Interrupt Source mode. 0: Level, 1: Edge-triggered",null,null],[6,"LE1","","Interrupt Source mode. 0: Level, 1: Edge-triggered",null,null],[0,"ie0","earlgrey_registers::rv_plic","Register block Interrupt Enable for Target 0",null,null],[0,"ie00","earlgrey_registers::rv_plic::ie0","Interrupt Enable for Target 0",null,null],[3,"E0_W","earlgrey_registers::rv_plic::ie0::ie00","Write proxy for field `E0`",null,null],[3,"E1_W","","Write proxy for field `E1`",null,null],[3,"E2_W","","Write proxy for field `E2`",null,null],[3,"E3_W","","Write proxy for field `E3`",null,null],[3,"E4_W","","Write proxy for field `E4`",null,null],[3,"E5_W","","Write proxy for field `E5`",null,null],[3,"E6_W","","Write proxy for field `E6`",null,null],[3,"E7_W","","Write proxy for field `E7`",null,null],[3,"E8_W","","Write proxy for field `E8`",null,null],[3,"E9_W","","Write proxy for field `E9`",null,null],[3,"E10_W","","Write proxy for field `E10`",null,null],[3,"E11_W","","Write proxy for field `E11`",null,null],[3,"E12_W","","Write proxy for field `E12`",null,null],[3,"E13_W","","Write proxy for field `E13`",null,null],[3,"E14_W","","Write proxy for field `E14`",null,null],[3,"E15_W","","Write proxy for field `E15`",null,null],[3,"E16_W","","Write proxy for field `E16`",null,null],[3,"E17_W","","Write proxy for field `E17`",null,null],[3,"E18_W","","Write proxy for field `E18`",null,null],[3,"E19_W","","Write proxy for field `E19`",null,null],[3,"E20_W","","Write proxy for field `E20`",null,null],[3,"E21_W","","Write proxy for field `E21`",null,null],[3,"E22_W","","Write proxy for field `E22`",null,null],[3,"E23_W","","Write proxy for field `E23`",null,null],[3,"E24_W","","Write proxy for field `E24`",null,null],[3,"E25_W","","Write proxy for field `E25`",null,null],[3,"E26_W","","Write proxy for field `E26`",null,null],[3,"E27_W","","Write proxy for field `E27`",null,null],[3,"E28_W","","Write proxy for field `E28`",null,null],[3,"E29_W","","Write proxy for field `E29`",null,null],[3,"E30_W","","Write proxy for field `E30`",null,null],[3,"E31_W","","Write proxy for field `E31`",null,null],[6,"R","","Reader of register IE00",null,null],[6,"W","","Writer for register IE00",null,null],[6,"E0_R","","Reader of field `E0`",null,null],[6,"E1_R","","Reader of field `E1`",null,null],[6,"E2_R","","Reader of field `E2`",null,null],[6,"E3_R","","Reader of field `E3`",null,null],[6,"E4_R","","Reader of field `E4`",null,null],[6,"E5_R","","Reader of field `E5`",null,null],[6,"E6_R","","Reader of field `E6`",null,null],[6,"E7_R","","Reader of field `E7`",null,null],[6,"E8_R","","Reader of field `E8`",null,null],[6,"E9_R","","Reader of field `E9`",null,null],[6,"E10_R","","Reader of field `E10`",null,null],[6,"E11_R","","Reader of field `E11`",null,null],[6,"E12_R","","Reader of field `E12`",null,null],[6,"E13_R","","Reader of field `E13`",null,null],[6,"E14_R","","Reader of field `E14`",null,null],[6,"E15_R","","Reader of field `E15`",null,null],[6,"E16_R","","Reader of field `E16`",null,null],[6,"E17_R","","Reader of field `E17`",null,null],[6,"E18_R","","Reader of field `E18`",null,null],[6,"E19_R","","Reader of field `E19`",null,null],[6,"E20_R","","Reader of field `E20`",null,null],[6,"E21_R","","Reader of field `E21`",null,null],[6,"E22_R","","Reader of field `E22`",null,null],[6,"E23_R","","Reader of field `E23`",null,null],[6,"E24_R","","Reader of field `E24`",null,null],[6,"E25_R","","Reader of field `E25`",null,null],[6,"E26_R","","Reader of field `E26`",null,null],[6,"E27_R","","Reader of field `E27`",null,null],[6,"E28_R","","Reader of field `E28`",null,null],[6,"E29_R","","Reader of field `E29`",null,null],[6,"E30_R","","Reader of field `E30`",null,null],[6,"E31_R","","Reader of field `E31`",null,null],[11,"set_bit","","Sets the field bit",481,[[],["w"]]],[11,"clear_bit","","Clears the field bit",481,[[],["w"]]],[11,"bit","","Writes raw bits to the field",481,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",482,[[],["w"]]],[11,"clear_bit","","Clears the field bit",482,[[],["w"]]],[11,"bit","","Writes raw bits to the field",482,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",483,[[],["w"]]],[11,"clear_bit","","Clears the field bit",483,[[],["w"]]],[11,"bit","","Writes raw bits to the field",483,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",484,[[],["w"]]],[11,"clear_bit","","Clears the field bit",484,[[],["w"]]],[11,"bit","","Writes raw bits to the field",484,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",485,[[],["w"]]],[11,"clear_bit","","Clears the field bit",485,[[],["w"]]],[11,"bit","","Writes raw bits to the field",485,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",486,[[],["w"]]],[11,"clear_bit","","Clears the field bit",486,[[],["w"]]],[11,"bit","","Writes raw bits to the field",486,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",487,[[],["w"]]],[11,"clear_bit","","Clears the field bit",487,[[],["w"]]],[11,"bit","","Writes raw bits to the field",487,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",488,[[],["w"]]],[11,"clear_bit","","Clears the field bit",488,[[],["w"]]],[11,"bit","","Writes raw bits to the field",488,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",489,[[],["w"]]],[11,"clear_bit","","Clears the field bit",489,[[],["w"]]],[11,"bit","","Writes raw bits to the field",489,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",490,[[],["w"]]],[11,"clear_bit","","Clears the field bit",490,[[],["w"]]],[11,"bit","","Writes raw bits to the field",490,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",491,[[],["w"]]],[11,"clear_bit","","Clears the field bit",491,[[],["w"]]],[11,"bit","","Writes raw bits to the field",491,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",492,[[],["w"]]],[11,"clear_bit","","Clears the field bit",492,[[],["w"]]],[11,"bit","","Writes raw bits to the field",492,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",493,[[],["w"]]],[11,"clear_bit","","Clears the field bit",493,[[],["w"]]],[11,"bit","","Writes raw bits to the field",493,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",494,[[],["w"]]],[11,"clear_bit","","Clears the field bit",494,[[],["w"]]],[11,"bit","","Writes raw bits to the field",494,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",495,[[],["w"]]],[11,"clear_bit","","Clears the field bit",495,[[],["w"]]],[11,"bit","","Writes raw bits to the field",495,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",496,[[],["w"]]],[11,"clear_bit","","Clears the field bit",496,[[],["w"]]],[11,"bit","","Writes raw bits to the field",496,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",497,[[],["w"]]],[11,"clear_bit","","Clears the field bit",497,[[],["w"]]],[11,"bit","","Writes raw bits to the field",497,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",498,[[],["w"]]],[11,"clear_bit","","Clears the field bit",498,[[],["w"]]],[11,"bit","","Writes raw bits to the field",498,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",499,[[],["w"]]],[11,"clear_bit","","Clears the field bit",499,[[],["w"]]],[11,"bit","","Writes raw bits to the field",499,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",500,[[],["w"]]],[11,"clear_bit","","Clears the field bit",500,[[],["w"]]],[11,"bit","","Writes raw bits to the field",500,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",501,[[],["w"]]],[11,"clear_bit","","Clears the field bit",501,[[],["w"]]],[11,"bit","","Writes raw bits to the field",501,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",502,[[],["w"]]],[11,"clear_bit","","Clears the field bit",502,[[],["w"]]],[11,"bit","","Writes raw bits to the field",502,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",503,[[],["w"]]],[11,"clear_bit","","Clears the field bit",503,[[],["w"]]],[11,"bit","","Writes raw bits to the field",503,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",504,[[],["w"]]],[11,"clear_bit","","Clears the field bit",504,[[],["w"]]],[11,"bit","","Writes raw bits to the field",504,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",505,[[],["w"]]],[11,"clear_bit","","Clears the field bit",505,[[],["w"]]],[11,"bit","","Writes raw bits to the field",505,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",506,[[],["w"]]],[11,"clear_bit","","Clears the field bit",506,[[],["w"]]],[11,"bit","","Writes raw bits to the field",506,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",507,[[],["w"]]],[11,"clear_bit","","Clears the field bit",507,[[],["w"]]],[11,"bit","","Writes raw bits to the field",507,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",508,[[],["w"]]],[11,"clear_bit","","Clears the field bit",508,[[],["w"]]],[11,"bit","","Writes raw bits to the field",508,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",509,[[],["w"]]],[11,"clear_bit","","Clears the field bit",509,[[],["w"]]],[11,"bit","","Writes raw bits to the field",509,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",510,[[],["w"]]],[11,"clear_bit","","Clears the field bit",510,[[],["w"]]],[11,"bit","","Writes raw bits to the field",510,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",511,[[],["w"]]],[11,"clear_bit","","Clears the field bit",511,[[],["w"]]],[11,"bit","","Writes raw bits to the field",511,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",512,[[],["w"]]],[11,"clear_bit","","Clears the field bit",512,[[],["w"]]],[11,"bit","","Writes raw bits to the field",512,[[["bool"]],["w"]]],[11,"e0","","Bit 0 - Interrupt Enable of Source for RV_PLIC0",513,[[["self"]],["e0_r"]]],[11,"e1","","Bit 1 - for RV_PLIC1",513,[[["self"]],["e1_r"]]],[11,"e2","","Bit 2 - for RV_PLIC2",513,[[["self"]],["e2_r"]]],[11,"e3","","Bit 3 - for RV_PLIC3",513,[[["self"]],["e3_r"]]],[11,"e4","","Bit 4 - for RV_PLIC4",513,[[["self"]],["e4_r"]]],[11,"e5","","Bit 5 - for RV_PLIC5",513,[[["self"]],["e5_r"]]],[11,"e6","","Bit 6 - for RV_PLIC6",513,[[["self"]],["e6_r"]]],[11,"e7","","Bit 7 - for RV_PLIC7",513,[[["self"]],["e7_r"]]],[11,"e8","","Bit 8 - for RV_PLIC8",513,[[["self"]],["e8_r"]]],[11,"e9","","Bit 9 - for RV_PLIC9",513,[[["self"]],["e9_r"]]],[11,"e10","","Bit 10 - for RV_PLIC10",513,[[["self"]],["e10_r"]]],[11,"e11","","Bit 11 - for RV_PLIC11",513,[[["self"]],["e11_r"]]],[11,"e12","","Bit 12 - for RV_PLIC12",513,[[["self"]],["e12_r"]]],[11,"e13","","Bit 13 - for RV_PLIC13",513,[[["self"]],["e13_r"]]],[11,"e14","","Bit 14 - for RV_PLIC14",513,[[["self"]],["e14_r"]]],[11,"e15","","Bit 15 - for RV_PLIC15",513,[[["self"]],["e15_r"]]],[11,"e16","","Bit 16 - for RV_PLIC16",513,[[["self"]],["e16_r"]]],[11,"e17","","Bit 17 - for RV_PLIC17",513,[[["self"]],["e17_r"]]],[11,"e18","","Bit 18 - for RV_PLIC18",513,[[["self"]],["e18_r"]]],[11,"e19","","Bit 19 - for RV_PLIC19",513,[[["self"]],["e19_r"]]],[11,"e20","","Bit 20 - for RV_PLIC20",513,[[["self"]],["e20_r"]]],[11,"e21","","Bit 21 - for RV_PLIC21",513,[[["self"]],["e21_r"]]],[11,"e22","","Bit 22 - for RV_PLIC22",513,[[["self"]],["e22_r"]]],[11,"e23","","Bit 23 - for RV_PLIC23",513,[[["self"]],["e23_r"]]],[11,"e24","","Bit 24 - for RV_PLIC24",513,[[["self"]],["e24_r"]]],[11,"e25","","Bit 25 - for RV_PLIC25",513,[[["self"]],["e25_r"]]],[11,"e26","","Bit 26 - for RV_PLIC26",513,[[["self"]],["e26_r"]]],[11,"e27","","Bit 27 - for RV_PLIC27",513,[[["self"]],["e27_r"]]],[11,"e28","","Bit 28 - for RV_PLIC28",513,[[["self"]],["e28_r"]]],[11,"e29","","Bit 29 - for RV_PLIC29",513,[[["self"]],["e29_r"]]],[11,"e30","","Bit 30 - for RV_PLIC30",513,[[["self"]],["e30_r"]]],[11,"e31","","Bit 31 - for RV_PLIC31",513,[[["self"]],["e31_r"]]],[11,"e0","","Bit 0 - Interrupt Enable of Source for RV_PLIC0",514,[[["self"]],["e0_w"]]],[11,"e1","","Bit 1 - for RV_PLIC1",514,[[["self"]],["e1_w"]]],[11,"e2","","Bit 2 - for RV_PLIC2",514,[[["self"]],["e2_w"]]],[11,"e3","","Bit 3 - for RV_PLIC3",514,[[["self"]],["e3_w"]]],[11,"e4","","Bit 4 - for RV_PLIC4",514,[[["self"]],["e4_w"]]],[11,"e5","","Bit 5 - for RV_PLIC5",514,[[["self"]],["e5_w"]]],[11,"e6","","Bit 6 - for RV_PLIC6",514,[[["self"]],["e6_w"]]],[11,"e7","","Bit 7 - for RV_PLIC7",514,[[["self"]],["e7_w"]]],[11,"e8","","Bit 8 - for RV_PLIC8",514,[[["self"]],["e8_w"]]],[11,"e9","","Bit 9 - for RV_PLIC9",514,[[["self"]],["e9_w"]]],[11,"e10","","Bit 10 - for RV_PLIC10",514,[[["self"]],["e10_w"]]],[11,"e11","","Bit 11 - for RV_PLIC11",514,[[["self"]],["e11_w"]]],[11,"e12","","Bit 12 - for RV_PLIC12",514,[[["self"]],["e12_w"]]],[11,"e13","","Bit 13 - for RV_PLIC13",514,[[["self"]],["e13_w"]]],[11,"e14","","Bit 14 - for RV_PLIC14",514,[[["self"]],["e14_w"]]],[11,"e15","","Bit 15 - for RV_PLIC15",514,[[["self"]],["e15_w"]]],[11,"e16","","Bit 16 - for RV_PLIC16",514,[[["self"]],["e16_w"]]],[11,"e17","","Bit 17 - for RV_PLIC17",514,[[["self"]],["e17_w"]]],[11,"e18","","Bit 18 - for RV_PLIC18",514,[[["self"]],["e18_w"]]],[11,"e19","","Bit 19 - for RV_PLIC19",514,[[["self"]],["e19_w"]]],[11,"e20","","Bit 20 - for RV_PLIC20",514,[[["self"]],["e20_w"]]],[11,"e21","","Bit 21 - for RV_PLIC21",514,[[["self"]],["e21_w"]]],[11,"e22","","Bit 22 - for RV_PLIC22",514,[[["self"]],["e22_w"]]],[11,"e23","","Bit 23 - for RV_PLIC23",514,[[["self"]],["e23_w"]]],[11,"e24","","Bit 24 - for RV_PLIC24",514,[[["self"]],["e24_w"]]],[11,"e25","","Bit 25 - for RV_PLIC25",514,[[["self"]],["e25_w"]]],[11,"e26","","Bit 26 - for RV_PLIC26",514,[[["self"]],["e26_w"]]],[11,"e27","","Bit 27 - for RV_PLIC27",514,[[["self"]],["e27_w"]]],[11,"e28","","Bit 28 - for RV_PLIC28",514,[[["self"]],["e28_w"]]],[11,"e29","","Bit 29 - for RV_PLIC29",514,[[["self"]],["e29_w"]]],[11,"e30","","Bit 30 - for RV_PLIC30",514,[[["self"]],["e30_w"]]],[11,"e31","","Bit 31 - for RV_PLIC31",514,[[["self"]],["e31_w"]]],[0,"ie01","earlgrey_registers::rv_plic::ie0","Interrupt Enable for Target 0",null,null],[3,"E32_W","earlgrey_registers::rv_plic::ie0::ie01","Write proxy for field `E32`",null,null],[3,"E33_W","","Write proxy for field `E33`",null,null],[3,"E34_W","","Write proxy for field `E34`",null,null],[3,"E35_W","","Write proxy for field `E35`",null,null],[3,"E36_W","","Write proxy for field `E36`",null,null],[3,"E37_W","","Write proxy for field `E37`",null,null],[3,"E38_W","","Write proxy for field `E38`",null,null],[3,"E39_W","","Write proxy for field `E39`",null,null],[3,"E40_W","","Write proxy for field `E40`",null,null],[3,"E41_W","","Write proxy for field `E41`",null,null],[3,"E42_W","","Write proxy for field `E42`",null,null],[3,"E43_W","","Write proxy for field `E43`",null,null],[3,"E44_W","","Write proxy for field `E44`",null,null],[3,"E45_W","","Write proxy for field `E45`",null,null],[3,"E46_W","","Write proxy for field `E46`",null,null],[3,"E47_W","","Write proxy for field `E47`",null,null],[3,"E48_W","","Write proxy for field `E48`",null,null],[3,"E49_W","","Write proxy for field `E49`",null,null],[3,"E50_W","","Write proxy for field `E50`",null,null],[3,"E51_W","","Write proxy for field `E51`",null,null],[3,"E52_W","","Write proxy for field `E52`",null,null],[3,"E53_W","","Write proxy for field `E53`",null,null],[3,"E54_W","","Write proxy for field `E54`",null,null],[3,"E55_W","","Write proxy for field `E55`",null,null],[3,"E56_W","","Write proxy for field `E56`",null,null],[3,"E57_W","","Write proxy for field `E57`",null,null],[3,"E58_W","","Write proxy for field `E58`",null,null],[3,"E59_W","","Write proxy for field `E59`",null,null],[3,"E60_W","","Write proxy for field `E60`",null,null],[3,"E61_W","","Write proxy for field `E61`",null,null],[3,"E62_W","","Write proxy for field `E62`",null,null],[6,"R","","Reader of register IE01",null,null],[6,"W","","Writer for register IE01",null,null],[6,"E32_R","","Reader of field `E32`",null,null],[6,"E33_R","","Reader of field `E33`",null,null],[6,"E34_R","","Reader of field `E34`",null,null],[6,"E35_R","","Reader of field `E35`",null,null],[6,"E36_R","","Reader of field `E36`",null,null],[6,"E37_R","","Reader of field `E37`",null,null],[6,"E38_R","","Reader of field `E38`",null,null],[6,"E39_R","","Reader of field `E39`",null,null],[6,"E40_R","","Reader of field `E40`",null,null],[6,"E41_R","","Reader of field `E41`",null,null],[6,"E42_R","","Reader of field `E42`",null,null],[6,"E43_R","","Reader of field `E43`",null,null],[6,"E44_R","","Reader of field `E44`",null,null],[6,"E45_R","","Reader of field `E45`",null,null],[6,"E46_R","","Reader of field `E46`",null,null],[6,"E47_R","","Reader of field `E47`",null,null],[6,"E48_R","","Reader of field `E48`",null,null],[6,"E49_R","","Reader of field `E49`",null,null],[6,"E50_R","","Reader of field `E50`",null,null],[6,"E51_R","","Reader of field `E51`",null,null],[6,"E52_R","","Reader of field `E52`",null,null],[6,"E53_R","","Reader of field `E53`",null,null],[6,"E54_R","","Reader of field `E54`",null,null],[6,"E55_R","","Reader of field `E55`",null,null],[6,"E56_R","","Reader of field `E56`",null,null],[6,"E57_R","","Reader of field `E57`",null,null],[6,"E58_R","","Reader of field `E58`",null,null],[6,"E59_R","","Reader of field `E59`",null,null],[6,"E60_R","","Reader of field `E60`",null,null],[6,"E61_R","","Reader of field `E61`",null,null],[6,"E62_R","","Reader of field `E62`",null,null],[11,"set_bit","","Sets the field bit",515,[[],["w"]]],[11,"clear_bit","","Clears the field bit",515,[[],["w"]]],[11,"bit","","Writes raw bits to the field",515,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",516,[[],["w"]]],[11,"clear_bit","","Clears the field bit",516,[[],["w"]]],[11,"bit","","Writes raw bits to the field",516,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",517,[[],["w"]]],[11,"clear_bit","","Clears the field bit",517,[[],["w"]]],[11,"bit","","Writes raw bits to the field",517,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",518,[[],["w"]]],[11,"clear_bit","","Clears the field bit",518,[[],["w"]]],[11,"bit","","Writes raw bits to the field",518,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",519,[[],["w"]]],[11,"clear_bit","","Clears the field bit",519,[[],["w"]]],[11,"bit","","Writes raw bits to the field",519,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",520,[[],["w"]]],[11,"clear_bit","","Clears the field bit",520,[[],["w"]]],[11,"bit","","Writes raw bits to the field",520,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",521,[[],["w"]]],[11,"clear_bit","","Clears the field bit",521,[[],["w"]]],[11,"bit","","Writes raw bits to the field",521,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",522,[[],["w"]]],[11,"clear_bit","","Clears the field bit",522,[[],["w"]]],[11,"bit","","Writes raw bits to the field",522,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",523,[[],["w"]]],[11,"clear_bit","","Clears the field bit",523,[[],["w"]]],[11,"bit","","Writes raw bits to the field",523,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",524,[[],["w"]]],[11,"clear_bit","","Clears the field bit",524,[[],["w"]]],[11,"bit","","Writes raw bits to the field",524,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",525,[[],["w"]]],[11,"clear_bit","","Clears the field bit",525,[[],["w"]]],[11,"bit","","Writes raw bits to the field",525,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",526,[[],["w"]]],[11,"clear_bit","","Clears the field bit",526,[[],["w"]]],[11,"bit","","Writes raw bits to the field",526,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",527,[[],["w"]]],[11,"clear_bit","","Clears the field bit",527,[[],["w"]]],[11,"bit","","Writes raw bits to the field",527,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",528,[[],["w"]]],[11,"clear_bit","","Clears the field bit",528,[[],["w"]]],[11,"bit","","Writes raw bits to the field",528,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",529,[[],["w"]]],[11,"clear_bit","","Clears the field bit",529,[[],["w"]]],[11,"bit","","Writes raw bits to the field",529,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",530,[[],["w"]]],[11,"clear_bit","","Clears the field bit",530,[[],["w"]]],[11,"bit","","Writes raw bits to the field",530,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",531,[[],["w"]]],[11,"clear_bit","","Clears the field bit",531,[[],["w"]]],[11,"bit","","Writes raw bits to the field",531,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",532,[[],["w"]]],[11,"clear_bit","","Clears the field bit",532,[[],["w"]]],[11,"bit","","Writes raw bits to the field",532,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",533,[[],["w"]]],[11,"clear_bit","","Clears the field bit",533,[[],["w"]]],[11,"bit","","Writes raw bits to the field",533,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",534,[[],["w"]]],[11,"clear_bit","","Clears the field bit",534,[[],["w"]]],[11,"bit","","Writes raw bits to the field",534,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",535,[[],["w"]]],[11,"clear_bit","","Clears the field bit",535,[[],["w"]]],[11,"bit","","Writes raw bits to the field",535,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",536,[[],["w"]]],[11,"clear_bit","","Clears the field bit",536,[[],["w"]]],[11,"bit","","Writes raw bits to the field",536,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",537,[[],["w"]]],[11,"clear_bit","","Clears the field bit",537,[[],["w"]]],[11,"bit","","Writes raw bits to the field",537,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",538,[[],["w"]]],[11,"clear_bit","","Clears the field bit",538,[[],["w"]]],[11,"bit","","Writes raw bits to the field",538,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",539,[[],["w"]]],[11,"clear_bit","","Clears the field bit",539,[[],["w"]]],[11,"bit","","Writes raw bits to the field",539,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",540,[[],["w"]]],[11,"clear_bit","","Clears the field bit",540,[[],["w"]]],[11,"bit","","Writes raw bits to the field",540,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",541,[[],["w"]]],[11,"clear_bit","","Clears the field bit",541,[[],["w"]]],[11,"bit","","Writes raw bits to the field",541,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",542,[[],["w"]]],[11,"clear_bit","","Clears the field bit",542,[[],["w"]]],[11,"bit","","Writes raw bits to the field",542,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",543,[[],["w"]]],[11,"clear_bit","","Clears the field bit",543,[[],["w"]]],[11,"bit","","Writes raw bits to the field",543,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",544,[[],["w"]]],[11,"clear_bit","","Clears the field bit",544,[[],["w"]]],[11,"bit","","Writes raw bits to the field",544,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",545,[[],["w"]]],[11,"clear_bit","","Clears the field bit",545,[[],["w"]]],[11,"bit","","Writes raw bits to the field",545,[[["bool"]],["w"]]],[11,"e32","","Bit 0 - Interrupt Enable of Source for RV_PLIC32",546,[[["self"]],["e32_r"]]],[11,"e33","","Bit 1 - for RV_PLIC33",546,[[["self"]],["e33_r"]]],[11,"e34","","Bit 2 - for RV_PLIC34",546,[[["self"]],["e34_r"]]],[11,"e35","","Bit 3 - for RV_PLIC35",546,[[["self"]],["e35_r"]]],[11,"e36","","Bit 4 - for RV_PLIC36",546,[[["self"]],["e36_r"]]],[11,"e37","","Bit 5 - for RV_PLIC37",546,[[["self"]],["e37_r"]]],[11,"e38","","Bit 6 - for RV_PLIC38",546,[[["self"]],["e38_r"]]],[11,"e39","","Bit 7 - for RV_PLIC39",546,[[["self"]],["e39_r"]]],[11,"e40","","Bit 8 - for RV_PLIC40",546,[[["self"]],["e40_r"]]],[11,"e41","","Bit 9 - for RV_PLIC41",546,[[["self"]],["e41_r"]]],[11,"e42","","Bit 10 - for RV_PLIC42",546,[[["self"]],["e42_r"]]],[11,"e43","","Bit 11 - for RV_PLIC43",546,[[["self"]],["e43_r"]]],[11,"e44","","Bit 12 - for RV_PLIC44",546,[[["self"]],["e44_r"]]],[11,"e45","","Bit 13 - for RV_PLIC45",546,[[["self"]],["e45_r"]]],[11,"e46","","Bit 14 - for RV_PLIC46",546,[[["self"]],["e46_r"]]],[11,"e47","","Bit 15 - for RV_PLIC47",546,[[["self"]],["e47_r"]]],[11,"e48","","Bit 16 - for RV_PLIC48",546,[[["self"]],["e48_r"]]],[11,"e49","","Bit 17 - for RV_PLIC49",546,[[["self"]],["e49_r"]]],[11,"e50","","Bit 18 - for RV_PLIC50",546,[[["self"]],["e50_r"]]],[11,"e51","","Bit 19 - for RV_PLIC51",546,[[["self"]],["e51_r"]]],[11,"e52","","Bit 20 - for RV_PLIC52",546,[[["self"]],["e52_r"]]],[11,"e53","","Bit 21 - for RV_PLIC53",546,[[["self"]],["e53_r"]]],[11,"e54","","Bit 22 - for RV_PLIC54",546,[[["self"]],["e54_r"]]],[11,"e55","","Bit 23 - for RV_PLIC55",546,[[["self"]],["e55_r"]]],[11,"e56","","Bit 24 - for RV_PLIC56",546,[[["self"]],["e56_r"]]],[11,"e57","","Bit 25 - for RV_PLIC57",546,[[["self"]],["e57_r"]]],[11,"e58","","Bit 26 - for RV_PLIC58",546,[[["self"]],["e58_r"]]],[11,"e59","","Bit 27 - for RV_PLIC59",546,[[["self"]],["e59_r"]]],[11,"e60","","Bit 28 - for RV_PLIC60",546,[[["self"]],["e60_r"]]],[11,"e61","","Bit 29 - for RV_PLIC61",546,[[["self"]],["e61_r"]]],[11,"e62","","Bit 30 - for RV_PLIC62",546,[[["self"]],["e62_r"]]],[11,"e32","","Bit 0 - Interrupt Enable of Source for RV_PLIC32",547,[[["self"]],["e32_w"]]],[11,"e33","","Bit 1 - for RV_PLIC33",547,[[["self"]],["e33_w"]]],[11,"e34","","Bit 2 - for RV_PLIC34",547,[[["self"]],["e34_w"]]],[11,"e35","","Bit 3 - for RV_PLIC35",547,[[["self"]],["e35_w"]]],[11,"e36","","Bit 4 - for RV_PLIC36",547,[[["self"]],["e36_w"]]],[11,"e37","","Bit 5 - for RV_PLIC37",547,[[["self"]],["e37_w"]]],[11,"e38","","Bit 6 - for RV_PLIC38",547,[[["self"]],["e38_w"]]],[11,"e39","","Bit 7 - for RV_PLIC39",547,[[["self"]],["e39_w"]]],[11,"e40","","Bit 8 - for RV_PLIC40",547,[[["self"]],["e40_w"]]],[11,"e41","","Bit 9 - for RV_PLIC41",547,[[["self"]],["e41_w"]]],[11,"e42","","Bit 10 - for RV_PLIC42",547,[[["self"]],["e42_w"]]],[11,"e43","","Bit 11 - for RV_PLIC43",547,[[["self"]],["e43_w"]]],[11,"e44","","Bit 12 - for RV_PLIC44",547,[[["self"]],["e44_w"]]],[11,"e45","","Bit 13 - for RV_PLIC45",547,[[["self"]],["e45_w"]]],[11,"e46","","Bit 14 - for RV_PLIC46",547,[[["self"]],["e46_w"]]],[11,"e47","","Bit 15 - for RV_PLIC47",547,[[["self"]],["e47_w"]]],[11,"e48","","Bit 16 - for RV_PLIC48",547,[[["self"]],["e48_w"]]],[11,"e49","","Bit 17 - for RV_PLIC49",547,[[["self"]],["e49_w"]]],[11,"e50","","Bit 18 - for RV_PLIC50",547,[[["self"]],["e50_w"]]],[11,"e51","","Bit 19 - for RV_PLIC51",547,[[["self"]],["e51_w"]]],[11,"e52","","Bit 20 - for RV_PLIC52",547,[[["self"]],["e52_w"]]],[11,"e53","","Bit 21 - for RV_PLIC53",547,[[["self"]],["e53_w"]]],[11,"e54","","Bit 22 - for RV_PLIC54",547,[[["self"]],["e54_w"]]],[11,"e55","","Bit 23 - for RV_PLIC55",547,[[["self"]],["e55_w"]]],[11,"e56","","Bit 24 - for RV_PLIC56",547,[[["self"]],["e56_w"]]],[11,"e57","","Bit 25 - for RV_PLIC57",547,[[["self"]],["e57_w"]]],[11,"e58","","Bit 26 - for RV_PLIC58",547,[[["self"]],["e58_w"]]],[11,"e59","","Bit 27 - for RV_PLIC59",547,[[["self"]],["e59_w"]]],[11,"e60","","Bit 28 - for RV_PLIC60",547,[[["self"]],["e60_w"]]],[11,"e61","","Bit 29 - for RV_PLIC61",547,[[["self"]],["e61_w"]]],[11,"e62","","Bit 30 - for RV_PLIC62",547,[[["self"]],["e62_w"]]],[6,"IE00","earlgrey_registers::rv_plic::ie0","Interrupt Enable for Target 0",null,null],[6,"IE01","","Interrupt Enable for Target 0",null,null],[0,"prio0","earlgrey_registers::rv_plic","Interrupt Source 0 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio0","Reader of register PRIO0",null,null],[6,"W","","Writer for register PRIO0",null,null],[0,"prio1","earlgrey_registers::rv_plic","Interrupt Source 1 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio1","Reader of register PRIO1",null,null],[6,"W","","Writer for register PRIO1",null,null],[0,"prio2","earlgrey_registers::rv_plic","Interrupt Source 2 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio2","Reader of register PRIO2",null,null],[6,"W","","Writer for register PRIO2",null,null],[0,"prio3","earlgrey_registers::rv_plic","Interrupt Source 3 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio3","Reader of register PRIO3",null,null],[6,"W","","Writer for register PRIO3",null,null],[0,"prio4","earlgrey_registers::rv_plic","Interrupt Source 4 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio4","Reader of register PRIO4",null,null],[6,"W","","Writer for register PRIO4",null,null],[0,"prio5","earlgrey_registers::rv_plic","Interrupt Source 5 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio5","Reader of register PRIO5",null,null],[6,"W","","Writer for register PRIO5",null,null],[0,"prio6","earlgrey_registers::rv_plic","Interrupt Source 6 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio6","Reader of register PRIO6",null,null],[6,"W","","Writer for register PRIO6",null,null],[0,"prio7","earlgrey_registers::rv_plic","Interrupt Source 7 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio7","Reader of register PRIO7",null,null],[6,"W","","Writer for register PRIO7",null,null],[0,"prio8","earlgrey_registers::rv_plic","Interrupt Source 8 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio8","Reader of register PRIO8",null,null],[6,"W","","Writer for register PRIO8",null,null],[0,"prio9","earlgrey_registers::rv_plic","Interrupt Source 9 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio9","Reader of register PRIO9",null,null],[6,"W","","Writer for register PRIO9",null,null],[0,"prio10","earlgrey_registers::rv_plic","Interrupt Source 10 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio10","Reader of register PRIO10",null,null],[6,"W","","Writer for register PRIO10",null,null],[0,"prio11","earlgrey_registers::rv_plic","Interrupt Source 11 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio11","Reader of register PRIO11",null,null],[6,"W","","Writer for register PRIO11",null,null],[0,"prio12","earlgrey_registers::rv_plic","Interrupt Source 12 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio12","Reader of register PRIO12",null,null],[6,"W","","Writer for register PRIO12",null,null],[0,"prio13","earlgrey_registers::rv_plic","Interrupt Source 13 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio13","Reader of register PRIO13",null,null],[6,"W","","Writer for register PRIO13",null,null],[0,"prio14","earlgrey_registers::rv_plic","Interrupt Source 14 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio14","Reader of register PRIO14",null,null],[6,"W","","Writer for register PRIO14",null,null],[0,"prio15","earlgrey_registers::rv_plic","Interrupt Source 15 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio15","Reader of register PRIO15",null,null],[6,"W","","Writer for register PRIO15",null,null],[0,"prio16","earlgrey_registers::rv_plic","Interrupt Source 16 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio16","Reader of register PRIO16",null,null],[6,"W","","Writer for register PRIO16",null,null],[0,"prio17","earlgrey_registers::rv_plic","Interrupt Source 17 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio17","Reader of register PRIO17",null,null],[6,"W","","Writer for register PRIO17",null,null],[0,"prio18","earlgrey_registers::rv_plic","Interrupt Source 18 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio18","Reader of register PRIO18",null,null],[6,"W","","Writer for register PRIO18",null,null],[0,"prio19","earlgrey_registers::rv_plic","Interrupt Source 19 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio19","Reader of register PRIO19",null,null],[6,"W","","Writer for register PRIO19",null,null],[0,"prio20","earlgrey_registers::rv_plic","Interrupt Source 20 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio20","Reader of register PRIO20",null,null],[6,"W","","Writer for register PRIO20",null,null],[0,"prio21","earlgrey_registers::rv_plic","Interrupt Source 21 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio21","Reader of register PRIO21",null,null],[6,"W","","Writer for register PRIO21",null,null],[0,"prio22","earlgrey_registers::rv_plic","Interrupt Source 22 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio22","Reader of register PRIO22",null,null],[6,"W","","Writer for register PRIO22",null,null],[0,"prio23","earlgrey_registers::rv_plic","Interrupt Source 23 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio23","Reader of register PRIO23",null,null],[6,"W","","Writer for register PRIO23",null,null],[0,"prio24","earlgrey_registers::rv_plic","Interrupt Source 24 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio24","Reader of register PRIO24",null,null],[6,"W","","Writer for register PRIO24",null,null],[0,"prio25","earlgrey_registers::rv_plic","Interrupt Source 25 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio25","Reader of register PRIO25",null,null],[6,"W","","Writer for register PRIO25",null,null],[0,"prio26","earlgrey_registers::rv_plic","Interrupt Source 26 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio26","Reader of register PRIO26",null,null],[6,"W","","Writer for register PRIO26",null,null],[0,"prio27","earlgrey_registers::rv_plic","Interrupt Source 27 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio27","Reader of register PRIO27",null,null],[6,"W","","Writer for register PRIO27",null,null],[0,"prio28","earlgrey_registers::rv_plic","Interrupt Source 28 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio28","Reader of register PRIO28",null,null],[6,"W","","Writer for register PRIO28",null,null],[0,"prio29","earlgrey_registers::rv_plic","Interrupt Source 29 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio29","Reader of register PRIO29",null,null],[6,"W","","Writer for register PRIO29",null,null],[0,"prio30","earlgrey_registers::rv_plic","Interrupt Source 30 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio30","Reader of register PRIO30",null,null],[6,"W","","Writer for register PRIO30",null,null],[0,"prio31","earlgrey_registers::rv_plic","Interrupt Source 31 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio31","Reader of register PRIO31",null,null],[6,"W","","Writer for register PRIO31",null,null],[0,"prio32","earlgrey_registers::rv_plic","Interrupt Source 32 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio32","Reader of register PRIO32",null,null],[6,"W","","Writer for register PRIO32",null,null],[0,"prio33","earlgrey_registers::rv_plic","Interrupt Source 33 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio33","Reader of register PRIO33",null,null],[6,"W","","Writer for register PRIO33",null,null],[0,"prio34","earlgrey_registers::rv_plic","Interrupt Source 34 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio34","Reader of register PRIO34",null,null],[6,"W","","Writer for register PRIO34",null,null],[0,"prio35","earlgrey_registers::rv_plic","Interrupt Source 35 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio35","Reader of register PRIO35",null,null],[6,"W","","Writer for register PRIO35",null,null],[0,"prio36","earlgrey_registers::rv_plic","Interrupt Source 36 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio36","Reader of register PRIO36",null,null],[6,"W","","Writer for register PRIO36",null,null],[0,"prio37","earlgrey_registers::rv_plic","Interrupt Source 37 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio37","Reader of register PRIO37",null,null],[6,"W","","Writer for register PRIO37",null,null],[0,"prio38","earlgrey_registers::rv_plic","Interrupt Source 38 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio38","Reader of register PRIO38",null,null],[6,"W","","Writer for register PRIO38",null,null],[0,"prio39","earlgrey_registers::rv_plic","Interrupt Source 39 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio39","Reader of register PRIO39",null,null],[6,"W","","Writer for register PRIO39",null,null],[0,"prio40","earlgrey_registers::rv_plic","Interrupt Source 40 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio40","Reader of register PRIO40",null,null],[6,"W","","Writer for register PRIO40",null,null],[0,"prio41","earlgrey_registers::rv_plic","Interrupt Source 41 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio41","Reader of register PRIO41",null,null],[6,"W","","Writer for register PRIO41",null,null],[0,"prio42","earlgrey_registers::rv_plic","Interrupt Source 42 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio42","Reader of register PRIO42",null,null],[6,"W","","Writer for register PRIO42",null,null],[0,"prio43","earlgrey_registers::rv_plic","Interrupt Source 43 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio43","Reader of register PRIO43",null,null],[6,"W","","Writer for register PRIO43",null,null],[0,"prio44","earlgrey_registers::rv_plic","Interrupt Source 44 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio44","Reader of register PRIO44",null,null],[6,"W","","Writer for register PRIO44",null,null],[0,"prio45","earlgrey_registers::rv_plic","Interrupt Source 45 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio45","Reader of register PRIO45",null,null],[6,"W","","Writer for register PRIO45",null,null],[0,"prio46","earlgrey_registers::rv_plic","Interrupt Source 46 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio46","Reader of register PRIO46",null,null],[6,"W","","Writer for register PRIO46",null,null],[0,"prio47","earlgrey_registers::rv_plic","Interrupt Source 47 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio47","Reader of register PRIO47",null,null],[6,"W","","Writer for register PRIO47",null,null],[0,"prio48","earlgrey_registers::rv_plic","Interrupt Source 48 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio48","Reader of register PRIO48",null,null],[6,"W","","Writer for register PRIO48",null,null],[0,"prio49","earlgrey_registers::rv_plic","Interrupt Source 49 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio49","Reader of register PRIO49",null,null],[6,"W","","Writer for register PRIO49",null,null],[0,"prio50","earlgrey_registers::rv_plic","Interrupt Source 50 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio50","Reader of register PRIO50",null,null],[6,"W","","Writer for register PRIO50",null,null],[0,"prio51","earlgrey_registers::rv_plic","Interrupt Source 51 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio51","Reader of register PRIO51",null,null],[6,"W","","Writer for register PRIO51",null,null],[0,"prio52","earlgrey_registers::rv_plic","Interrupt Source 52 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio52","Reader of register PRIO52",null,null],[6,"W","","Writer for register PRIO52",null,null],[0,"prio53","earlgrey_registers::rv_plic","Interrupt Source 53 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio53","Reader of register PRIO53",null,null],[6,"W","","Writer for register PRIO53",null,null],[0,"prio54","earlgrey_registers::rv_plic","Interrupt Source 54 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio54","Reader of register PRIO54",null,null],[6,"W","","Writer for register PRIO54",null,null],[0,"prio55","earlgrey_registers::rv_plic","Interrupt Source 55 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio55","Reader of register PRIO55",null,null],[6,"W","","Writer for register PRIO55",null,null],[0,"prio56","earlgrey_registers::rv_plic","Interrupt Source 56 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio56","Reader of register PRIO56",null,null],[6,"W","","Writer for register PRIO56",null,null],[0,"prio57","earlgrey_registers::rv_plic","Interrupt Source 57 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio57","Reader of register PRIO57",null,null],[6,"W","","Writer for register PRIO57",null,null],[0,"prio58","earlgrey_registers::rv_plic","Interrupt Source 58 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio58","Reader of register PRIO58",null,null],[6,"W","","Writer for register PRIO58",null,null],[0,"prio59","earlgrey_registers::rv_plic","Interrupt Source 59 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio59","Reader of register PRIO59",null,null],[6,"W","","Writer for register PRIO59",null,null],[0,"prio60","earlgrey_registers::rv_plic","Interrupt Source 60 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio60","Reader of register PRIO60",null,null],[6,"W","","Writer for register PRIO60",null,null],[0,"prio61","earlgrey_registers::rv_plic","Interrupt Source 61 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio61","Reader of register PRIO61",null,null],[6,"W","","Writer for register PRIO61",null,null],[0,"prio62","earlgrey_registers::rv_plic","Interrupt Source 62 Priority",null,null],[6,"R","earlgrey_registers::rv_plic::prio62","Reader of register PRIO62",null,null],[6,"W","","Writer for register PRIO62",null,null],[0,"threshold0","earlgrey_registers::rv_plic","Threshold of priority for Target 0",null,null],[6,"R","earlgrey_registers::rv_plic::threshold0","Reader of register THRESHOLD0",null,null],[6,"W","","Writer for register THRESHOLD0",null,null],[0,"cc0","earlgrey_registers::rv_plic","Claim interrupt by read, complete interrupt by write for…",null,null],[6,"R","earlgrey_registers::rv_plic::cc0","Reader of register CC0",null,null],[6,"W","","Writer for register CC0",null,null],[0,"msip0","earlgrey_registers::rv_plic","msip for Hart 0. Write 1 to here asserts software…",null,null],[6,"R","earlgrey_registers::rv_plic::msip0","Reader of register MSIP0",null,null],[6,"W","","Writer for register MSIP0",null,null],[6,"PRIO0","earlgrey_registers::rv_plic","Interrupt Source 0 Priority",null,null],[6,"PRIO1","","Interrupt Source 1 Priority",null,null],[6,"PRIO2","","Interrupt Source 2 Priority",null,null],[6,"PRIO3","","Interrupt Source 3 Priority",null,null],[6,"PRIO4","","Interrupt Source 4 Priority",null,null],[6,"PRIO5","","Interrupt Source 5 Priority",null,null],[6,"PRIO6","","Interrupt Source 6 Priority",null,null],[6,"PRIO7","","Interrupt Source 7 Priority",null,null],[6,"PRIO8","","Interrupt Source 8 Priority",null,null],[6,"PRIO9","","Interrupt Source 9 Priority",null,null],[6,"PRIO10","","Interrupt Source 10 Priority",null,null],[6,"PRIO11","","Interrupt Source 11 Priority",null,null],[6,"PRIO12","","Interrupt Source 12 Priority",null,null],[6,"PRIO13","","Interrupt Source 13 Priority",null,null],[6,"PRIO14","","Interrupt Source 14 Priority",null,null],[6,"PRIO15","","Interrupt Source 15 Priority",null,null],[6,"PRIO16","","Interrupt Source 16 Priority",null,null],[6,"PRIO17","","Interrupt Source 17 Priority",null,null],[6,"PRIO18","","Interrupt Source 18 Priority",null,null],[6,"PRIO19","","Interrupt Source 19 Priority",null,null],[6,"PRIO20","","Interrupt Source 20 Priority",null,null],[6,"PRIO21","","Interrupt Source 21 Priority",null,null],[6,"PRIO22","","Interrupt Source 22 Priority",null,null],[6,"PRIO23","","Interrupt Source 23 Priority",null,null],[6,"PRIO24","","Interrupt Source 24 Priority",null,null],[6,"PRIO25","","Interrupt Source 25 Priority",null,null],[6,"PRIO26","","Interrupt Source 26 Priority",null,null],[6,"PRIO27","","Interrupt Source 27 Priority",null,null],[6,"PRIO28","","Interrupt Source 28 Priority",null,null],[6,"PRIO29","","Interrupt Source 29 Priority",null,null],[6,"PRIO30","","Interrupt Source 30 Priority",null,null],[6,"PRIO31","","Interrupt Source 31 Priority",null,null],[6,"PRIO32","","Interrupt Source 32 Priority",null,null],[6,"PRIO33","","Interrupt Source 33 Priority",null,null],[6,"PRIO34","","Interrupt Source 34 Priority",null,null],[6,"PRIO35","","Interrupt Source 35 Priority",null,null],[6,"PRIO36","","Interrupt Source 36 Priority",null,null],[6,"PRIO37","","Interrupt Source 37 Priority",null,null],[6,"PRIO38","","Interrupt Source 38 Priority",null,null],[6,"PRIO39","","Interrupt Source 39 Priority",null,null],[6,"PRIO40","","Interrupt Source 40 Priority",null,null],[6,"PRIO41","","Interrupt Source 41 Priority",null,null],[6,"PRIO42","","Interrupt Source 42 Priority",null,null],[6,"PRIO43","","Interrupt Source 43 Priority",null,null],[6,"PRIO44","","Interrupt Source 44 Priority",null,null],[6,"PRIO45","","Interrupt Source 45 Priority",null,null],[6,"PRIO46","","Interrupt Source 46 Priority",null,null],[6,"PRIO47","","Interrupt Source 47 Priority",null,null],[6,"PRIO48","","Interrupt Source 48 Priority",null,null],[6,"PRIO49","","Interrupt Source 49 Priority",null,null],[6,"PRIO50","","Interrupt Source 50 Priority",null,null],[6,"PRIO51","","Interrupt Source 51 Priority",null,null],[6,"PRIO52","","Interrupt Source 52 Priority",null,null],[6,"PRIO53","","Interrupt Source 53 Priority",null,null],[6,"PRIO54","","Interrupt Source 54 Priority",null,null],[6,"PRIO55","","Interrupt Source 55 Priority",null,null],[6,"PRIO56","","Interrupt Source 56 Priority",null,null],[6,"PRIO57","","Interrupt Source 57 Priority",null,null],[6,"PRIO58","","Interrupt Source 58 Priority",null,null],[6,"PRIO59","","Interrupt Source 59 Priority",null,null],[6,"PRIO60","","Interrupt Source 60 Priority",null,null],[6,"PRIO61","","Interrupt Source 61 Priority",null,null],[6,"PRIO62","","Interrupt Source 62 Priority",null,null],[6,"THRESHOLD0","","Threshold of priority for Target 0",null,null],[6,"CC0","","Claim interrupt by read, complete interrupt by write for…",null,null],[6,"MSIP0","","msip for Hart 0. Write 1 to here asserts software…",null,null],[0,"pinmux","earlgrey_registers","pinmux",null,null],[3,"RegisterBlock","earlgrey_registers::pinmux","Register block",null,null],[12,"regen","","0x00 - Register write enable for all control registers.",548,null],[12,"periph_insel","","0x04 - Mux select for peripheral inputs.",548,null],[12,"mio_outsel","","0x20 - Mux select for MIO outputs.",548,null],[3,"PERIPH_INSEL","","Register block",null,null],[12,"periph_insel0","","0x00 - Mux select for peripheral inputs.",549,null],[12,"periph_insel1","","0x04 - Mux select for peripheral inputs.",549,null],[12,"periph_insel2","","0x08 - Mux select for peripheral inputs.",549,null],[12,"periph_insel3","","0x0c - Mux select for peripheral inputs.",549,null],[12,"periph_insel4","","0x10 - Mux select for peripheral inputs.",549,null],[12,"periph_insel5","","0x14 - Mux select for peripheral inputs.",549,null],[12,"periph_insel6","","0x18 - Mux select for peripheral inputs.",549,null],[3,"MIO_OUTSEL","","Register block",null,null],[12,"mio_outsel0","","0x00 - Mux select for MIO outputs.",550,null],[12,"mio_outsel1","","0x04 - Mux select for MIO outputs.",550,null],[12,"mio_outsel2","","0x08 - Mux select for MIO outputs.",550,null],[12,"mio_outsel3","","0x0c - Mux select for MIO outputs.",550,null],[12,"mio_outsel4","","0x10 - Mux select for MIO outputs.",550,null],[12,"mio_outsel5","","0x14 - Mux select for MIO outputs.",550,null],[12,"mio_outsel6","","0x18 - Mux select for MIO outputs.",550,null],[0,"periph_insel","","Register block Mux select for peripheral inputs.",null,null],[0,"periph_insel0","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN0_W","earlgrey_registers::pinmux::periph_insel::periph_insel0","Write proxy for field `IN0`",null,null],[3,"IN1_W","","Write proxy for field `IN1`",null,null],[3,"IN2_W","","Write proxy for field `IN2`",null,null],[3,"IN3_W","","Write proxy for field `IN3`",null,null],[3,"IN4_W","","Write proxy for field `IN4`",null,null],[6,"R","","Reader of register PERIPH_INSEL0",null,null],[6,"W","","Writer for register PERIPH_INSEL0",null,null],[6,"IN0_R","","Reader of field `IN0`",null,null],[6,"IN1_R","","Reader of field `IN1`",null,null],[6,"IN2_R","","Reader of field `IN2`",null,null],[6,"IN3_R","","Reader of field `IN3`",null,null],[6,"IN4_R","","Reader of field `IN4`",null,null],[11,"bits","","Writes raw bits to the field",551,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",552,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",553,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",554,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",555,[[["u8"]],["w"]]],[11,"in0","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",556,[[["self"]],["in0_r"]]],[11,"in1","","Bits 6:11 - for IN1",556,[[["self"]],["in1_r"]]],[11,"in2","","Bits 12:17 - for IN2",556,[[["self"]],["in2_r"]]],[11,"in3","","Bits 18:23 - for IN3",556,[[["self"]],["in3_r"]]],[11,"in4","","Bits 24:29 - for IN4",556,[[["self"]],["in4_r"]]],[11,"in0","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",557,[[["self"]],["in0_w"]]],[11,"in1","","Bits 6:11 - for IN1",557,[[["self"]],["in1_w"]]],[11,"in2","","Bits 12:17 - for IN2",557,[[["self"]],["in2_w"]]],[11,"in3","","Bits 18:23 - for IN3",557,[[["self"]],["in3_w"]]],[11,"in4","","Bits 24:29 - for IN4",557,[[["self"]],["in4_w"]]],[0,"periph_insel1","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN5_W","earlgrey_registers::pinmux::periph_insel::periph_insel1","Write proxy for field `IN5`",null,null],[3,"IN6_W","","Write proxy for field `IN6`",null,null],[3,"IN7_W","","Write proxy for field `IN7`",null,null],[3,"IN8_W","","Write proxy for field `IN8`",null,null],[3,"IN9_W","","Write proxy for field `IN9`",null,null],[6,"R","","Reader of register PERIPH_INSEL1",null,null],[6,"W","","Writer for register PERIPH_INSEL1",null,null],[6,"IN5_R","","Reader of field `IN5`",null,null],[6,"IN6_R","","Reader of field `IN6`",null,null],[6,"IN7_R","","Reader of field `IN7`",null,null],[6,"IN8_R","","Reader of field `IN8`",null,null],[6,"IN9_R","","Reader of field `IN9`",null,null],[11,"bits","","Writes raw bits to the field",558,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",559,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",560,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",561,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",562,[[["u8"]],["w"]]],[11,"in5","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",563,[[["self"]],["in5_r"]]],[11,"in6","","Bits 6:11 - for IN6",563,[[["self"]],["in6_r"]]],[11,"in7","","Bits 12:17 - for IN7",563,[[["self"]],["in7_r"]]],[11,"in8","","Bits 18:23 - for IN8",563,[[["self"]],["in8_r"]]],[11,"in9","","Bits 24:29 - for IN9",563,[[["self"]],["in9_r"]]],[11,"in5","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",564,[[["self"]],["in5_w"]]],[11,"in6","","Bits 6:11 - for IN6",564,[[["self"]],["in6_w"]]],[11,"in7","","Bits 12:17 - for IN7",564,[[["self"]],["in7_w"]]],[11,"in8","","Bits 18:23 - for IN8",564,[[["self"]],["in8_w"]]],[11,"in9","","Bits 24:29 - for IN9",564,[[["self"]],["in9_w"]]],[0,"periph_insel2","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN10_W","earlgrey_registers::pinmux::periph_insel::periph_insel2","Write proxy for field `IN10`",null,null],[3,"IN11_W","","Write proxy for field `IN11`",null,null],[3,"IN12_W","","Write proxy for field `IN12`",null,null],[3,"IN13_W","","Write proxy for field `IN13`",null,null],[3,"IN14_W","","Write proxy for field `IN14`",null,null],[6,"R","","Reader of register PERIPH_INSEL2",null,null],[6,"W","","Writer for register PERIPH_INSEL2",null,null],[6,"IN10_R","","Reader of field `IN10`",null,null],[6,"IN11_R","","Reader of field `IN11`",null,null],[6,"IN12_R","","Reader of field `IN12`",null,null],[6,"IN13_R","","Reader of field `IN13`",null,null],[6,"IN14_R","","Reader of field `IN14`",null,null],[11,"bits","","Writes raw bits to the field",565,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",566,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",567,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",568,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",569,[[["u8"]],["w"]]],[11,"in10","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",570,[[["self"]],["in10_r"]]],[11,"in11","","Bits 6:11 - for IN11",570,[[["self"]],["in11_r"]]],[11,"in12","","Bits 12:17 - for IN12",570,[[["self"]],["in12_r"]]],[11,"in13","","Bits 18:23 - for IN13",570,[[["self"]],["in13_r"]]],[11,"in14","","Bits 24:29 - for IN14",570,[[["self"]],["in14_r"]]],[11,"in10","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",571,[[["self"]],["in10_w"]]],[11,"in11","","Bits 6:11 - for IN11",571,[[["self"]],["in11_w"]]],[11,"in12","","Bits 12:17 - for IN12",571,[[["self"]],["in12_w"]]],[11,"in13","","Bits 18:23 - for IN13",571,[[["self"]],["in13_w"]]],[11,"in14","","Bits 24:29 - for IN14",571,[[["self"]],["in14_w"]]],[0,"periph_insel3","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN15_W","earlgrey_registers::pinmux::periph_insel::periph_insel3","Write proxy for field `IN15`",null,null],[3,"IN16_W","","Write proxy for field `IN16`",null,null],[3,"IN17_W","","Write proxy for field `IN17`",null,null],[3,"IN18_W","","Write proxy for field `IN18`",null,null],[3,"IN19_W","","Write proxy for field `IN19`",null,null],[6,"R","","Reader of register PERIPH_INSEL3",null,null],[6,"W","","Writer for register PERIPH_INSEL3",null,null],[6,"IN15_R","","Reader of field `IN15`",null,null],[6,"IN16_R","","Reader of field `IN16`",null,null],[6,"IN17_R","","Reader of field `IN17`",null,null],[6,"IN18_R","","Reader of field `IN18`",null,null],[6,"IN19_R","","Reader of field `IN19`",null,null],[11,"bits","","Writes raw bits to the field",572,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",573,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",574,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",575,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",576,[[["u8"]],["w"]]],[11,"in15","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",577,[[["self"]],["in15_r"]]],[11,"in16","","Bits 6:11 - for IN16",577,[[["self"]],["in16_r"]]],[11,"in17","","Bits 12:17 - for IN17",577,[[["self"]],["in17_r"]]],[11,"in18","","Bits 18:23 - for IN18",577,[[["self"]],["in18_r"]]],[11,"in19","","Bits 24:29 - for IN19",577,[[["self"]],["in19_r"]]],[11,"in15","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",578,[[["self"]],["in15_w"]]],[11,"in16","","Bits 6:11 - for IN16",578,[[["self"]],["in16_w"]]],[11,"in17","","Bits 12:17 - for IN17",578,[[["self"]],["in17_w"]]],[11,"in18","","Bits 18:23 - for IN18",578,[[["self"]],["in18_w"]]],[11,"in19","","Bits 24:29 - for IN19",578,[[["self"]],["in19_w"]]],[0,"periph_insel4","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN20_W","earlgrey_registers::pinmux::periph_insel::periph_insel4","Write proxy for field `IN20`",null,null],[3,"IN21_W","","Write proxy for field `IN21`",null,null],[3,"IN22_W","","Write proxy for field `IN22`",null,null],[3,"IN23_W","","Write proxy for field `IN23`",null,null],[3,"IN24_W","","Write proxy for field `IN24`",null,null],[6,"R","","Reader of register PERIPH_INSEL4",null,null],[6,"W","","Writer for register PERIPH_INSEL4",null,null],[6,"IN20_R","","Reader of field `IN20`",null,null],[6,"IN21_R","","Reader of field `IN21`",null,null],[6,"IN22_R","","Reader of field `IN22`",null,null],[6,"IN23_R","","Reader of field `IN23`",null,null],[6,"IN24_R","","Reader of field `IN24`",null,null],[11,"bits","","Writes raw bits to the field",579,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",580,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",581,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",582,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",583,[[["u8"]],["w"]]],[11,"in20","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",584,[[["self"]],["in20_r"]]],[11,"in21","","Bits 6:11 - for IN21",584,[[["self"]],["in21_r"]]],[11,"in22","","Bits 12:17 - for IN22",584,[[["self"]],["in22_r"]]],[11,"in23","","Bits 18:23 - for IN23",584,[[["self"]],["in23_r"]]],[11,"in24","","Bits 24:29 - for IN24",584,[[["self"]],["in24_r"]]],[11,"in20","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",585,[[["self"]],["in20_w"]]],[11,"in21","","Bits 6:11 - for IN21",585,[[["self"]],["in21_w"]]],[11,"in22","","Bits 12:17 - for IN22",585,[[["self"]],["in22_w"]]],[11,"in23","","Bits 18:23 - for IN23",585,[[["self"]],["in23_w"]]],[11,"in24","","Bits 24:29 - for IN24",585,[[["self"]],["in24_w"]]],[0,"periph_insel5","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN25_W","earlgrey_registers::pinmux::periph_insel::periph_insel5","Write proxy for field `IN25`",null,null],[3,"IN26_W","","Write proxy for field `IN26`",null,null],[3,"IN27_W","","Write proxy for field `IN27`",null,null],[3,"IN28_W","","Write proxy for field `IN28`",null,null],[3,"IN29_W","","Write proxy for field `IN29`",null,null],[6,"R","","Reader of register PERIPH_INSEL5",null,null],[6,"W","","Writer for register PERIPH_INSEL5",null,null],[6,"IN25_R","","Reader of field `IN25`",null,null],[6,"IN26_R","","Reader of field `IN26`",null,null],[6,"IN27_R","","Reader of field `IN27`",null,null],[6,"IN28_R","","Reader of field `IN28`",null,null],[6,"IN29_R","","Reader of field `IN29`",null,null],[11,"bits","","Writes raw bits to the field",586,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",587,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",588,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",589,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",590,[[["u8"]],["w"]]],[11,"in25","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",591,[[["self"]],["in25_r"]]],[11,"in26","","Bits 6:11 - for IN26",591,[[["self"]],["in26_r"]]],[11,"in27","","Bits 12:17 - for IN27",591,[[["self"]],["in27_r"]]],[11,"in28","","Bits 18:23 - for IN28",591,[[["self"]],["in28_r"]]],[11,"in29","","Bits 24:29 - for IN29",591,[[["self"]],["in29_r"]]],[11,"in25","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",592,[[["self"]],["in25_w"]]],[11,"in26","","Bits 6:11 - for IN26",592,[[["self"]],["in26_w"]]],[11,"in27","","Bits 12:17 - for IN27",592,[[["self"]],["in27_w"]]],[11,"in28","","Bits 18:23 - for IN28",592,[[["self"]],["in28_w"]]],[11,"in29","","Bits 24:29 - for IN29",592,[[["self"]],["in29_w"]]],[0,"periph_insel6","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[3,"IN30_W","earlgrey_registers::pinmux::periph_insel::periph_insel6","Write proxy for field `IN30`",null,null],[3,"IN31_W","","Write proxy for field `IN31`",null,null],[6,"R","","Reader of register PERIPH_INSEL6",null,null],[6,"W","","Writer for register PERIPH_INSEL6",null,null],[6,"IN30_R","","Reader of field `IN30`",null,null],[6,"IN31_R","","Reader of field `IN31`",null,null],[11,"bits","","Writes raw bits to the field",593,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",594,[[["u8"]],["w"]]],[11,"in30","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",595,[[["self"]],["in30_r"]]],[11,"in31","","Bits 6:11 - for IN31",595,[[["self"]],["in31_r"]]],[11,"in30","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",596,[[["self"]],["in30_w"]]],[11,"in31","","Bits 6:11 - for IN31",596,[[["self"]],["in31_w"]]],[6,"PERIPH_INSEL0","earlgrey_registers::pinmux::periph_insel","Mux select for peripheral inputs.",null,null],[6,"PERIPH_INSEL1","","Mux select for peripheral inputs.",null,null],[6,"PERIPH_INSEL2","","Mux select for peripheral inputs.",null,null],[6,"PERIPH_INSEL3","","Mux select for peripheral inputs.",null,null],[6,"PERIPH_INSEL4","","Mux select for peripheral inputs.",null,null],[6,"PERIPH_INSEL5","","Mux select for peripheral inputs.",null,null],[6,"PERIPH_INSEL6","","Mux select for peripheral inputs.",null,null],[0,"mio_outsel","earlgrey_registers::pinmux","Register block Mux select for MIO outputs.",null,null],[0,"mio_outsel0","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT0_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel0","Write proxy for field `OUT0`",null,null],[3,"OUT1_W","","Write proxy for field `OUT1`",null,null],[3,"OUT2_W","","Write proxy for field `OUT2`",null,null],[3,"OUT3_W","","Write proxy for field `OUT3`",null,null],[3,"OUT4_W","","Write proxy for field `OUT4`",null,null],[6,"R","","Reader of register MIO_OUTSEL0",null,null],[6,"W","","Writer for register MIO_OUTSEL0",null,null],[6,"OUT0_R","","Reader of field `OUT0`",null,null],[6,"OUT1_R","","Reader of field `OUT1`",null,null],[6,"OUT2_R","","Reader of field `OUT2`",null,null],[6,"OUT3_R","","Reader of field `OUT3`",null,null],[6,"OUT4_R","","Reader of field `OUT4`",null,null],[11,"bits","","Writes raw bits to the field",597,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",598,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",599,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",600,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",601,[[["u8"]],["w"]]],[11,"out0","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",602,[[["self"]],["out0_r"]]],[11,"out1","","Bits 6:11 - for OUT1",602,[[["self"]],["out1_r"]]],[11,"out2","","Bits 12:17 - for OUT2",602,[[["self"]],["out2_r"]]],[11,"out3","","Bits 18:23 - for OUT3",602,[[["self"]],["out3_r"]]],[11,"out4","","Bits 24:29 - for OUT4",602,[[["self"]],["out4_r"]]],[11,"out0","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",603,[[["self"]],["out0_w"]]],[11,"out1","","Bits 6:11 - for OUT1",603,[[["self"]],["out1_w"]]],[11,"out2","","Bits 12:17 - for OUT2",603,[[["self"]],["out2_w"]]],[11,"out3","","Bits 18:23 - for OUT3",603,[[["self"]],["out3_w"]]],[11,"out4","","Bits 24:29 - for OUT4",603,[[["self"]],["out4_w"]]],[0,"mio_outsel1","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT5_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel1","Write proxy for field `OUT5`",null,null],[3,"OUT6_W","","Write proxy for field `OUT6`",null,null],[3,"OUT7_W","","Write proxy for field `OUT7`",null,null],[3,"OUT8_W","","Write proxy for field `OUT8`",null,null],[3,"OUT9_W","","Write proxy for field `OUT9`",null,null],[6,"R","","Reader of register MIO_OUTSEL1",null,null],[6,"W","","Writer for register MIO_OUTSEL1",null,null],[6,"OUT5_R","","Reader of field `OUT5`",null,null],[6,"OUT6_R","","Reader of field `OUT6`",null,null],[6,"OUT7_R","","Reader of field `OUT7`",null,null],[6,"OUT8_R","","Reader of field `OUT8`",null,null],[6,"OUT9_R","","Reader of field `OUT9`",null,null],[11,"bits","","Writes raw bits to the field",604,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",605,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",606,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",607,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",608,[[["u8"]],["w"]]],[11,"out5","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",609,[[["self"]],["out5_r"]]],[11,"out6","","Bits 6:11 - for OUT6",609,[[["self"]],["out6_r"]]],[11,"out7","","Bits 12:17 - for OUT7",609,[[["self"]],["out7_r"]]],[11,"out8","","Bits 18:23 - for OUT8",609,[[["self"]],["out8_r"]]],[11,"out9","","Bits 24:29 - for OUT9",609,[[["self"]],["out9_r"]]],[11,"out5","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",610,[[["self"]],["out5_w"]]],[11,"out6","","Bits 6:11 - for OUT6",610,[[["self"]],["out6_w"]]],[11,"out7","","Bits 12:17 - for OUT7",610,[[["self"]],["out7_w"]]],[11,"out8","","Bits 18:23 - for OUT8",610,[[["self"]],["out8_w"]]],[11,"out9","","Bits 24:29 - for OUT9",610,[[["self"]],["out9_w"]]],[0,"mio_outsel2","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT10_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel2","Write proxy for field `OUT10`",null,null],[3,"OUT11_W","","Write proxy for field `OUT11`",null,null],[3,"OUT12_W","","Write proxy for field `OUT12`",null,null],[3,"OUT13_W","","Write proxy for field `OUT13`",null,null],[3,"OUT14_W","","Write proxy for field `OUT14`",null,null],[6,"R","","Reader of register MIO_OUTSEL2",null,null],[6,"W","","Writer for register MIO_OUTSEL2",null,null],[6,"OUT10_R","","Reader of field `OUT10`",null,null],[6,"OUT11_R","","Reader of field `OUT11`",null,null],[6,"OUT12_R","","Reader of field `OUT12`",null,null],[6,"OUT13_R","","Reader of field `OUT13`",null,null],[6,"OUT14_R","","Reader of field `OUT14`",null,null],[11,"bits","","Writes raw bits to the field",611,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",612,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",613,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",614,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",615,[[["u8"]],["w"]]],[11,"out10","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",616,[[["self"]],["out10_r"]]],[11,"out11","","Bits 6:11 - for OUT11",616,[[["self"]],["out11_r"]]],[11,"out12","","Bits 12:17 - for OUT12",616,[[["self"]],["out12_r"]]],[11,"out13","","Bits 18:23 - for OUT13",616,[[["self"]],["out13_r"]]],[11,"out14","","Bits 24:29 - for OUT14",616,[[["self"]],["out14_r"]]],[11,"out10","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",617,[[["self"]],["out10_w"]]],[11,"out11","","Bits 6:11 - for OUT11",617,[[["self"]],["out11_w"]]],[11,"out12","","Bits 12:17 - for OUT12",617,[[["self"]],["out12_w"]]],[11,"out13","","Bits 18:23 - for OUT13",617,[[["self"]],["out13_w"]]],[11,"out14","","Bits 24:29 - for OUT14",617,[[["self"]],["out14_w"]]],[0,"mio_outsel3","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT15_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel3","Write proxy for field `OUT15`",null,null],[3,"OUT16_W","","Write proxy for field `OUT16`",null,null],[3,"OUT17_W","","Write proxy for field `OUT17`",null,null],[3,"OUT18_W","","Write proxy for field `OUT18`",null,null],[3,"OUT19_W","","Write proxy for field `OUT19`",null,null],[6,"R","","Reader of register MIO_OUTSEL3",null,null],[6,"W","","Writer for register MIO_OUTSEL3",null,null],[6,"OUT15_R","","Reader of field `OUT15`",null,null],[6,"OUT16_R","","Reader of field `OUT16`",null,null],[6,"OUT17_R","","Reader of field `OUT17`",null,null],[6,"OUT18_R","","Reader of field `OUT18`",null,null],[6,"OUT19_R","","Reader of field `OUT19`",null,null],[11,"bits","","Writes raw bits to the field",618,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",619,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",620,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",621,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",622,[[["u8"]],["w"]]],[11,"out15","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",623,[[["self"]],["out15_r"]]],[11,"out16","","Bits 6:11 - for OUT16",623,[[["self"]],["out16_r"]]],[11,"out17","","Bits 12:17 - for OUT17",623,[[["self"]],["out17_r"]]],[11,"out18","","Bits 18:23 - for OUT18",623,[[["self"]],["out18_r"]]],[11,"out19","","Bits 24:29 - for OUT19",623,[[["self"]],["out19_r"]]],[11,"out15","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",624,[[["self"]],["out15_w"]]],[11,"out16","","Bits 6:11 - for OUT16",624,[[["self"]],["out16_w"]]],[11,"out17","","Bits 12:17 - for OUT17",624,[[["self"]],["out17_w"]]],[11,"out18","","Bits 18:23 - for OUT18",624,[[["self"]],["out18_w"]]],[11,"out19","","Bits 24:29 - for OUT19",624,[[["self"]],["out19_w"]]],[0,"mio_outsel4","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT20_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel4","Write proxy for field `OUT20`",null,null],[3,"OUT21_W","","Write proxy for field `OUT21`",null,null],[3,"OUT22_W","","Write proxy for field `OUT22`",null,null],[3,"OUT23_W","","Write proxy for field `OUT23`",null,null],[3,"OUT24_W","","Write proxy for field `OUT24`",null,null],[6,"R","","Reader of register MIO_OUTSEL4",null,null],[6,"W","","Writer for register MIO_OUTSEL4",null,null],[6,"OUT20_R","","Reader of field `OUT20`",null,null],[6,"OUT21_R","","Reader of field `OUT21`",null,null],[6,"OUT22_R","","Reader of field `OUT22`",null,null],[6,"OUT23_R","","Reader of field `OUT23`",null,null],[6,"OUT24_R","","Reader of field `OUT24`",null,null],[11,"bits","","Writes raw bits to the field",625,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",626,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",627,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",628,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",629,[[["u8"]],["w"]]],[11,"out20","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",630,[[["self"]],["out20_r"]]],[11,"out21","","Bits 6:11 - for OUT21",630,[[["self"]],["out21_r"]]],[11,"out22","","Bits 12:17 - for OUT22",630,[[["self"]],["out22_r"]]],[11,"out23","","Bits 18:23 - for OUT23",630,[[["self"]],["out23_r"]]],[11,"out24","","Bits 24:29 - for OUT24",630,[[["self"]],["out24_r"]]],[11,"out20","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",631,[[["self"]],["out20_w"]]],[11,"out21","","Bits 6:11 - for OUT21",631,[[["self"]],["out21_w"]]],[11,"out22","","Bits 12:17 - for OUT22",631,[[["self"]],["out22_w"]]],[11,"out23","","Bits 18:23 - for OUT23",631,[[["self"]],["out23_w"]]],[11,"out24","","Bits 24:29 - for OUT24",631,[[["self"]],["out24_w"]]],[0,"mio_outsel5","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT25_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel5","Write proxy for field `OUT25`",null,null],[3,"OUT26_W","","Write proxy for field `OUT26`",null,null],[3,"OUT27_W","","Write proxy for field `OUT27`",null,null],[3,"OUT28_W","","Write proxy for field `OUT28`",null,null],[3,"OUT29_W","","Write proxy for field `OUT29`",null,null],[6,"R","","Reader of register MIO_OUTSEL5",null,null],[6,"W","","Writer for register MIO_OUTSEL5",null,null],[6,"OUT25_R","","Reader of field `OUT25`",null,null],[6,"OUT26_R","","Reader of field `OUT26`",null,null],[6,"OUT27_R","","Reader of field `OUT27`",null,null],[6,"OUT28_R","","Reader of field `OUT28`",null,null],[6,"OUT29_R","","Reader of field `OUT29`",null,null],[11,"bits","","Writes raw bits to the field",632,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",633,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",634,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",635,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",636,[[["u8"]],["w"]]],[11,"out25","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",637,[[["self"]],["out25_r"]]],[11,"out26","","Bits 6:11 - for OUT26",637,[[["self"]],["out26_r"]]],[11,"out27","","Bits 12:17 - for OUT27",637,[[["self"]],["out27_r"]]],[11,"out28","","Bits 18:23 - for OUT28",637,[[["self"]],["out28_r"]]],[11,"out29","","Bits 24:29 - for OUT29",637,[[["self"]],["out29_r"]]],[11,"out25","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",638,[[["self"]],["out25_w"]]],[11,"out26","","Bits 6:11 - for OUT26",638,[[["self"]],["out26_w"]]],[11,"out27","","Bits 12:17 - for OUT27",638,[[["self"]],["out27_w"]]],[11,"out28","","Bits 18:23 - for OUT28",638,[[["self"]],["out28_w"]]],[11,"out29","","Bits 24:29 - for OUT29",638,[[["self"]],["out29_w"]]],[0,"mio_outsel6","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[3,"OUT30_W","earlgrey_registers::pinmux::mio_outsel::mio_outsel6","Write proxy for field `OUT30`",null,null],[3,"OUT31_W","","Write proxy for field `OUT31`",null,null],[6,"R","","Reader of register MIO_OUTSEL6",null,null],[6,"W","","Writer for register MIO_OUTSEL6",null,null],[6,"OUT30_R","","Reader of field `OUT30`",null,null],[6,"OUT31_R","","Reader of field `OUT31`",null,null],[11,"bits","","Writes raw bits to the field",639,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",640,[[["u8"]],["w"]]],[11,"out30","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",641,[[["self"]],["out30_r"]]],[11,"out31","","Bits 6:11 - for OUT31",641,[[["self"]],["out31_r"]]],[11,"out30","","Bits 0:5 - 0: tie constantly to zero, 1: tie constantly to…",642,[[["self"]],["out30_w"]]],[11,"out31","","Bits 6:11 - for OUT31",642,[[["self"]],["out31_w"]]],[6,"MIO_OUTSEL0","earlgrey_registers::pinmux::mio_outsel","Mux select for MIO outputs.",null,null],[6,"MIO_OUTSEL1","","Mux select for MIO outputs.",null,null],[6,"MIO_OUTSEL2","","Mux select for MIO outputs.",null,null],[6,"MIO_OUTSEL3","","Mux select for MIO outputs.",null,null],[6,"MIO_OUTSEL4","","Mux select for MIO outputs.",null,null],[6,"MIO_OUTSEL5","","Mux select for MIO outputs.",null,null],[6,"MIO_OUTSEL6","","Mux select for MIO outputs.",null,null],[0,"regen","earlgrey_registers::pinmux","Register write enable for all control registers.",null,null],[3,"WEN_W","earlgrey_registers::pinmux::regen","Write proxy for field `wen`",null,null],[6,"R","","Reader of register REGEN",null,null],[6,"W","","Writer for register REGEN",null,null],[6,"WEN_R","","Reader of field `wen`",null,null],[11,"set_bit","","Sets the field bit",643,[[],["w"]]],[11,"clear_bit","","Clears the field bit",643,[[],["w"]]],[11,"bit","","Writes raw bits to the field",643,[[["bool"]],["w"]]],[11,"wen","","Bit 0 - When true, all configuration registers can be…",644,[[["self"]],["wen_r"]]],[11,"wen","","Bit 0 - When true, all configuration registers can be…",645,[[["self"]],["wen_w"]]],[6,"REGEN","earlgrey_registers::pinmux","Register write enable for all control registers.",null,null],[0,"alert_handler","earlgrey_registers","alert_handler",null,null],[3,"RegisterBlock","earlgrey_registers::alert_handler","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",646,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",646,null],[12,"intr_test","","0x08 - Interrupt Test Register",646,null],[12,"regen","","0x0c - Register write enable for all control registers.",646,null],[12,"ping_timeout_cyc","","0x10 - Ping timeout cycle count.",646,null],[12,"alert_en","","0x14 - Enable register for alerts.",646,null],[12,"alert_class","","0x18 - Class assignment of alerts.",646,null],[12,"alert_cause","","0x1c - Alert Cause Register",646,null],[12,"loc_alert_en","","0x20 - Enable register for the aggregated local alerts…",646,null],[12,"loc_alert_class","","0x24 - Class assignment of local alerts. \"alert pingfail\"…",646,null],[12,"loc_alert_cause","","0x28 - Alert Cause Register for Local Alerts. \"alert…",646,null],[12,"classa_ctrl","","0x2c - Escalation control register for alert Class A. Can…",646,null],[12,"classa_clren","","0x30 - Clear enable for escalation protocol of Class A…",646,null],[12,"classa_clr","","0x34 - Clear for esclation protocol of Class A.",646,null],[12,"classa_accum_cnt","","0x38 - Current accumulation value for alert Class A.…",646,null],[12,"classa_accum_thresh","","0x3c - Accumulation threshold value for alert Class A.",646,null],[12,"classa_timeout_cyc","","0x40 - Interrupt timeout in cycles.",646,null],[12,"classa_phase0_cyc","","0x44 - Duration of escalation phase 0 for Class A.",646,null],[12,"classa_phase1_cyc","","0x48 - Duration of escalation phase 1 for Class A.",646,null],[12,"classa_phase2_cyc","","0x4c - Duration of escalation phase 2 for Class A.",646,null],[12,"classa_phase3_cyc","","0x50 - Duration of escalation phase 3 for Class A.",646,null],[12,"classa_esc_cnt","","0x54 - Escalation counter in cycles for Class A.",646,null],[12,"classa_state","","0x58 - Current escalation state of Class A. See also…",646,null],[12,"classb_ctrl","","0x5c - Escalation control register for alert Class B. Can…",646,null],[12,"classb_clren","","0x60 - Clear enable for escalation protocol of Class B…",646,null],[12,"classb_clr","","0x64 - Clear for esclation protocol of Class B.",646,null],[12,"classb_accum_cnt","","0x68 - Current accumulation value for alert Class B.…",646,null],[12,"classb_accum_thresh","","0x6c - Accumulation threshold value for alert Class B.",646,null],[12,"classb_timeout_cyc","","0x70 - Interrupt timeout in cycles.",646,null],[12,"classb_phase0_cyc","","0x74 - Duration of escalation phase 0 for Class B.",646,null],[12,"classb_phase1_cyc","","0x78 - Duration of escalation phase 1 for Class B.",646,null],[12,"classb_phase2_cyc","","0x7c - Duration of escalation phase 2 for Class B.",646,null],[12,"classb_phase3_cyc","","0x80 - Duration of escalation phase 3 for Class B.",646,null],[12,"classb_esc_cnt","","0x84 - Escalation counter in cycles for Class B.",646,null],[12,"classb_state","","0x88 - Current escalation state of Class B. See also…",646,null],[12,"classc_ctrl","","0x8c - Escalation control register for alert Class C. Can…",646,null],[12,"classc_clren","","0x90 - Clear enable for escalation protocol of Class C…",646,null],[12,"classc_clr","","0x94 - Clear for esclation protocol of Class C.",646,null],[12,"classc_accum_cnt","","0x98 - Current accumulation value for alert Class C.…",646,null],[12,"classc_accum_thresh","","0x9c - Accumulation threshold value for alert Class C.",646,null],[12,"classc_timeout_cyc","","0xa0 - Interrupt timeout in cycles.",646,null],[12,"classc_phase0_cyc","","0xa4 - Duration of escalation phase 0 for Class C.",646,null],[12,"classc_phase1_cyc","","0xa8 - Duration of escalation phase 1 for Class C.",646,null],[12,"classc_phase2_cyc","","0xac - Duration of escalation phase 2 for Class C.",646,null],[12,"classc_phase3_cyc","","0xb0 - Duration of escalation phase 3 for Class C.",646,null],[12,"classc_esc_cnt","","0xb4 - Escalation counter in cycles for Class C.",646,null],[12,"classc_state","","0xb8 - Current escalation state of Class C. See also…",646,null],[12,"classd_ctrl","","0xbc - Escalation control register for alert Class D. Can…",646,null],[12,"classd_clren","","0xc0 - Clear enable for escalation protocol of Class D…",646,null],[12,"classd_clr","","0xc4 - Clear for esclation protocol of Class D.",646,null],[12,"classd_accum_cnt","","0xc8 - Current accumulation value for alert Class D.…",646,null],[12,"classd_accum_thresh","","0xcc - Accumulation threshold value for alert Class D.",646,null],[12,"classd_timeout_cyc","","0xd0 - Interrupt timeout in cycles.",646,null],[12,"classd_phase0_cyc","","0xd4 - Duration of escalation phase 0 for Class D.",646,null],[12,"classd_phase1_cyc","","0xd8 - Duration of escalation phase 1 for Class D.",646,null],[12,"classd_phase2_cyc","","0xdc - Duration of escalation phase 2 for Class D.",646,null],[12,"classd_phase3_cyc","","0xe0 - Duration of escalation phase 3 for Class D.",646,null],[12,"classd_esc_cnt","","0xe4 - Escalation counter in cycles for Class D.",646,null],[12,"classd_state","","0xe8 - Current escalation state of Class D. See also…",646,null],[0,"intr_state","","Interrupt State Register",null,null],[3,"CLASSA_W","earlgrey_registers::alert_handler::intr_state","Write proxy for field `classa`",null,null],[3,"CLASSB_W","","Write proxy for field `classb`",null,null],[3,"CLASSC_W","","Write proxy for field `classc`",null,null],[3,"CLASSD_W","","Write proxy for field `classd`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"CLASSA_R","","Reader of field `classa`",null,null],[6,"CLASSB_R","","Reader of field `classb`",null,null],[6,"CLASSC_R","","Reader of field `classc`",null,null],[6,"CLASSD_R","","Reader of field `classd`",null,null],[11,"set_bit","","Sets the field bit",647,[[],["w"]]],[11,"clear_bit","","Clears the field bit",647,[[],["w"]]],[11,"bit","","Writes raw bits to the field",647,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",648,[[],["w"]]],[11,"clear_bit","","Clears the field bit",648,[[],["w"]]],[11,"bit","","Writes raw bits to the field",648,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",649,[[],["w"]]],[11,"clear_bit","","Clears the field bit",649,[[],["w"]]],[11,"bit","","Writes raw bits to the field",649,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",650,[[],["w"]]],[11,"clear_bit","","Clears the field bit",650,[[],["w"]]],[11,"bit","","Writes raw bits to the field",650,[[["bool"]],["w"]]],[11,"classa","","Bit 0 - Interrupt state bit of Class A. Set by HW in case…",651,[[["self"]],["classa_r"]]],[11,"classb","","Bit 1 - Interrupt state bit of Class B. Set by HW in case…",651,[[["self"]],["classb_r"]]],[11,"classc","","Bit 2 - Interrupt state bit of Class C. Set by HW in case…",651,[[["self"]],["classc_r"]]],[11,"classd","","Bit 3 - Interrupt state bit of Class D. Set by HW in case…",651,[[["self"]],["classd_r"]]],[11,"classa","","Bit 0 - Interrupt state bit of Class A. Set by HW in case…",652,[[["self"]],["classa_w"]]],[11,"classb","","Bit 1 - Interrupt state bit of Class B. Set by HW in case…",652,[[["self"]],["classb_w"]]],[11,"classc","","Bit 2 - Interrupt state bit of Class C. Set by HW in case…",652,[[["self"]],["classc_w"]]],[11,"classd","","Bit 3 - Interrupt state bit of Class D. Set by HW in case…",652,[[["self"]],["classd_w"]]],[0,"intr_enable","earlgrey_registers::alert_handler","Interrupt Enable Register",null,null],[3,"CLASSA_W","earlgrey_registers::alert_handler::intr_enable","Write proxy for field `classa`",null,null],[3,"CLASSB_W","","Write proxy for field `classb`",null,null],[3,"CLASSC_W","","Write proxy for field `classc`",null,null],[3,"CLASSD_W","","Write proxy for field `classd`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"CLASSA_R","","Reader of field `classa`",null,null],[6,"CLASSB_R","","Reader of field `classb`",null,null],[6,"CLASSC_R","","Reader of field `classc`",null,null],[6,"CLASSD_R","","Reader of field `classd`",null,null],[11,"set_bit","","Sets the field bit",653,[[],["w"]]],[11,"clear_bit","","Clears the field bit",653,[[],["w"]]],[11,"bit","","Writes raw bits to the field",653,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",654,[[],["w"]]],[11,"clear_bit","","Clears the field bit",654,[[],["w"]]],[11,"bit","","Writes raw bits to the field",654,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",655,[[],["w"]]],[11,"clear_bit","","Clears the field bit",655,[[],["w"]]],[11,"bit","","Writes raw bits to the field",655,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",656,[[],["w"]]],[11,"clear_bit","","Clears the field bit",656,[[],["w"]]],[11,"bit","","Writes raw bits to the field",656,[[["bool"]],["w"]]],[11,"classa","","Bit 0 - Enable interrupt when !!INTR_STATE.classa is set",657,[[["self"]],["classa_r"]]],[11,"classb","","Bit 1 - Enable interrupt when !!INTR_STATE.classb is set",657,[[["self"]],["classb_r"]]],[11,"classc","","Bit 2 - Enable interrupt when !!INTR_STATE.classc is set",657,[[["self"]],["classc_r"]]],[11,"classd","","Bit 3 - Enable interrupt when !!INTR_STATE.classd is set",657,[[["self"]],["classd_r"]]],[11,"classa","","Bit 0 - Enable interrupt when !!INTR_STATE.classa is set",658,[[["self"]],["classa_w"]]],[11,"classb","","Bit 1 - Enable interrupt when !!INTR_STATE.classb is set",658,[[["self"]],["classb_w"]]],[11,"classc","","Bit 2 - Enable interrupt when !!INTR_STATE.classc is set",658,[[["self"]],["classc_w"]]],[11,"classd","","Bit 3 - Enable interrupt when !!INTR_STATE.classd is set",658,[[["self"]],["classd_w"]]],[0,"intr_test","earlgrey_registers::alert_handler","Interrupt Test Register",null,null],[3,"CLASSA_W","earlgrey_registers::alert_handler::intr_test","Write proxy for field `classa`",null,null],[3,"CLASSB_W","","Write proxy for field `classb`",null,null],[3,"CLASSC_W","","Write proxy for field `classc`",null,null],[3,"CLASSD_W","","Write proxy for field `classd`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"set_bit","","Sets the field bit",659,[[],["w"]]],[11,"clear_bit","","Clears the field bit",659,[[],["w"]]],[11,"bit","","Writes raw bits to the field",659,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",660,[[],["w"]]],[11,"clear_bit","","Clears the field bit",660,[[],["w"]]],[11,"bit","","Writes raw bits to the field",660,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",661,[[],["w"]]],[11,"clear_bit","","Clears the field bit",661,[[],["w"]]],[11,"bit","","Writes raw bits to the field",661,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",662,[[],["w"]]],[11,"clear_bit","","Clears the field bit",662,[[],["w"]]],[11,"bit","","Writes raw bits to the field",662,[[["bool"]],["w"]]],[11,"classa","","Bit 0 - Write 1 to force !!INTR_STATE.classa to 1",663,[[["self"]],["classa_w"]]],[11,"classb","","Bit 1 - Write 1 to force !!INTR_STATE.classb to 1",663,[[["self"]],["classb_w"]]],[11,"classc","","Bit 2 - Write 1 to force !!INTR_STATE.classc to 1",663,[[["self"]],["classc_w"]]],[11,"classd","","Bit 3 - Write 1 to force !!INTR_STATE.classd to 1",663,[[["self"]],["classd_w"]]],[0,"regen","earlgrey_registers::alert_handler","Register write enable for all control registers.",null,null],[6,"R","earlgrey_registers::alert_handler::regen","Reader of register REGEN",null,null],[6,"W","","Writer for register REGEN",null,null],[0,"ping_timeout_cyc","earlgrey_registers::alert_handler","Ping timeout cycle count.",null,null],[6,"R","earlgrey_registers::alert_handler::ping_timeout_cyc","Reader of register PING_TIMEOUT_CYC",null,null],[6,"W","","Writer for register PING_TIMEOUT_CYC",null,null],[0,"alert_en","earlgrey_registers::alert_handler","Enable register for alerts.",null,null],[3,"EN_A0_W","earlgrey_registers::alert_handler::alert_en","Write proxy for field `EN_A0`",null,null],[3,"EN_A1_W","","Write proxy for field `EN_A1`",null,null],[3,"EN_A2_W","","Write proxy for field `EN_A2`",null,null],[3,"EN_A3_W","","Write proxy for field `EN_A3`",null,null],[6,"R","","Reader of register ALERT_EN",null,null],[6,"W","","Writer for register ALERT_EN",null,null],[6,"EN_A0_R","","Reader of field `EN_A0`",null,null],[6,"EN_A1_R","","Reader of field `EN_A1`",null,null],[6,"EN_A2_R","","Reader of field `EN_A2`",null,null],[6,"EN_A3_R","","Reader of field `EN_A3`",null,null],[11,"set_bit","","Sets the field bit",664,[[],["w"]]],[11,"clear_bit","","Clears the field bit",664,[[],["w"]]],[11,"bit","","Writes raw bits to the field",664,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",665,[[],["w"]]],[11,"clear_bit","","Clears the field bit",665,[[],["w"]]],[11,"bit","","Writes raw bits to the field",665,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",666,[[],["w"]]],[11,"clear_bit","","Clears the field bit",666,[[],["w"]]],[11,"bit","","Writes raw bits to the field",666,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",667,[[],["w"]]],[11,"clear_bit","","Clears the field bit",667,[[],["w"]]],[11,"bit","","Writes raw bits to the field",667,[[["bool"]],["w"]]],[11,"en_a0","","Bit 0 - Alert enable for alert0",668,[[["self"]],["en_a0_r"]]],[11,"en_a1","","Bit 1 - for alert1",668,[[["self"]],["en_a1_r"]]],[11,"en_a2","","Bit 2 - for alert2",668,[[["self"]],["en_a2_r"]]],[11,"en_a3","","Bit 3 - for alert3",668,[[["self"]],["en_a3_r"]]],[11,"en_a0","","Bit 0 - Alert enable for alert0",669,[[["self"]],["en_a0_w"]]],[11,"en_a1","","Bit 1 - for alert1",669,[[["self"]],["en_a1_w"]]],[11,"en_a2","","Bit 2 - for alert2",669,[[["self"]],["en_a2_w"]]],[11,"en_a3","","Bit 3 - for alert3",669,[[["self"]],["en_a3_w"]]],[0,"alert_class","earlgrey_registers::alert_handler","Class assignment of alerts.",null,null],[3,"CLASS_A0_W","earlgrey_registers::alert_handler::alert_class","Write proxy for field `CLASS_A0`",null,null],[3,"CLASS_A1_W","","Write proxy for field `CLASS_A1`",null,null],[3,"CLASS_A2_W","","Write proxy for field `CLASS_A2`",null,null],[3,"CLASS_A3_W","","Write proxy for field `CLASS_A3`",null,null],[6,"R","","Reader of register ALERT_CLASS",null,null],[6,"W","","Writer for register ALERT_CLASS",null,null],[6,"CLASS_A0_R","","Reader of field `CLASS_A0`",null,null],[6,"CLASS_A1_R","","Reader of field `CLASS_A1`",null,null],[6,"CLASS_A2_R","","Reader of field `CLASS_A2`",null,null],[6,"CLASS_A3_R","","Reader of field `CLASS_A3`",null,null],[11,"bits","","Writes raw bits to the field",670,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",671,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",672,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",673,[[["u8"]],["w"]]],[11,"class_a0","","Bits 0:1 - Classification for alert0",674,[[["self"]],["class_a0_r"]]],[11,"class_a1","","Bits 2:3 - for alert1",674,[[["self"]],["class_a1_r"]]],[11,"class_a2","","Bits 4:5 - for alert2",674,[[["self"]],["class_a2_r"]]],[11,"class_a3","","Bits 6:7 - for alert3",674,[[["self"]],["class_a3_r"]]],[11,"class_a0","","Bits 0:1 - Classification for alert0",675,[[["self"]],["class_a0_w"]]],[11,"class_a1","","Bits 2:3 - for alert1",675,[[["self"]],["class_a1_w"]]],[11,"class_a2","","Bits 4:5 - for alert2",675,[[["self"]],["class_a2_w"]]],[11,"class_a3","","Bits 6:7 - for alert3",675,[[["self"]],["class_a3_w"]]],[0,"alert_cause","earlgrey_registers::alert_handler","Alert Cause Register",null,null],[3,"A0_W","earlgrey_registers::alert_handler::alert_cause","Write proxy for field `A0`",null,null],[3,"A1_W","","Write proxy for field `A1`",null,null],[3,"A2_W","","Write proxy for field `A2`",null,null],[3,"A3_W","","Write proxy for field `A3`",null,null],[6,"R","","Reader of register ALERT_CAUSE",null,null],[6,"W","","Writer for register ALERT_CAUSE",null,null],[6,"A0_R","","Reader of field `A0`",null,null],[6,"A1_R","","Reader of field `A1`",null,null],[6,"A2_R","","Reader of field `A2`",null,null],[6,"A3_R","","Reader of field `A3`",null,null],[11,"set_bit","","Sets the field bit",676,[[],["w"]]],[11,"clear_bit","","Clears the field bit",676,[[],["w"]]],[11,"bit","","Writes raw bits to the field",676,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",677,[[],["w"]]],[11,"clear_bit","","Clears the field bit",677,[[],["w"]]],[11,"bit","","Writes raw bits to the field",677,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",678,[[],["w"]]],[11,"clear_bit","","Clears the field bit",678,[[],["w"]]],[11,"bit","","Writes raw bits to the field",678,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",679,[[],["w"]]],[11,"clear_bit","","Clears the field bit",679,[[],["w"]]],[11,"bit","","Writes raw bits to the field",679,[[["bool"]],["w"]]],[11,"a0","","Bit 0 - Cause bit for ALERT0",680,[[["self"]],["a0_r"]]],[11,"a1","","Bit 1 - for ALERT1",680,[[["self"]],["a1_r"]]],[11,"a2","","Bit 2 - for ALERT2",680,[[["self"]],["a2_r"]]],[11,"a3","","Bit 3 - for ALERT3",680,[[["self"]],["a3_r"]]],[11,"a0","","Bit 0 - Cause bit for ALERT0",681,[[["self"]],["a0_w"]]],[11,"a1","","Bit 1 - for ALERT1",681,[[["self"]],["a1_w"]]],[11,"a2","","Bit 2 - for ALERT2",681,[[["self"]],["a2_w"]]],[11,"a3","","Bit 3 - for ALERT3",681,[[["self"]],["a3_w"]]],[0,"loc_alert_en","earlgrey_registers::alert_handler","Enable register for the aggregated local alerts \"alert…",null,null],[3,"EN_LA0_W","earlgrey_registers::alert_handler::loc_alert_en","Write proxy for field `EN_LA0`",null,null],[3,"EN_LA1_W","","Write proxy for field `EN_LA1`",null,null],[3,"EN_LA2_W","","Write proxy for field `EN_LA2`",null,null],[3,"EN_LA3_W","","Write proxy for field `EN_LA3`",null,null],[6,"R","","Reader of register LOC_ALERT_EN",null,null],[6,"W","","Writer for register LOC_ALERT_EN",null,null],[6,"EN_LA0_R","","Reader of field `EN_LA0`",null,null],[6,"EN_LA1_R","","Reader of field `EN_LA1`",null,null],[6,"EN_LA2_R","","Reader of field `EN_LA2`",null,null],[6,"EN_LA3_R","","Reader of field `EN_LA3`",null,null],[11,"set_bit","","Sets the field bit",682,[[],["w"]]],[11,"clear_bit","","Clears the field bit",682,[[],["w"]]],[11,"bit","","Writes raw bits to the field",682,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",683,[[],["w"]]],[11,"clear_bit","","Clears the field bit",683,[[],["w"]]],[11,"bit","","Writes raw bits to the field",683,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",684,[[],["w"]]],[11,"clear_bit","","Clears the field bit",684,[[],["w"]]],[11,"bit","","Writes raw bits to the field",684,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",685,[[],["w"]]],[11,"clear_bit","","Clears the field bit",685,[[],["w"]]],[11,"bit","","Writes raw bits to the field",685,[[["bool"]],["w"]]],[11,"en_la0","","Bit 0 - Alert enable for local alert0",686,[[["self"]],["en_la0_r"]]],[11,"en_la1","","Bit 1 - for local alert1",686,[[["self"]],["en_la1_r"]]],[11,"en_la2","","Bit 2 - for local alert2",686,[[["self"]],["en_la2_r"]]],[11,"en_la3","","Bit 3 - for local alert3",686,[[["self"]],["en_la3_r"]]],[11,"en_la0","","Bit 0 - Alert enable for local alert0",687,[[["self"]],["en_la0_w"]]],[11,"en_la1","","Bit 1 - for local alert1",687,[[["self"]],["en_la1_w"]]],[11,"en_la2","","Bit 2 - for local alert2",687,[[["self"]],["en_la2_w"]]],[11,"en_la3","","Bit 3 - for local alert3",687,[[["self"]],["en_la3_w"]]],[0,"loc_alert_class","earlgrey_registers::alert_handler","Class assignment of local alerts. \"alert pingfail\" (0),…",null,null],[3,"CLASS_LA0_W","earlgrey_registers::alert_handler::loc_alert_class","Write proxy for field `CLASS_LA0`",null,null],[3,"CLASS_LA1_W","","Write proxy for field `CLASS_LA1`",null,null],[3,"CLASS_LA2_W","","Write proxy for field `CLASS_LA2`",null,null],[3,"CLASS_LA3_W","","Write proxy for field `CLASS_LA3`",null,null],[6,"R","","Reader of register LOC_ALERT_CLASS",null,null],[6,"W","","Writer for register LOC_ALERT_CLASS",null,null],[6,"CLASS_LA0_R","","Reader of field `CLASS_LA0`",null,null],[6,"CLASS_LA1_R","","Reader of field `CLASS_LA1`",null,null],[6,"CLASS_LA2_R","","Reader of field `CLASS_LA2`",null,null],[6,"CLASS_LA3_R","","Reader of field `CLASS_LA3`",null,null],[11,"bits","","Writes raw bits to the field",688,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",689,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",690,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",691,[[["u8"]],["w"]]],[11,"class_la0","","Bits 0:1 - Classification for local alert0",692,[[["self"]],["class_la0_r"]]],[11,"class_la1","","Bits 2:3 - for local alert1",692,[[["self"]],["class_la1_r"]]],[11,"class_la2","","Bits 4:5 - for local alert2",692,[[["self"]],["class_la2_r"]]],[11,"class_la3","","Bits 6:7 - for local alert3",692,[[["self"]],["class_la3_r"]]],[11,"class_la0","","Bits 0:1 - Classification for local alert0",693,[[["self"]],["class_la0_w"]]],[11,"class_la1","","Bits 2:3 - for local alert1",693,[[["self"]],["class_la1_w"]]],[11,"class_la2","","Bits 4:5 - for local alert2",693,[[["self"]],["class_la2_w"]]],[11,"class_la3","","Bits 6:7 - for local alert3",693,[[["self"]],["class_la3_w"]]],[0,"loc_alert_cause","earlgrey_registers::alert_handler","Alert Cause Register for Local Alerts. \"alert pingfail\"…",null,null],[3,"LA0_W","earlgrey_registers::alert_handler::loc_alert_cause","Write proxy for field `LA0`",null,null],[3,"LA1_W","","Write proxy for field `LA1`",null,null],[3,"LA2_W","","Write proxy for field `LA2`",null,null],[3,"LA3_W","","Write proxy for field `LA3`",null,null],[6,"R","","Reader of register LOC_ALERT_CAUSE",null,null],[6,"W","","Writer for register LOC_ALERT_CAUSE",null,null],[6,"LA0_R","","Reader of field `LA0`",null,null],[6,"LA1_R","","Reader of field `LA1`",null,null],[6,"LA2_R","","Reader of field `LA2`",null,null],[6,"LA3_R","","Reader of field `LA3`",null,null],[11,"set_bit","","Sets the field bit",694,[[],["w"]]],[11,"clear_bit","","Clears the field bit",694,[[],["w"]]],[11,"bit","","Writes raw bits to the field",694,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",695,[[],["w"]]],[11,"clear_bit","","Clears the field bit",695,[[],["w"]]],[11,"bit","","Writes raw bits to the field",695,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",696,[[],["w"]]],[11,"clear_bit","","Clears the field bit",696,[[],["w"]]],[11,"bit","","Writes raw bits to the field",696,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",697,[[],["w"]]],[11,"clear_bit","","Clears the field bit",697,[[],["w"]]],[11,"bit","","Writes raw bits to the field",697,[[["bool"]],["w"]]],[11,"la0","","Bit 0 - Cause bit for LOC_ALERT0",698,[[["self"]],["la0_r"]]],[11,"la1","","Bit 1 - for LOC_ALERT1",698,[[["self"]],["la1_r"]]],[11,"la2","","Bit 2 - for LOC_ALERT2",698,[[["self"]],["la2_r"]]],[11,"la3","","Bit 3 - for LOC_ALERT3",698,[[["self"]],["la3_r"]]],[11,"la0","","Bit 0 - Cause bit for LOC_ALERT0",699,[[["self"]],["la0_w"]]],[11,"la1","","Bit 1 - for LOC_ALERT1",699,[[["self"]],["la1_w"]]],[11,"la2","","Bit 2 - for LOC_ALERT2",699,[[["self"]],["la2_w"]]],[11,"la3","","Bit 3 - for LOC_ALERT3",699,[[["self"]],["la3_w"]]],[0,"classa_ctrl","earlgrey_registers::alert_handler","Escalation control register for alert Class A. Can not be…",null,null],[3,"EN_W","earlgrey_registers::alert_handler::classa_ctrl","Write proxy for field `EN`",null,null],[3,"LOCK_W","","Write proxy for field `LOCK`",null,null],[3,"EN_E0_W","","Write proxy for field `EN_E0`",null,null],[3,"EN_E1_W","","Write proxy for field `EN_E1`",null,null],[3,"EN_E2_W","","Write proxy for field `EN_E2`",null,null],[3,"EN_E3_W","","Write proxy for field `EN_E3`",null,null],[3,"MAP_E0_W","","Write proxy for field `MAP_E0`",null,null],[3,"MAP_E1_W","","Write proxy for field `MAP_E1`",null,null],[3,"MAP_E2_W","","Write proxy for field `MAP_E2`",null,null],[3,"MAP_E3_W","","Write proxy for field `MAP_E3`",null,null],[6,"R","","Reader of register CLASSA_CTRL",null,null],[6,"W","","Writer for register CLASSA_CTRL",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"EN_E0_R","","Reader of field `EN_E0`",null,null],[6,"EN_E1_R","","Reader of field `EN_E1`",null,null],[6,"EN_E2_R","","Reader of field `EN_E2`",null,null],[6,"EN_E3_R","","Reader of field `EN_E3`",null,null],[6,"MAP_E0_R","","Reader of field `MAP_E0`",null,null],[6,"MAP_E1_R","","Reader of field `MAP_E1`",null,null],[6,"MAP_E2_R","","Reader of field `MAP_E2`",null,null],[6,"MAP_E3_R","","Reader of field `MAP_E3`",null,null],[11,"set_bit","","Sets the field bit",700,[[],["w"]]],[11,"clear_bit","","Clears the field bit",700,[[],["w"]]],[11,"bit","","Writes raw bits to the field",700,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",701,[[],["w"]]],[11,"clear_bit","","Clears the field bit",701,[[],["w"]]],[11,"bit","","Writes raw bits to the field",701,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",702,[[],["w"]]],[11,"clear_bit","","Clears the field bit",702,[[],["w"]]],[11,"bit","","Writes raw bits to the field",702,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",703,[[],["w"]]],[11,"clear_bit","","Clears the field bit",703,[[],["w"]]],[11,"bit","","Writes raw bits to the field",703,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",704,[[],["w"]]],[11,"clear_bit","","Clears the field bit",704,[[],["w"]]],[11,"bit","","Writes raw bits to the field",704,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",705,[[],["w"]]],[11,"clear_bit","","Clears the field bit",705,[[],["w"]]],[11,"bit","","Writes raw bits to the field",705,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",706,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",707,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",708,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",709,[[["u8"]],["w"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",710,[[["self"]],["en_r"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",710,[[["self"]],["lock_r"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class A",710,[[["self"]],["en_e0_r"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class A",710,[[["self"]],["en_e1_r"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class A",710,[[["self"]],["en_e2_r"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class A",710,[[["self"]],["en_e3_r"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",710,[[["self"]],["map_e0_r"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",710,[[["self"]],["map_e1_r"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",710,[[["self"]],["map_e2_r"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",710,[[["self"]],["map_e3_r"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",711,[[["self"]],["en_w"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",711,[[["self"]],["lock_w"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class A",711,[[["self"]],["en_e0_w"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class A",711,[[["self"]],["en_e1_w"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class A",711,[[["self"]],["en_e2_w"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class A",711,[[["self"]],["en_e3_w"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",711,[[["self"]],["map_e0_w"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",711,[[["self"]],["map_e1_w"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",711,[[["self"]],["map_e2_w"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",711,[[["self"]],["map_e3_w"]]],[0,"classa_clren","earlgrey_registers::alert_handler","Clear enable for escalation protocol of Class A alerts.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_clren","Reader of register CLASSA_CLREN",null,null],[6,"W","","Writer for register CLASSA_CLREN",null,null],[0,"classa_clr","earlgrey_registers::alert_handler","Clear for esclation protocol of Class A.",null,null],[6,"W","earlgrey_registers::alert_handler::classa_clr","Writer for register CLASSA_CLR",null,null],[0,"classa_accum_cnt","earlgrey_registers::alert_handler","Current accumulation value for alert Class A. Software can…",null,null],[6,"R","earlgrey_registers::alert_handler::classa_accum_cnt","Reader of register CLASSA_ACCUM_CNT",null,null],[0,"classa_accum_thresh","earlgrey_registers::alert_handler","Accumulation threshold value for alert Class A.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_accum_thresh","Reader of register CLASSA_ACCUM_THRESH",null,null],[6,"W","","Writer for register CLASSA_ACCUM_THRESH",null,null],[0,"classa_timeout_cyc","earlgrey_registers::alert_handler","Interrupt timeout in cycles.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_timeout_cyc","Reader of register CLASSA_TIMEOUT_CYC",null,null],[6,"W","","Writer for register CLASSA_TIMEOUT_CYC",null,null],[0,"classa_phase0_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 0 for Class A.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_phase0_cyc","Reader of register CLASSA_PHASE0_CYC",null,null],[6,"W","","Writer for register CLASSA_PHASE0_CYC",null,null],[0,"classa_phase1_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 1 for Class A.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_phase1_cyc","Reader of register CLASSA_PHASE1_CYC",null,null],[6,"W","","Writer for register CLASSA_PHASE1_CYC",null,null],[0,"classa_phase2_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 2 for Class A.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_phase2_cyc","Reader of register CLASSA_PHASE2_CYC",null,null],[6,"W","","Writer for register CLASSA_PHASE2_CYC",null,null],[0,"classa_phase3_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 3 for Class A.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_phase3_cyc","Reader of register CLASSA_PHASE3_CYC",null,null],[6,"W","","Writer for register CLASSA_PHASE3_CYC",null,null],[0,"classa_esc_cnt","earlgrey_registers::alert_handler","Escalation counter in cycles for Class A.",null,null],[6,"R","earlgrey_registers::alert_handler::classa_esc_cnt","Reader of register CLASSA_ESC_CNT",null,null],[0,"classa_state","earlgrey_registers::alert_handler","Current escalation state of Class A. See also…",null,null],[6,"R","earlgrey_registers::alert_handler::classa_state","Reader of register CLASSA_STATE",null,null],[0,"classb_ctrl","earlgrey_registers::alert_handler","Escalation control register for alert Class B. Can not be…",null,null],[3,"EN_W","earlgrey_registers::alert_handler::classb_ctrl","Write proxy for field `EN`",null,null],[3,"LOCK_W","","Write proxy for field `LOCK`",null,null],[3,"EN_E0_W","","Write proxy for field `EN_E0`",null,null],[3,"EN_E1_W","","Write proxy for field `EN_E1`",null,null],[3,"EN_E2_W","","Write proxy for field `EN_E2`",null,null],[3,"EN_E3_W","","Write proxy for field `EN_E3`",null,null],[3,"MAP_E0_W","","Write proxy for field `MAP_E0`",null,null],[3,"MAP_E1_W","","Write proxy for field `MAP_E1`",null,null],[3,"MAP_E2_W","","Write proxy for field `MAP_E2`",null,null],[3,"MAP_E3_W","","Write proxy for field `MAP_E3`",null,null],[6,"R","","Reader of register CLASSB_CTRL",null,null],[6,"W","","Writer for register CLASSB_CTRL",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"EN_E0_R","","Reader of field `EN_E0`",null,null],[6,"EN_E1_R","","Reader of field `EN_E1`",null,null],[6,"EN_E2_R","","Reader of field `EN_E2`",null,null],[6,"EN_E3_R","","Reader of field `EN_E3`",null,null],[6,"MAP_E0_R","","Reader of field `MAP_E0`",null,null],[6,"MAP_E1_R","","Reader of field `MAP_E1`",null,null],[6,"MAP_E2_R","","Reader of field `MAP_E2`",null,null],[6,"MAP_E3_R","","Reader of field `MAP_E3`",null,null],[11,"set_bit","","Sets the field bit",712,[[],["w"]]],[11,"clear_bit","","Clears the field bit",712,[[],["w"]]],[11,"bit","","Writes raw bits to the field",712,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",713,[[],["w"]]],[11,"clear_bit","","Clears the field bit",713,[[],["w"]]],[11,"bit","","Writes raw bits to the field",713,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",714,[[],["w"]]],[11,"clear_bit","","Clears the field bit",714,[[],["w"]]],[11,"bit","","Writes raw bits to the field",714,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",715,[[],["w"]]],[11,"clear_bit","","Clears the field bit",715,[[],["w"]]],[11,"bit","","Writes raw bits to the field",715,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",716,[[],["w"]]],[11,"clear_bit","","Clears the field bit",716,[[],["w"]]],[11,"bit","","Writes raw bits to the field",716,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",717,[[],["w"]]],[11,"clear_bit","","Clears the field bit",717,[[],["w"]]],[11,"bit","","Writes raw bits to the field",717,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",718,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",719,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",720,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",721,[[["u8"]],["w"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",722,[[["self"]],["en_r"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",722,[[["self"]],["lock_r"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class B",722,[[["self"]],["en_e0_r"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class B",722,[[["self"]],["en_e1_r"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class B",722,[[["self"]],["en_e2_r"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class B",722,[[["self"]],["en_e3_r"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",722,[[["self"]],["map_e0_r"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",722,[[["self"]],["map_e1_r"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",722,[[["self"]],["map_e2_r"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",722,[[["self"]],["map_e3_r"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",723,[[["self"]],["en_w"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",723,[[["self"]],["lock_w"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class B",723,[[["self"]],["en_e0_w"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class B",723,[[["self"]],["en_e1_w"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class B",723,[[["self"]],["en_e2_w"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class B",723,[[["self"]],["en_e3_w"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",723,[[["self"]],["map_e0_w"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",723,[[["self"]],["map_e1_w"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",723,[[["self"]],["map_e2_w"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",723,[[["self"]],["map_e3_w"]]],[0,"classb_clren","earlgrey_registers::alert_handler","Clear enable for escalation protocol of Class B alerts.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_clren","Reader of register CLASSB_CLREN",null,null],[6,"W","","Writer for register CLASSB_CLREN",null,null],[0,"classb_clr","earlgrey_registers::alert_handler","Clear for esclation protocol of Class B.",null,null],[6,"W","earlgrey_registers::alert_handler::classb_clr","Writer for register CLASSB_CLR",null,null],[0,"classb_accum_cnt","earlgrey_registers::alert_handler","Current accumulation value for alert Class B. Software can…",null,null],[6,"R","earlgrey_registers::alert_handler::classb_accum_cnt","Reader of register CLASSB_ACCUM_CNT",null,null],[0,"classb_accum_thresh","earlgrey_registers::alert_handler","Accumulation threshold value for alert Class B.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_accum_thresh","Reader of register CLASSB_ACCUM_THRESH",null,null],[6,"W","","Writer for register CLASSB_ACCUM_THRESH",null,null],[0,"classb_timeout_cyc","earlgrey_registers::alert_handler","Interrupt timeout in cycles.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_timeout_cyc","Reader of register CLASSB_TIMEOUT_CYC",null,null],[6,"W","","Writer for register CLASSB_TIMEOUT_CYC",null,null],[0,"classb_phase0_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 0 for Class B.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_phase0_cyc","Reader of register CLASSB_PHASE0_CYC",null,null],[6,"W","","Writer for register CLASSB_PHASE0_CYC",null,null],[0,"classb_phase1_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 1 for Class B.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_phase1_cyc","Reader of register CLASSB_PHASE1_CYC",null,null],[6,"W","","Writer for register CLASSB_PHASE1_CYC",null,null],[0,"classb_phase2_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 2 for Class B.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_phase2_cyc","Reader of register CLASSB_PHASE2_CYC",null,null],[6,"W","","Writer for register CLASSB_PHASE2_CYC",null,null],[0,"classb_phase3_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 3 for Class B.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_phase3_cyc","Reader of register CLASSB_PHASE3_CYC",null,null],[6,"W","","Writer for register CLASSB_PHASE3_CYC",null,null],[0,"classb_esc_cnt","earlgrey_registers::alert_handler","Escalation counter in cycles for Class B.",null,null],[6,"R","earlgrey_registers::alert_handler::classb_esc_cnt","Reader of register CLASSB_ESC_CNT",null,null],[0,"classb_state","earlgrey_registers::alert_handler","Current escalation state of Class B. See also…",null,null],[6,"R","earlgrey_registers::alert_handler::classb_state","Reader of register CLASSB_STATE",null,null],[0,"classc_ctrl","earlgrey_registers::alert_handler","Escalation control register for alert Class C. Can not be…",null,null],[3,"EN_W","earlgrey_registers::alert_handler::classc_ctrl","Write proxy for field `EN`",null,null],[3,"LOCK_W","","Write proxy for field `LOCK`",null,null],[3,"EN_E0_W","","Write proxy for field `EN_E0`",null,null],[3,"EN_E1_W","","Write proxy for field `EN_E1`",null,null],[3,"EN_E2_W","","Write proxy for field `EN_E2`",null,null],[3,"EN_E3_W","","Write proxy for field `EN_E3`",null,null],[3,"MAP_E0_W","","Write proxy for field `MAP_E0`",null,null],[3,"MAP_E1_W","","Write proxy for field `MAP_E1`",null,null],[3,"MAP_E2_W","","Write proxy for field `MAP_E2`",null,null],[3,"MAP_E3_W","","Write proxy for field `MAP_E3`",null,null],[6,"R","","Reader of register CLASSC_CTRL",null,null],[6,"W","","Writer for register CLASSC_CTRL",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"EN_E0_R","","Reader of field `EN_E0`",null,null],[6,"EN_E1_R","","Reader of field `EN_E1`",null,null],[6,"EN_E2_R","","Reader of field `EN_E2`",null,null],[6,"EN_E3_R","","Reader of field `EN_E3`",null,null],[6,"MAP_E0_R","","Reader of field `MAP_E0`",null,null],[6,"MAP_E1_R","","Reader of field `MAP_E1`",null,null],[6,"MAP_E2_R","","Reader of field `MAP_E2`",null,null],[6,"MAP_E3_R","","Reader of field `MAP_E3`",null,null],[11,"set_bit","","Sets the field bit",724,[[],["w"]]],[11,"clear_bit","","Clears the field bit",724,[[],["w"]]],[11,"bit","","Writes raw bits to the field",724,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",725,[[],["w"]]],[11,"clear_bit","","Clears the field bit",725,[[],["w"]]],[11,"bit","","Writes raw bits to the field",725,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",726,[[],["w"]]],[11,"clear_bit","","Clears the field bit",726,[[],["w"]]],[11,"bit","","Writes raw bits to the field",726,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",727,[[],["w"]]],[11,"clear_bit","","Clears the field bit",727,[[],["w"]]],[11,"bit","","Writes raw bits to the field",727,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",728,[[],["w"]]],[11,"clear_bit","","Clears the field bit",728,[[],["w"]]],[11,"bit","","Writes raw bits to the field",728,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",729,[[],["w"]]],[11,"clear_bit","","Clears the field bit",729,[[],["w"]]],[11,"bit","","Writes raw bits to the field",729,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",730,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",731,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",732,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",733,[[["u8"]],["w"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",734,[[["self"]],["en_r"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",734,[[["self"]],["lock_r"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class C",734,[[["self"]],["en_e0_r"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class C",734,[[["self"]],["en_e1_r"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class C",734,[[["self"]],["en_e2_r"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class C",734,[[["self"]],["en_e3_r"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",734,[[["self"]],["map_e0_r"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",734,[[["self"]],["map_e1_r"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",734,[[["self"]],["map_e2_r"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",734,[[["self"]],["map_e3_r"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",735,[[["self"]],["en_w"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",735,[[["self"]],["lock_w"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class C",735,[[["self"]],["en_e0_w"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class C",735,[[["self"]],["en_e1_w"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class C",735,[[["self"]],["en_e2_w"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class C",735,[[["self"]],["en_e3_w"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",735,[[["self"]],["map_e0_w"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",735,[[["self"]],["map_e1_w"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",735,[[["self"]],["map_e2_w"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",735,[[["self"]],["map_e3_w"]]],[0,"classc_clren","earlgrey_registers::alert_handler","Clear enable for escalation protocol of Class C alerts.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_clren","Reader of register CLASSC_CLREN",null,null],[6,"W","","Writer for register CLASSC_CLREN",null,null],[0,"classc_clr","earlgrey_registers::alert_handler","Clear for esclation protocol of Class C.",null,null],[6,"W","earlgrey_registers::alert_handler::classc_clr","Writer for register CLASSC_CLR",null,null],[0,"classc_accum_cnt","earlgrey_registers::alert_handler","Current accumulation value for alert Class C. Software can…",null,null],[6,"R","earlgrey_registers::alert_handler::classc_accum_cnt","Reader of register CLASSC_ACCUM_CNT",null,null],[0,"classc_accum_thresh","earlgrey_registers::alert_handler","Accumulation threshold value for alert Class C.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_accum_thresh","Reader of register CLASSC_ACCUM_THRESH",null,null],[6,"W","","Writer for register CLASSC_ACCUM_THRESH",null,null],[0,"classc_timeout_cyc","earlgrey_registers::alert_handler","Interrupt timeout in cycles.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_timeout_cyc","Reader of register CLASSC_TIMEOUT_CYC",null,null],[6,"W","","Writer for register CLASSC_TIMEOUT_CYC",null,null],[0,"classc_phase0_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 0 for Class C.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_phase0_cyc","Reader of register CLASSC_PHASE0_CYC",null,null],[6,"W","","Writer for register CLASSC_PHASE0_CYC",null,null],[0,"classc_phase1_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 1 for Class C.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_phase1_cyc","Reader of register CLASSC_PHASE1_CYC",null,null],[6,"W","","Writer for register CLASSC_PHASE1_CYC",null,null],[0,"classc_phase2_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 2 for Class C.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_phase2_cyc","Reader of register CLASSC_PHASE2_CYC",null,null],[6,"W","","Writer for register CLASSC_PHASE2_CYC",null,null],[0,"classc_phase3_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 3 for Class C.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_phase3_cyc","Reader of register CLASSC_PHASE3_CYC",null,null],[6,"W","","Writer for register CLASSC_PHASE3_CYC",null,null],[0,"classc_esc_cnt","earlgrey_registers::alert_handler","Escalation counter in cycles for Class C.",null,null],[6,"R","earlgrey_registers::alert_handler::classc_esc_cnt","Reader of register CLASSC_ESC_CNT",null,null],[0,"classc_state","earlgrey_registers::alert_handler","Current escalation state of Class C. See also…",null,null],[6,"R","earlgrey_registers::alert_handler::classc_state","Reader of register CLASSC_STATE",null,null],[0,"classd_ctrl","earlgrey_registers::alert_handler","Escalation control register for alert Class D. Can not be…",null,null],[3,"EN_W","earlgrey_registers::alert_handler::classd_ctrl","Write proxy for field `EN`",null,null],[3,"LOCK_W","","Write proxy for field `LOCK`",null,null],[3,"EN_E0_W","","Write proxy for field `EN_E0`",null,null],[3,"EN_E1_W","","Write proxy for field `EN_E1`",null,null],[3,"EN_E2_W","","Write proxy for field `EN_E2`",null,null],[3,"EN_E3_W","","Write proxy for field `EN_E3`",null,null],[3,"MAP_E0_W","","Write proxy for field `MAP_E0`",null,null],[3,"MAP_E1_W","","Write proxy for field `MAP_E1`",null,null],[3,"MAP_E2_W","","Write proxy for field `MAP_E2`",null,null],[3,"MAP_E3_W","","Write proxy for field `MAP_E3`",null,null],[6,"R","","Reader of register CLASSD_CTRL",null,null],[6,"W","","Writer for register CLASSD_CTRL",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"EN_E0_R","","Reader of field `EN_E0`",null,null],[6,"EN_E1_R","","Reader of field `EN_E1`",null,null],[6,"EN_E2_R","","Reader of field `EN_E2`",null,null],[6,"EN_E3_R","","Reader of field `EN_E3`",null,null],[6,"MAP_E0_R","","Reader of field `MAP_E0`",null,null],[6,"MAP_E1_R","","Reader of field `MAP_E1`",null,null],[6,"MAP_E2_R","","Reader of field `MAP_E2`",null,null],[6,"MAP_E3_R","","Reader of field `MAP_E3`",null,null],[11,"set_bit","","Sets the field bit",736,[[],["w"]]],[11,"clear_bit","","Clears the field bit",736,[[],["w"]]],[11,"bit","","Writes raw bits to the field",736,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",737,[[],["w"]]],[11,"clear_bit","","Clears the field bit",737,[[],["w"]]],[11,"bit","","Writes raw bits to the field",737,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",738,[[],["w"]]],[11,"clear_bit","","Clears the field bit",738,[[],["w"]]],[11,"bit","","Writes raw bits to the field",738,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",739,[[],["w"]]],[11,"clear_bit","","Clears the field bit",739,[[],["w"]]],[11,"bit","","Writes raw bits to the field",739,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",740,[[],["w"]]],[11,"clear_bit","","Clears the field bit",740,[[],["w"]]],[11,"bit","","Writes raw bits to the field",740,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",741,[[],["w"]]],[11,"clear_bit","","Clears the field bit",741,[[],["w"]]],[11,"bit","","Writes raw bits to the field",741,[[["bool"]],["w"]]],[11,"bits","","Writes raw bits to the field",742,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",743,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",744,[[["u8"]],["w"]]],[11,"bits","","Writes raw bits to the field",745,[[["u8"]],["w"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",746,[[["self"]],["en_r"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",746,[[["self"]],["lock_r"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class D",746,[[["self"]],["en_e0_r"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class D",746,[[["self"]],["en_e1_r"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class D",746,[[["self"]],["en_e2_r"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class D",746,[[["self"]],["en_e3_r"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",746,[[["self"]],["map_e0_r"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",746,[[["self"]],["map_e1_r"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",746,[[["self"]],["map_e2_r"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",746,[[["self"]],["map_e3_r"]]],[11,"en","","Bit 0 - Enable escalation mechanisms (accumulation and…",747,[[["self"]],["en_w"]]],[11,"lock","","Bit 1 - Enable automatic locking of escalation counter for…",747,[[["self"]],["lock_w"]]],[11,"en_e0","","Bit 2 - Enable escalation signal 0 for Class D",747,[[["self"]],["en_e0_w"]]],[11,"en_e1","","Bit 3 - Enable escalation signal 1 for Class D",747,[[["self"]],["en_e1_w"]]],[11,"en_e2","","Bit 4 - Enable escalation signal 2 for Class D",747,[[["self"]],["en_e2_w"]]],[11,"en_e3","","Bit 5 - Enable escalation signal 3 for Class D",747,[[["self"]],["en_e3_w"]]],[11,"map_e0","","Bits 6:7 - Determines in which escalation phase escalation…",747,[[["self"]],["map_e0_w"]]],[11,"map_e1","","Bits 8:9 - Determines in which escalation phase escalation…",747,[[["self"]],["map_e1_w"]]],[11,"map_e2","","Bits 10:11 - Determine sin which escalation phase…",747,[[["self"]],["map_e2_w"]]],[11,"map_e3","","Bits 12:13 - Determines in which escalation phase…",747,[[["self"]],["map_e3_w"]]],[0,"classd_clren","earlgrey_registers::alert_handler","Clear enable for escalation protocol of Class D alerts.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_clren","Reader of register CLASSD_CLREN",null,null],[6,"W","","Writer for register CLASSD_CLREN",null,null],[0,"classd_clr","earlgrey_registers::alert_handler","Clear for esclation protocol of Class D.",null,null],[6,"W","earlgrey_registers::alert_handler::classd_clr","Writer for register CLASSD_CLR",null,null],[0,"classd_accum_cnt","earlgrey_registers::alert_handler","Current accumulation value for alert Class D. Software can…",null,null],[6,"R","earlgrey_registers::alert_handler::classd_accum_cnt","Reader of register CLASSD_ACCUM_CNT",null,null],[0,"classd_accum_thresh","earlgrey_registers::alert_handler","Accumulation threshold value for alert Class D.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_accum_thresh","Reader of register CLASSD_ACCUM_THRESH",null,null],[6,"W","","Writer for register CLASSD_ACCUM_THRESH",null,null],[0,"classd_timeout_cyc","earlgrey_registers::alert_handler","Interrupt timeout in cycles.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_timeout_cyc","Reader of register CLASSD_TIMEOUT_CYC",null,null],[6,"W","","Writer for register CLASSD_TIMEOUT_CYC",null,null],[0,"classd_phase0_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 0 for Class D.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_phase0_cyc","Reader of register CLASSD_PHASE0_CYC",null,null],[6,"W","","Writer for register CLASSD_PHASE0_CYC",null,null],[0,"classd_phase1_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 1 for Class D.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_phase1_cyc","Reader of register CLASSD_PHASE1_CYC",null,null],[6,"W","","Writer for register CLASSD_PHASE1_CYC",null,null],[0,"classd_phase2_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 2 for Class D.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_phase2_cyc","Reader of register CLASSD_PHASE2_CYC",null,null],[6,"W","","Writer for register CLASSD_PHASE2_CYC",null,null],[0,"classd_phase3_cyc","earlgrey_registers::alert_handler","Duration of escalation phase 3 for Class D.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_phase3_cyc","Reader of register CLASSD_PHASE3_CYC",null,null],[6,"W","","Writer for register CLASSD_PHASE3_CYC",null,null],[0,"classd_esc_cnt","earlgrey_registers::alert_handler","Escalation counter in cycles for Class D.",null,null],[6,"R","earlgrey_registers::alert_handler::classd_esc_cnt","Reader of register CLASSD_ESC_CNT",null,null],[0,"classd_state","earlgrey_registers::alert_handler","Current escalation state of Class D. See also…",null,null],[6,"R","earlgrey_registers::alert_handler::classd_state","Reader of register CLASSD_STATE",null,null],[6,"INTR_STATE","earlgrey_registers::alert_handler","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[6,"REGEN","","Register write enable for all control registers.",null,null],[6,"PING_TIMEOUT_CYC","","Ping timeout cycle count.",null,null],[6,"ALERT_EN","","Enable register for alerts.",null,null],[6,"ALERT_CLASS","","Class assignment of alerts.",null,null],[6,"ALERT_CAUSE","","Alert Cause Register",null,null],[6,"LOC_ALERT_EN","","Enable register for the aggregated local alerts \"alert…",null,null],[6,"LOC_ALERT_CLASS","","Class assignment of local alerts. \"alert pingfail\" (0),…",null,null],[6,"LOC_ALERT_CAUSE","","Alert Cause Register for Local Alerts. \"alert pingfail\"…",null,null],[6,"CLASSA_CTRL","","Escalation control register for alert Class A. Can not be…",null,null],[6,"CLASSA_CLREN","","Clear enable for escalation protocol of Class A alerts.",null,null],[6,"CLASSA_CLR","","Clear for esclation protocol of Class A.",null,null],[6,"CLASSA_ACCUM_CNT","","Current accumulation value for alert Class A. Software can…",null,null],[6,"CLASSA_ACCUM_THRESH","","Accumulation threshold value for alert Class A.",null,null],[6,"CLASSA_TIMEOUT_CYC","","Interrupt timeout in cycles.",null,null],[6,"CLASSA_PHASE0_CYC","","Duration of escalation phase 0 for Class A.",null,null],[6,"CLASSA_PHASE1_CYC","","Duration of escalation phase 1 for Class A.",null,null],[6,"CLASSA_PHASE2_CYC","","Duration of escalation phase 2 for Class A.",null,null],[6,"CLASSA_PHASE3_CYC","","Duration of escalation phase 3 for Class A.",null,null],[6,"CLASSA_ESC_CNT","","Escalation counter in cycles for Class A.",null,null],[6,"CLASSA_STATE","","Current escalation state of Class A. See also…",null,null],[6,"CLASSB_CTRL","","Escalation control register for alert Class B. Can not be…",null,null],[6,"CLASSB_CLREN","","Clear enable for escalation protocol of Class B alerts.",null,null],[6,"CLASSB_CLR","","Clear for esclation protocol of Class B.",null,null],[6,"CLASSB_ACCUM_CNT","","Current accumulation value for alert Class B. Software can…",null,null],[6,"CLASSB_ACCUM_THRESH","","Accumulation threshold value for alert Class B.",null,null],[6,"CLASSB_TIMEOUT_CYC","","Interrupt timeout in cycles.",null,null],[6,"CLASSB_PHASE0_CYC","","Duration of escalation phase 0 for Class B.",null,null],[6,"CLASSB_PHASE1_CYC","","Duration of escalation phase 1 for Class B.",null,null],[6,"CLASSB_PHASE2_CYC","","Duration of escalation phase 2 for Class B.",null,null],[6,"CLASSB_PHASE3_CYC","","Duration of escalation phase 3 for Class B.",null,null],[6,"CLASSB_ESC_CNT","","Escalation counter in cycles for Class B.",null,null],[6,"CLASSB_STATE","","Current escalation state of Class B. See also…",null,null],[6,"CLASSC_CTRL","","Escalation control register for alert Class C. Can not be…",null,null],[6,"CLASSC_CLREN","","Clear enable for escalation protocol of Class C alerts.",null,null],[6,"CLASSC_CLR","","Clear for esclation protocol of Class C.",null,null],[6,"CLASSC_ACCUM_CNT","","Current accumulation value for alert Class C. Software can…",null,null],[6,"CLASSC_ACCUM_THRESH","","Accumulation threshold value for alert Class C.",null,null],[6,"CLASSC_TIMEOUT_CYC","","Interrupt timeout in cycles.",null,null],[6,"CLASSC_PHASE0_CYC","","Duration of escalation phase 0 for Class C.",null,null],[6,"CLASSC_PHASE1_CYC","","Duration of escalation phase 1 for Class C.",null,null],[6,"CLASSC_PHASE2_CYC","","Duration of escalation phase 2 for Class C.",null,null],[6,"CLASSC_PHASE3_CYC","","Duration of escalation phase 3 for Class C.",null,null],[6,"CLASSC_ESC_CNT","","Escalation counter in cycles for Class C.",null,null],[6,"CLASSC_STATE","","Current escalation state of Class C. See also…",null,null],[6,"CLASSD_CTRL","","Escalation control register for alert Class D. Can not be…",null,null],[6,"CLASSD_CLREN","","Clear enable for escalation protocol of Class D alerts.",null,null],[6,"CLASSD_CLR","","Clear for esclation protocol of Class D.",null,null],[6,"CLASSD_ACCUM_CNT","","Current accumulation value for alert Class D. Software can…",null,null],[6,"CLASSD_ACCUM_THRESH","","Accumulation threshold value for alert Class D.",null,null],[6,"CLASSD_TIMEOUT_CYC","","Interrupt timeout in cycles.",null,null],[6,"CLASSD_PHASE0_CYC","","Duration of escalation phase 0 for Class D.",null,null],[6,"CLASSD_PHASE1_CYC","","Duration of escalation phase 1 for Class D.",null,null],[6,"CLASSD_PHASE2_CYC","","Duration of escalation phase 2 for Class D.",null,null],[6,"CLASSD_PHASE3_CYC","","Duration of escalation phase 3 for Class D.",null,null],[6,"CLASSD_ESC_CNT","","Escalation counter in cycles for Class D.",null,null],[6,"CLASSD_STATE","","Current escalation state of Class D. See also…",null,null],[0,"nmi_gen","earlgrey_registers","nmi_gen",null,null],[3,"RegisterBlock","earlgrey_registers::nmi_gen","Register block",null,null],[12,"intr_state","","0x00 - Interrupt State Register",748,null],[12,"intr_enable","","0x04 - Interrupt Enable Register",748,null],[12,"intr_test","","0x08 - Interrupt Test Register",748,null],[0,"intr_state","","Interrupt State Register",null,null],[3,"ESC0_W","earlgrey_registers::nmi_gen::intr_state","Write proxy for field `esc0`",null,null],[3,"ESC1_W","","Write proxy for field `esc1`",null,null],[3,"ESC2_W","","Write proxy for field `esc2`",null,null],[3,"ESC3_W","","Write proxy for field `esc3`",null,null],[6,"R","","Reader of register INTR_STATE",null,null],[6,"W","","Writer for register INTR_STATE",null,null],[6,"ESC0_R","","Reader of field `esc0`",null,null],[6,"ESC1_R","","Reader of field `esc1`",null,null],[6,"ESC2_R","","Reader of field `esc2`",null,null],[6,"ESC3_R","","Reader of field `esc3`",null,null],[11,"set_bit","","Sets the field bit",749,[[],["w"]]],[11,"clear_bit","","Clears the field bit",749,[[],["w"]]],[11,"bit","","Writes raw bits to the field",749,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",750,[[],["w"]]],[11,"clear_bit","","Clears the field bit",750,[[],["w"]]],[11,"bit","","Writes raw bits to the field",750,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",751,[[],["w"]]],[11,"clear_bit","","Clears the field bit",751,[[],["w"]]],[11,"bit","","Writes raw bits to the field",751,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",752,[[],["w"]]],[11,"clear_bit","","Clears the field bit",752,[[],["w"]]],[11,"bit","","Writes raw bits to the field",752,[[["bool"]],["w"]]],[11,"esc0","","Bit 0 - Escalation interrupt 0",753,[[["self"]],["esc0_r"]]],[11,"esc1","","Bit 1 - Escalation interrupt 1",753,[[["self"]],["esc1_r"]]],[11,"esc2","","Bit 2 - Escalation interrupt 2",753,[[["self"]],["esc2_r"]]],[11,"esc3","","Bit 3 - Escalation interrupt 3",753,[[["self"]],["esc3_r"]]],[11,"esc0","","Bit 0 - Escalation interrupt 0",754,[[["self"]],["esc0_w"]]],[11,"esc1","","Bit 1 - Escalation interrupt 1",754,[[["self"]],["esc1_w"]]],[11,"esc2","","Bit 2 - Escalation interrupt 2",754,[[["self"]],["esc2_w"]]],[11,"esc3","","Bit 3 - Escalation interrupt 3",754,[[["self"]],["esc3_w"]]],[0,"intr_enable","earlgrey_registers::nmi_gen","Interrupt Enable Register",null,null],[3,"ESC0_W","earlgrey_registers::nmi_gen::intr_enable","Write proxy for field `esc0`",null,null],[3,"ESC1_W","","Write proxy for field `esc1`",null,null],[3,"ESC2_W","","Write proxy for field `esc2`",null,null],[3,"ESC3_W","","Write proxy for field `esc3`",null,null],[6,"R","","Reader of register INTR_ENABLE",null,null],[6,"W","","Writer for register INTR_ENABLE",null,null],[6,"ESC0_R","","Reader of field `esc0`",null,null],[6,"ESC1_R","","Reader of field `esc1`",null,null],[6,"ESC2_R","","Reader of field `esc2`",null,null],[6,"ESC3_R","","Reader of field `esc3`",null,null],[11,"set_bit","","Sets the field bit",755,[[],["w"]]],[11,"clear_bit","","Clears the field bit",755,[[],["w"]]],[11,"bit","","Writes raw bits to the field",755,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",756,[[],["w"]]],[11,"clear_bit","","Clears the field bit",756,[[],["w"]]],[11,"bit","","Writes raw bits to the field",756,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",757,[[],["w"]]],[11,"clear_bit","","Clears the field bit",757,[[],["w"]]],[11,"bit","","Writes raw bits to the field",757,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",758,[[],["w"]]],[11,"clear_bit","","Clears the field bit",758,[[],["w"]]],[11,"bit","","Writes raw bits to the field",758,[[["bool"]],["w"]]],[11,"esc0","","Bit 0 - Enable interrupt when !!INTR_STATE.esc0 is set",759,[[["self"]],["esc0_r"]]],[11,"esc1","","Bit 1 - Enable interrupt when !!INTR_STATE.esc1 is set",759,[[["self"]],["esc1_r"]]],[11,"esc2","","Bit 2 - Enable interrupt when !!INTR_STATE.esc2 is set",759,[[["self"]],["esc2_r"]]],[11,"esc3","","Bit 3 - Enable interrupt when !!INTR_STATE.esc3 is set",759,[[["self"]],["esc3_r"]]],[11,"esc0","","Bit 0 - Enable interrupt when !!INTR_STATE.esc0 is set",760,[[["self"]],["esc0_w"]]],[11,"esc1","","Bit 1 - Enable interrupt when !!INTR_STATE.esc1 is set",760,[[["self"]],["esc1_w"]]],[11,"esc2","","Bit 2 - Enable interrupt when !!INTR_STATE.esc2 is set",760,[[["self"]],["esc2_w"]]],[11,"esc3","","Bit 3 - Enable interrupt when !!INTR_STATE.esc3 is set",760,[[["self"]],["esc3_w"]]],[0,"intr_test","earlgrey_registers::nmi_gen","Interrupt Test Register",null,null],[3,"ESC0_W","earlgrey_registers::nmi_gen::intr_test","Write proxy for field `esc0`",null,null],[3,"ESC1_W","","Write proxy for field `esc1`",null,null],[3,"ESC2_W","","Write proxy for field `esc2`",null,null],[3,"ESC3_W","","Write proxy for field `esc3`",null,null],[6,"W","","Writer for register INTR_TEST",null,null],[11,"set_bit","","Sets the field bit",761,[[],["w"]]],[11,"clear_bit","","Clears the field bit",761,[[],["w"]]],[11,"bit","","Writes raw bits to the field",761,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",762,[[],["w"]]],[11,"clear_bit","","Clears the field bit",762,[[],["w"]]],[11,"bit","","Writes raw bits to the field",762,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",763,[[],["w"]]],[11,"clear_bit","","Clears the field bit",763,[[],["w"]]],[11,"bit","","Writes raw bits to the field",763,[[["bool"]],["w"]]],[11,"set_bit","","Sets the field bit",764,[[],["w"]]],[11,"clear_bit","","Clears the field bit",764,[[],["w"]]],[11,"bit","","Writes raw bits to the field",764,[[["bool"]],["w"]]],[11,"esc0","","Bit 0 - Write 1 to force !!INTR_STATE.esc0 to 1",765,[[["self"]],["esc0_w"]]],[11,"esc1","","Bit 1 - Write 1 to force !!INTR_STATE.esc1 to 1",765,[[["self"]],["esc1_w"]]],[11,"esc2","","Bit 2 - Write 1 to force !!INTR_STATE.esc2 to 1",765,[[["self"]],["esc2_w"]]],[11,"esc3","","Bit 3 - Write 1 to force !!INTR_STATE.esc3 to 1",765,[[["self"]],["esc3_w"]]],[6,"INTR_STATE","earlgrey_registers::nmi_gen","Interrupt State Register",null,null],[6,"INTR_ENABLE","","Interrupt Enable Register",null,null],[6,"INTR_TEST","","Interrupt Test Register",null,null],[17,"NVIC_PRIO_BITS","earlgrey_registers","Number available in the NVIC for configuring priority",null,null],[11,"ptr","","Returns a pointer to the register block",766,[[]]],[11,"ptr","","Returns a pointer to the register block",767,[[]]],[11,"ptr","","Returns a pointer to the register block",768,[[]]],[11,"ptr","","Returns a pointer to the register block",769,[[]]],[11,"ptr","","Returns a pointer to the register block",770,[[]]],[11,"ptr","","Returns a pointer to the register block",771,[[]]],[11,"ptr","","Returns a pointer to the register block",772,[[]]],[11,"ptr","","Returns a pointer to the register block",773,[[]]],[11,"ptr","","Returns a pointer to the register block",774,[[]]],[11,"ptr","","Returns a pointer to the register block",775,[[]]],[11,"ptr","","Returns a pointer to the register block",776,[[]]],[11,"take","","Returns all the peripherals once",0,[[],["option"]]],[11,"steal","","Unchecked version of `Peripherals::take`",0,[[],["self"]]],[11,"from","","",766,[[["t"]],["t"]]],[11,"try_from","","",766,[[["u"]],["result"]]],[11,"into","","",766,[[],["u"]]],[11,"try_into","","",766,[[],["result"]]],[11,"borrow","","",766,[[["self"]],["t"]]],[11,"borrow_mut","","",766,[[["self"]],["t"]]],[11,"type_id","","",766,[[["self"]],["typeid"]]],[11,"from","","",767,[[["t"]],["t"]]],[11,"try_from","","",767,[[["u"]],["result"]]],[11,"into","","",767,[[],["u"]]],[11,"try_into","","",767,[[],["result"]]],[11,"borrow","","",767,[[["self"]],["t"]]],[11,"borrow_mut","","",767,[[["self"]],["t"]]],[11,"type_id","","",767,[[["self"]],["typeid"]]],[11,"from","","",768,[[["t"]],["t"]]],[11,"try_from","","",768,[[["u"]],["result"]]],[11,"into","","",768,[[],["u"]]],[11,"try_into","","",768,[[],["result"]]],[11,"borrow","","",768,[[["self"]],["t"]]],[11,"borrow_mut","","",768,[[["self"]],["t"]]],[11,"type_id","","",768,[[["self"]],["typeid"]]],[11,"from","","",769,[[["t"]],["t"]]],[11,"try_from","","",769,[[["u"]],["result"]]],[11,"into","","",769,[[],["u"]]],[11,"try_into","","",769,[[],["result"]]],[11,"borrow","","",769,[[["self"]],["t"]]],[11,"borrow_mut","","",769,[[["self"]],["t"]]],[11,"type_id","","",769,[[["self"]],["typeid"]]],[11,"from","","",770,[[["t"]],["t"]]],[11,"try_from","","",770,[[["u"]],["result"]]],[11,"into","","",770,[[],["u"]]],[11,"try_into","","",770,[[],["result"]]],[11,"borrow","","",770,[[["self"]],["t"]]],[11,"borrow_mut","","",770,[[["self"]],["t"]]],[11,"type_id","","",770,[[["self"]],["typeid"]]],[11,"from","","",771,[[["t"]],["t"]]],[11,"try_from","","",771,[[["u"]],["result"]]],[11,"into","","",771,[[],["u"]]],[11,"try_into","","",771,[[],["result"]]],[11,"borrow","","",771,[[["self"]],["t"]]],[11,"borrow_mut","","",771,[[["self"]],["t"]]],[11,"type_id","","",771,[[["self"]],["typeid"]]],[11,"from","","",772,[[["t"]],["t"]]],[11,"try_from","","",772,[[["u"]],["result"]]],[11,"into","","",772,[[],["u"]]],[11,"try_into","","",772,[[],["result"]]],[11,"borrow","","",772,[[["self"]],["t"]]],[11,"borrow_mut","","",772,[[["self"]],["t"]]],[11,"type_id","","",772,[[["self"]],["typeid"]]],[11,"from","","",773,[[["t"]],["t"]]],[11,"try_from","","",773,[[["u"]],["result"]]],[11,"into","","",773,[[],["u"]]],[11,"try_into","","",773,[[],["result"]]],[11,"borrow","","",773,[[["self"]],["t"]]],[11,"borrow_mut","","",773,[[["self"]],["t"]]],[11,"type_id","","",773,[[["self"]],["typeid"]]],[11,"from","","",774,[[["t"]],["t"]]],[11,"try_from","","",774,[[["u"]],["result"]]],[11,"into","","",774,[[],["u"]]],[11,"try_into","","",774,[[],["result"]]],[11,"borrow","","",774,[[["self"]],["t"]]],[11,"borrow_mut","","",774,[[["self"]],["t"]]],[11,"type_id","","",774,[[["self"]],["typeid"]]],[11,"from","","",775,[[["t"]],["t"]]],[11,"try_from","","",775,[[["u"]],["result"]]],[11,"into","","",775,[[],["u"]]],[11,"try_into","","",775,[[],["result"]]],[11,"borrow","","",775,[[["self"]],["t"]]],[11,"borrow_mut","","",775,[[["self"]],["t"]]],[11,"type_id","","",775,[[["self"]],["typeid"]]],[11,"from","","",776,[[["t"]],["t"]]],[11,"try_from","","",776,[[["u"]],["result"]]],[11,"into","","",776,[[],["u"]]],[11,"try_into","","",776,[[],["result"]]],[11,"borrow","","",776,[[["self"]],["t"]]],[11,"borrow_mut","","",776,[[["self"]],["t"]]],[11,"type_id","","",776,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::generic","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::intr_state","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::intr_enable","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::intr_test","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::ctrl","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::fifo_ctrl","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::ovrd","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::uart::timeout_ctrl","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::intr_state","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::intr_enable","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::intr_test","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::masked_out_lower","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::masked_out_upper","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::masked_oe_lower","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::gpio::masked_oe_upper","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::intr_state","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::intr_enable","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::intr_test","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::control","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::cfg","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::fifo_level","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::rxf_ptr","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::txf_ptr","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::rxf_addr","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::spi_device::txf_addr","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg0","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg1","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"into","","",162,[[],["u"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg2","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"into","","",165,[[],["u"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"into","","",166,[[],["u"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"into","","",167,[[],["u"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"into","","",168,[[],["u"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"into","","",169,[[],["u"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"into","","",170,[[],["u"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg3","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"into","","",173,[[],["u"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"into","","",174,[[],["u"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"into","","",175,[[],["u"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"into","","",176,[[],["u"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"into","","",177,[[],["u"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"into","","",178,[[],["u"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg4","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"into","","",181,[[],["u"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"into","","",182,[[],["u"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"into","","",183,[[],["u"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"into","","",184,[[],["u"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"into","","",185,[[],["u"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"into","","",186,[[],["u"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg5","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"into","","",189,[[],["u"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"into","","",190,[[],["u"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"into","","",191,[[],["u"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"into","","",192,[[],["u"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"into","","",193,[[],["u"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"into","","",194,[[],["u"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg6","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"into","","",197,[[],["u"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"into","","",198,[[],["u"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"into","","",199,[[],["u"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"into","","",200,[[],["u"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"into","","",201,[[],["u"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"into","","",202,[[],["u"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_region_cfg::mp_region_cfg7","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"into","","",205,[[],["u"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"into","","",206,[[],["u"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"into","","",207,[[],["u"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"into","","",208,[[],["u"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"into","","",209,[[],["u"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"into","","",210,[[],["u"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::intr_state","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"into","","",213,[[],["u"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"into","","",214,[[],["u"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"into","","",215,[[],["u"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"into","","",216,[[],["u"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"into","","",217,[[],["u"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"into","","",218,[[],["u"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::intr_enable","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"into","","",221,[[],["u"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"into","","",222,[[],["u"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"into","","",223,[[],["u"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"into","","",224,[[],["u"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"into","","",225,[[],["u"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"into","","",226,[[],["u"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::intr_test","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"into","","",229,[[],["u"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"into","","",230,[[],["u"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"into","","",231,[[],["u"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"into","","",232,[[],["u"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"into","","",233,[[],["u"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"into","","",234,[[],["u"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::control","",236,[[["t"]],["t"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"into","","",236,[[],["u"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"into","","",237,[[],["u"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"into","","",238,[[],["u"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"into","","",239,[[],["u"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"into","","",240,[[],["u"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::addr","",243,[[["t"]],["t"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"into","","",243,[[],["u"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::region_cfg_regwen","",246,[[["t"]],["t"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"into","","",246,[[],["u"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"into","","",247,[[],["u"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"into","","",248,[[],["u"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"into","","",249,[[],["u"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"into","","",250,[[],["u"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"into","","",251,[[],["u"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"into","","",252,[[],["u"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"into","","",253,[[],["u"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::default_region","",256,[[["t"]],["t"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"into","","",256,[[],["u"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"into","","",257,[[],["u"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"into","","",258,[[],["u"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::bank_cfg_regwen","",261,[[["t"]],["t"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"into","","",261,[[],["u"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::mp_bank_cfg","",264,[[["t"]],["t"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"into","","",264,[[],["u"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"into","","",265,[[],["u"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::op_status","",268,[[["t"]],["t"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"into","","",268,[[],["u"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"into","","",269,[[],["u"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::scratch","",273,[[["t"]],["t"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"into","","",273,[[],["u"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::flash_ctrl::fifo_lvl","",276,[[["t"]],["t"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"into","","",276,[[],["u"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"into","","",277,[[],["u"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer","",280,[[["t"]],["t"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"into","","",280,[[],["u"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::ctrl","",281,[[["t"]],["t"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"into","","",281,[[],["u"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::cfg0","",284,[[["t"]],["t"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"into","","",284,[[],["u"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"into","","",285,[[],["u"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::timer_v_lower0","",288,[[["t"]],["t"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"into","","",288,[[],["u"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::timer_v_upper0","",291,[[["t"]],["t"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"into","","",291,[[],["u"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::compare_lower0_0","",294,[[["t"]],["t"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"into","","",294,[[],["u"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::compare_upper0_0","",297,[[["t"]],["t"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"into","","",297,[[],["u"]]],[11,"try_into","","",297,[[],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"type_id","","",297,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::intr_enable0","",300,[[["t"]],["t"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"into","","",300,[[],["u"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::intr_state0","",303,[[["t"]],["t"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"into","","",303,[[],["u"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_timer::intr_test0","",306,[[["t"]],["t"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"into","","",306,[[],["u"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes","",308,[[["t"]],["t"]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"into","","",308,[[],["u"]]],[11,"try_into","","",308,[[],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"type_id","","",308,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"into","","",309,[[],["u"]]],[11,"try_into","","",309,[[],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"into","","",310,[[],["u"]]],[11,"try_into","","",310,[[],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"type_id","","",310,[[["self"]],["typeid"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"into","","",311,[[],["u"]]],[11,"try_into","","",311,[[],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"type_id","","",311,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key0","",312,[[["t"]],["t"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"into","","",312,[[],["u"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key1","",314,[[["t"]],["t"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"into","","",314,[[],["u"]]],[11,"try_into","","",314,[[],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"type_id","","",314,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key2","",316,[[["t"]],["t"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"into","","",316,[[],["u"]]],[11,"try_into","","",316,[[],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"type_id","","",316,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key3","",318,[[["t"]],["t"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"into","","",318,[[],["u"]]],[11,"try_into","","",318,[[],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"type_id","","",318,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key4","",320,[[["t"]],["t"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"into","","",320,[[],["u"]]],[11,"try_into","","",320,[[],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"type_id","","",320,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key5","",322,[[["t"]],["t"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"into","","",322,[[],["u"]]],[11,"try_into","","",322,[[],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"type_id","","",322,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key6","",324,[[["t"]],["t"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"into","","",324,[[],["u"]]],[11,"try_into","","",324,[[],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"type_id","","",324,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::key::key7","",326,[[["t"]],["t"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"into","","",326,[[],["u"]]],[11,"try_into","","",326,[[],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"type_id","","",326,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::data_in::data_in0","",328,[[["t"]],["t"]]],[11,"try_from","","",328,[[["u"]],["result"]]],[11,"into","","",328,[[],["u"]]],[11,"try_into","","",328,[[],["result"]]],[11,"borrow","","",328,[[["self"]],["t"]]],[11,"borrow_mut","","",328,[[["self"]],["t"]]],[11,"type_id","","",328,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::data_in::data_in1","",330,[[["t"]],["t"]]],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"into","","",330,[[],["u"]]],[11,"try_into","","",330,[[],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"type_id","","",330,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::data_in::data_in2","",332,[[["t"]],["t"]]],[11,"try_from","","",332,[[["u"]],["result"]]],[11,"into","","",332,[[],["u"]]],[11,"try_into","","",332,[[],["result"]]],[11,"borrow","","",332,[[["self"]],["t"]]],[11,"borrow_mut","","",332,[[["self"]],["t"]]],[11,"type_id","","",332,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::data_in::data_in3","",334,[[["t"]],["t"]]],[11,"try_from","","",334,[[["u"]],["result"]]],[11,"into","","",334,[[],["u"]]],[11,"try_into","","",334,[[],["result"]]],[11,"borrow","","",334,[[["self"]],["t"]]],[11,"borrow_mut","","",334,[[["self"]],["t"]]],[11,"type_id","","",334,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::ctrl","",340,[[["t"]],["t"]]],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"into","","",340,[[],["u"]]],[11,"try_into","","",340,[[],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"type_id","","",340,[[["self"]],["typeid"]]],[11,"from","","",341,[[["t"]],["t"]]],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"into","","",341,[[],["u"]]],[11,"try_into","","",341,[[],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"type_id","","",341,[[["self"]],["typeid"]]],[11,"from","","",342,[[["t"]],["t"]]],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"into","","",342,[[],["u"]]],[11,"try_into","","",342,[[],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"type_id","","",342,[[["self"]],["typeid"]]],[11,"from","","",343,[[["t"]],["t"]]],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"into","","",343,[[],["u"]]],[11,"try_into","","",343,[[],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"type_id","","",343,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::aes::trigger","",346,[[["t"]],["t"]]],[11,"try_from","","",346,[[["u"]],["result"]]],[11,"into","","",346,[[],["u"]]],[11,"try_into","","",346,[[],["result"]]],[11,"borrow","","",346,[[["self"]],["t"]]],[11,"borrow_mut","","",346,[[["self"]],["t"]]],[11,"type_id","","",346,[[["self"]],["typeid"]]],[11,"from","","",347,[[["t"]],["t"]]],[11,"try_from","","",347,[[["u"]],["result"]]],[11,"into","","",347,[[],["u"]]],[11,"try_into","","",347,[[],["result"]]],[11,"borrow","","",347,[[["self"]],["t"]]],[11,"borrow_mut","","",347,[[["self"]],["t"]]],[11,"type_id","","",347,[[["self"]],["typeid"]]],[11,"from","","",348,[[["t"]],["t"]]],[11,"try_from","","",348,[[["u"]],["result"]]],[11,"into","","",348,[[],["u"]]],[11,"try_into","","",348,[[],["result"]]],[11,"borrow","","",348,[[["self"]],["t"]]],[11,"borrow_mut","","",348,[[["self"]],["t"]]],[11,"type_id","","",348,[[["self"]],["typeid"]]],[11,"from","","",349,[[["t"]],["t"]]],[11,"try_from","","",349,[[["u"]],["result"]]],[11,"into","","",349,[[],["u"]]],[11,"try_into","","",349,[[],["result"]]],[11,"borrow","","",349,[[["self"]],["t"]]],[11,"borrow_mut","","",349,[[["self"]],["t"]]],[11,"type_id","","",349,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac","",352,[[["t"]],["t"]]],[11,"try_from","","",352,[[["u"]],["result"]]],[11,"into","","",352,[[],["u"]]],[11,"try_into","","",352,[[],["result"]]],[11,"borrow","","",352,[[["self"]],["t"]]],[11,"borrow_mut","","",352,[[["self"]],["t"]]],[11,"type_id","","",352,[[["self"]],["typeid"]]],[11,"from","","",353,[[["t"]],["t"]]],[11,"try_from","","",353,[[["u"]],["result"]]],[11,"into","","",353,[[],["u"]]],[11,"try_into","","",353,[[],["result"]]],[11,"borrow","","",353,[[["self"]],["t"]]],[11,"borrow_mut","","",353,[[["self"]],["t"]]],[11,"type_id","","",353,[[["self"]],["typeid"]]],[11,"from","","",354,[[["t"]],["t"]]],[11,"try_from","","",354,[[["u"]],["result"]]],[11,"into","","",354,[[],["u"]]],[11,"try_into","","",354,[[],["result"]]],[11,"borrow","","",354,[[["self"]],["t"]]],[11,"borrow_mut","","",354,[[["self"]],["t"]]],[11,"type_id","","",354,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key0","",355,[[["t"]],["t"]]],[11,"try_from","","",355,[[["u"]],["result"]]],[11,"into","","",355,[[],["u"]]],[11,"try_into","","",355,[[],["result"]]],[11,"borrow","","",355,[[["self"]],["t"]]],[11,"borrow_mut","","",355,[[["self"]],["t"]]],[11,"type_id","","",355,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key1","",357,[[["t"]],["t"]]],[11,"try_from","","",357,[[["u"]],["result"]]],[11,"into","","",357,[[],["u"]]],[11,"try_into","","",357,[[],["result"]]],[11,"borrow","","",357,[[["self"]],["t"]]],[11,"borrow_mut","","",357,[[["self"]],["t"]]],[11,"type_id","","",357,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key2","",359,[[["t"]],["t"]]],[11,"try_from","","",359,[[["u"]],["result"]]],[11,"into","","",359,[[],["u"]]],[11,"try_into","","",359,[[],["result"]]],[11,"borrow","","",359,[[["self"]],["t"]]],[11,"borrow_mut","","",359,[[["self"]],["t"]]],[11,"type_id","","",359,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key3","",361,[[["t"]],["t"]]],[11,"try_from","","",361,[[["u"]],["result"]]],[11,"into","","",361,[[],["u"]]],[11,"try_into","","",361,[[],["result"]]],[11,"borrow","","",361,[[["self"]],["t"]]],[11,"borrow_mut","","",361,[[["self"]],["t"]]],[11,"type_id","","",361,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key4","",363,[[["t"]],["t"]]],[11,"try_from","","",363,[[["u"]],["result"]]],[11,"into","","",363,[[],["u"]]],[11,"try_into","","",363,[[],["result"]]],[11,"borrow","","",363,[[["self"]],["t"]]],[11,"borrow_mut","","",363,[[["self"]],["t"]]],[11,"type_id","","",363,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key5","",365,[[["t"]],["t"]]],[11,"try_from","","",365,[[["u"]],["result"]]],[11,"into","","",365,[[],["u"]]],[11,"try_into","","",365,[[],["result"]]],[11,"borrow","","",365,[[["self"]],["t"]]],[11,"borrow_mut","","",365,[[["self"]],["t"]]],[11,"type_id","","",365,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key6","",367,[[["t"]],["t"]]],[11,"try_from","","",367,[[["u"]],["result"]]],[11,"into","","",367,[[],["u"]]],[11,"try_into","","",367,[[],["result"]]],[11,"borrow","","",367,[[["self"]],["t"]]],[11,"borrow_mut","","",367,[[["self"]],["t"]]],[11,"type_id","","",367,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::key::key7","",369,[[["t"]],["t"]]],[11,"try_from","","",369,[[["u"]],["result"]]],[11,"into","","",369,[[],["u"]]],[11,"try_into","","",369,[[],["result"]]],[11,"borrow","","",369,[[["self"]],["t"]]],[11,"borrow_mut","","",369,[[["self"]],["t"]]],[11,"type_id","","",369,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::intr_state","",379,[[["t"]],["t"]]],[11,"try_from","","",379,[[["u"]],["result"]]],[11,"into","","",379,[[],["u"]]],[11,"try_into","","",379,[[],["result"]]],[11,"borrow","","",379,[[["self"]],["t"]]],[11,"borrow_mut","","",379,[[["self"]],["t"]]],[11,"type_id","","",379,[[["self"]],["typeid"]]],[11,"from","","",380,[[["t"]],["t"]]],[11,"try_from","","",380,[[["u"]],["result"]]],[11,"into","","",380,[[],["u"]]],[11,"try_into","","",380,[[],["result"]]],[11,"borrow","","",380,[[["self"]],["t"]]],[11,"borrow_mut","","",380,[[["self"]],["t"]]],[11,"type_id","","",380,[[["self"]],["typeid"]]],[11,"from","","",381,[[["t"]],["t"]]],[11,"try_from","","",381,[[["u"]],["result"]]],[11,"into","","",381,[[],["u"]]],[11,"try_into","","",381,[[],["result"]]],[11,"borrow","","",381,[[["self"]],["t"]]],[11,"borrow_mut","","",381,[[["self"]],["t"]]],[11,"type_id","","",381,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::intr_enable","",384,[[["t"]],["t"]]],[11,"try_from","","",384,[[["u"]],["result"]]],[11,"into","","",384,[[],["u"]]],[11,"try_into","","",384,[[],["result"]]],[11,"borrow","","",384,[[["self"]],["t"]]],[11,"borrow_mut","","",384,[[["self"]],["t"]]],[11,"type_id","","",384,[[["self"]],["typeid"]]],[11,"from","","",385,[[["t"]],["t"]]],[11,"try_from","","",385,[[["u"]],["result"]]],[11,"into","","",385,[[],["u"]]],[11,"try_into","","",385,[[],["result"]]],[11,"borrow","","",385,[[["self"]],["t"]]],[11,"borrow_mut","","",385,[[["self"]],["t"]]],[11,"type_id","","",385,[[["self"]],["typeid"]]],[11,"from","","",386,[[["t"]],["t"]]],[11,"try_from","","",386,[[["u"]],["result"]]],[11,"into","","",386,[[],["u"]]],[11,"try_into","","",386,[[],["result"]]],[11,"borrow","","",386,[[["self"]],["t"]]],[11,"borrow_mut","","",386,[[["self"]],["t"]]],[11,"type_id","","",386,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::intr_test","",389,[[["t"]],["t"]]],[11,"try_from","","",389,[[["u"]],["result"]]],[11,"into","","",389,[[],["u"]]],[11,"try_into","","",389,[[],["result"]]],[11,"borrow","","",389,[[["self"]],["t"]]],[11,"borrow_mut","","",389,[[["self"]],["t"]]],[11,"type_id","","",389,[[["self"]],["typeid"]]],[11,"from","","",390,[[["t"]],["t"]]],[11,"try_from","","",390,[[["u"]],["result"]]],[11,"into","","",390,[[],["u"]]],[11,"try_into","","",390,[[],["result"]]],[11,"borrow","","",390,[[["self"]],["t"]]],[11,"borrow_mut","","",390,[[["self"]],["t"]]],[11,"type_id","","",390,[[["self"]],["typeid"]]],[11,"from","","",391,[[["t"]],["t"]]],[11,"try_from","","",391,[[["u"]],["result"]]],[11,"into","","",391,[[],["u"]]],[11,"try_into","","",391,[[],["result"]]],[11,"borrow","","",391,[[["self"]],["t"]]],[11,"borrow_mut","","",391,[[["self"]],["t"]]],[11,"type_id","","",391,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::cfg","",393,[[["t"]],["t"]]],[11,"try_from","","",393,[[["u"]],["result"]]],[11,"into","","",393,[[],["u"]]],[11,"try_into","","",393,[[],["result"]]],[11,"borrow","","",393,[[["self"]],["t"]]],[11,"borrow_mut","","",393,[[["self"]],["t"]]],[11,"type_id","","",393,[[["self"]],["typeid"]]],[11,"from","","",394,[[["t"]],["t"]]],[11,"try_from","","",394,[[["u"]],["result"]]],[11,"into","","",394,[[],["u"]]],[11,"try_into","","",394,[[],["result"]]],[11,"borrow","","",394,[[["self"]],["t"]]],[11,"borrow_mut","","",394,[[["self"]],["t"]]],[11,"type_id","","",394,[[["self"]],["typeid"]]],[11,"from","","",395,[[["t"]],["t"]]],[11,"try_from","","",395,[[["u"]],["result"]]],[11,"into","","",395,[[],["u"]]],[11,"try_into","","",395,[[],["result"]]],[11,"borrow","","",395,[[["self"]],["t"]]],[11,"borrow_mut","","",395,[[["self"]],["t"]]],[11,"type_id","","",395,[[["self"]],["typeid"]]],[11,"from","","",396,[[["t"]],["t"]]],[11,"try_from","","",396,[[["u"]],["result"]]],[11,"into","","",396,[[],["u"]]],[11,"try_into","","",396,[[],["result"]]],[11,"borrow","","",396,[[["self"]],["t"]]],[11,"borrow_mut","","",396,[[["self"]],["t"]]],[11,"type_id","","",396,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::cmd","",399,[[["t"]],["t"]]],[11,"try_from","","",399,[[["u"]],["result"]]],[11,"into","","",399,[[],["u"]]],[11,"try_into","","",399,[[],["result"]]],[11,"borrow","","",399,[[["self"]],["t"]]],[11,"borrow_mut","","",399,[[["self"]],["t"]]],[11,"type_id","","",399,[[["self"]],["typeid"]]],[11,"from","","",400,[[["t"]],["t"]]],[11,"try_from","","",400,[[["u"]],["result"]]],[11,"into","","",400,[[],["u"]]],[11,"try_into","","",400,[[],["result"]]],[11,"borrow","","",400,[[["self"]],["t"]]],[11,"borrow_mut","","",400,[[["self"]],["t"]]],[11,"type_id","","",400,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::hmac::wipe_secret","",404,[[["t"]],["t"]]],[11,"try_from","","",404,[[["u"]],["result"]]],[11,"into","","",404,[[],["u"]]],[11,"try_into","","",404,[[],["result"]]],[11,"borrow","","",404,[[["self"]],["t"]]],[11,"borrow_mut","","",404,[[["self"]],["t"]]],[11,"type_id","","",404,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_plic","",408,[[["t"]],["t"]]],[11,"try_from","","",408,[[["u"]],["result"]]],[11,"into","","",408,[[],["u"]]],[11,"try_into","","",408,[[],["result"]]],[11,"borrow","","",408,[[["self"]],["t"]]],[11,"borrow_mut","","",408,[[["self"]],["t"]]],[11,"type_id","","",408,[[["self"]],["typeid"]]],[11,"from","","",409,[[["t"]],["t"]]],[11,"try_from","","",409,[[["u"]],["result"]]],[11,"into","","",409,[[],["u"]]],[11,"try_into","","",409,[[],["result"]]],[11,"borrow","","",409,[[["self"]],["t"]]],[11,"borrow_mut","","",409,[[["self"]],["t"]]],[11,"type_id","","",409,[[["self"]],["typeid"]]],[11,"from","","",410,[[["t"]],["t"]]],[11,"try_from","","",410,[[["u"]],["result"]]],[11,"into","","",410,[[],["u"]]],[11,"try_into","","",410,[[],["result"]]],[11,"borrow","","",410,[[["self"]],["t"]]],[11,"borrow_mut","","",410,[[["self"]],["t"]]],[11,"type_id","","",410,[[["self"]],["typeid"]]],[11,"from","","",411,[[["t"]],["t"]]],[11,"try_from","","",411,[[["u"]],["result"]]],[11,"into","","",411,[[],["u"]]],[11,"try_into","","",411,[[],["result"]]],[11,"borrow","","",411,[[["self"]],["t"]]],[11,"borrow_mut","","",411,[[["self"]],["t"]]],[11,"type_id","","",411,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_plic::le::le0","",414,[[["t"]],["t"]]],[11,"try_from","","",414,[[["u"]],["result"]]],[11,"into","","",414,[[],["u"]]],[11,"try_into","","",414,[[],["result"]]],[11,"borrow","","",414,[[["self"]],["t"]]],[11,"borrow_mut","","",414,[[["self"]],["t"]]],[11,"type_id","","",414,[[["self"]],["typeid"]]],[11,"from","","",415,[[["t"]],["t"]]],[11,"try_from","","",415,[[["u"]],["result"]]],[11,"into","","",415,[[],["u"]]],[11,"try_into","","",415,[[],["result"]]],[11,"borrow","","",415,[[["self"]],["t"]]],[11,"borrow_mut","","",415,[[["self"]],["t"]]],[11,"type_id","","",415,[[["self"]],["typeid"]]],[11,"from","","",416,[[["t"]],["t"]]],[11,"try_from","","",416,[[["u"]],["result"]]],[11,"into","","",416,[[],["u"]]],[11,"try_into","","",416,[[],["result"]]],[11,"borrow","","",416,[[["self"]],["t"]]],[11,"borrow_mut","","",416,[[["self"]],["t"]]],[11,"type_id","","",416,[[["self"]],["typeid"]]],[11,"from","","",417,[[["t"]],["t"]]],[11,"try_from","","",417,[[["u"]],["result"]]],[11,"into","","",417,[[],["u"]]],[11,"try_into","","",417,[[],["result"]]],[11,"borrow","","",417,[[["self"]],["t"]]],[11,"borrow_mut","","",417,[[["self"]],["t"]]],[11,"type_id","","",417,[[["self"]],["typeid"]]],[11,"from","","",418,[[["t"]],["t"]]],[11,"try_from","","",418,[[["u"]],["result"]]],[11,"into","","",418,[[],["u"]]],[11,"try_into","","",418,[[],["result"]]],[11,"borrow","","",418,[[["self"]],["t"]]],[11,"borrow_mut","","",418,[[["self"]],["t"]]],[11,"type_id","","",418,[[["self"]],["typeid"]]],[11,"from","","",419,[[["t"]],["t"]]],[11,"try_from","","",419,[[["u"]],["result"]]],[11,"into","","",419,[[],["u"]]],[11,"try_into","","",419,[[],["result"]]],[11,"borrow","","",419,[[["self"]],["t"]]],[11,"borrow_mut","","",419,[[["self"]],["t"]]],[11,"type_id","","",419,[[["self"]],["typeid"]]],[11,"from","","",420,[[["t"]],["t"]]],[11,"try_from","","",420,[[["u"]],["result"]]],[11,"into","","",420,[[],["u"]]],[11,"try_into","","",420,[[],["result"]]],[11,"borrow","","",420,[[["self"]],["t"]]],[11,"borrow_mut","","",420,[[["self"]],["t"]]],[11,"type_id","","",420,[[["self"]],["typeid"]]],[11,"from","","",421,[[["t"]],["t"]]],[11,"try_from","","",421,[[["u"]],["result"]]],[11,"into","","",421,[[],["u"]]],[11,"try_into","","",421,[[],["result"]]],[11,"borrow","","",421,[[["self"]],["t"]]],[11,"borrow_mut","","",421,[[["self"]],["t"]]],[11,"type_id","","",421,[[["self"]],["typeid"]]],[11,"from","","",422,[[["t"]],["t"]]],[11,"try_from","","",422,[[["u"]],["result"]]],[11,"into","","",422,[[],["u"]]],[11,"try_into","","",422,[[],["result"]]],[11,"borrow","","",422,[[["self"]],["t"]]],[11,"borrow_mut","","",422,[[["self"]],["t"]]],[11,"type_id","","",422,[[["self"]],["typeid"]]],[11,"from","","",423,[[["t"]],["t"]]],[11,"try_from","","",423,[[["u"]],["result"]]],[11,"into","","",423,[[],["u"]]],[11,"try_into","","",423,[[],["result"]]],[11,"borrow","","",423,[[["self"]],["t"]]],[11,"borrow_mut","","",423,[[["self"]],["t"]]],[11,"type_id","","",423,[[["self"]],["typeid"]]],[11,"from","","",424,[[["t"]],["t"]]],[11,"try_from","","",424,[[["u"]],["result"]]],[11,"into","","",424,[[],["u"]]],[11,"try_into","","",424,[[],["result"]]],[11,"borrow","","",424,[[["self"]],["t"]]],[11,"borrow_mut","","",424,[[["self"]],["t"]]],[11,"type_id","","",424,[[["self"]],["typeid"]]],[11,"from","","",425,[[["t"]],["t"]]],[11,"try_from","","",425,[[["u"]],["result"]]],[11,"into","","",425,[[],["u"]]],[11,"try_into","","",425,[[],["result"]]],[11,"borrow","","",425,[[["self"]],["t"]]],[11,"borrow_mut","","",425,[[["self"]],["t"]]],[11,"type_id","","",425,[[["self"]],["typeid"]]],[11,"from","","",426,[[["t"]],["t"]]],[11,"try_from","","",426,[[["u"]],["result"]]],[11,"into","","",426,[[],["u"]]],[11,"try_into","","",426,[[],["result"]]],[11,"borrow","","",426,[[["self"]],["t"]]],[11,"borrow_mut","","",426,[[["self"]],["t"]]],[11,"type_id","","",426,[[["self"]],["typeid"]]],[11,"from","","",427,[[["t"]],["t"]]],[11,"try_from","","",427,[[["u"]],["result"]]],[11,"into","","",427,[[],["u"]]],[11,"try_into","","",427,[[],["result"]]],[11,"borrow","","",427,[[["self"]],["t"]]],[11,"borrow_mut","","",427,[[["self"]],["t"]]],[11,"type_id","","",427,[[["self"]],["typeid"]]],[11,"from","","",428,[[["t"]],["t"]]],[11,"try_from","","",428,[[["u"]],["result"]]],[11,"into","","",428,[[],["u"]]],[11,"try_into","","",428,[[],["result"]]],[11,"borrow","","",428,[[["self"]],["t"]]],[11,"borrow_mut","","",428,[[["self"]],["t"]]],[11,"type_id","","",428,[[["self"]],["typeid"]]],[11,"from","","",429,[[["t"]],["t"]]],[11,"try_from","","",429,[[["u"]],["result"]]],[11,"into","","",429,[[],["u"]]],[11,"try_into","","",429,[[],["result"]]],[11,"borrow","","",429,[[["self"]],["t"]]],[11,"borrow_mut","","",429,[[["self"]],["t"]]],[11,"type_id","","",429,[[["self"]],["typeid"]]],[11,"from","","",430,[[["t"]],["t"]]],[11,"try_from","","",430,[[["u"]],["result"]]],[11,"into","","",430,[[],["u"]]],[11,"try_into","","",430,[[],["result"]]],[11,"borrow","","",430,[[["self"]],["t"]]],[11,"borrow_mut","","",430,[[["self"]],["t"]]],[11,"type_id","","",430,[[["self"]],["typeid"]]],[11,"from","","",431,[[["t"]],["t"]]],[11,"try_from","","",431,[[["u"]],["result"]]],[11,"into","","",431,[[],["u"]]],[11,"try_into","","",431,[[],["result"]]],[11,"borrow","","",431,[[["self"]],["t"]]],[11,"borrow_mut","","",431,[[["self"]],["t"]]],[11,"type_id","","",431,[[["self"]],["typeid"]]],[11,"from","","",432,[[["t"]],["t"]]],[11,"try_from","","",432,[[["u"]],["result"]]],[11,"into","","",432,[[],["u"]]],[11,"try_into","","",432,[[],["result"]]],[11,"borrow","","",432,[[["self"]],["t"]]],[11,"borrow_mut","","",432,[[["self"]],["t"]]],[11,"type_id","","",432,[[["self"]],["typeid"]]],[11,"from","","",433,[[["t"]],["t"]]],[11,"try_from","","",433,[[["u"]],["result"]]],[11,"into","","",433,[[],["u"]]],[11,"try_into","","",433,[[],["result"]]],[11,"borrow","","",433,[[["self"]],["t"]]],[11,"borrow_mut","","",433,[[["self"]],["t"]]],[11,"type_id","","",433,[[["self"]],["typeid"]]],[11,"from","","",434,[[["t"]],["t"]]],[11,"try_from","","",434,[[["u"]],["result"]]],[11,"into","","",434,[[],["u"]]],[11,"try_into","","",434,[[],["result"]]],[11,"borrow","","",434,[[["self"]],["t"]]],[11,"borrow_mut","","",434,[[["self"]],["t"]]],[11,"type_id","","",434,[[["self"]],["typeid"]]],[11,"from","","",435,[[["t"]],["t"]]],[11,"try_from","","",435,[[["u"]],["result"]]],[11,"into","","",435,[[],["u"]]],[11,"try_into","","",435,[[],["result"]]],[11,"borrow","","",435,[[["self"]],["t"]]],[11,"borrow_mut","","",435,[[["self"]],["t"]]],[11,"type_id","","",435,[[["self"]],["typeid"]]],[11,"from","","",436,[[["t"]],["t"]]],[11,"try_from","","",436,[[["u"]],["result"]]],[11,"into","","",436,[[],["u"]]],[11,"try_into","","",436,[[],["result"]]],[11,"borrow","","",436,[[["self"]],["t"]]],[11,"borrow_mut","","",436,[[["self"]],["t"]]],[11,"type_id","","",436,[[["self"]],["typeid"]]],[11,"from","","",437,[[["t"]],["t"]]],[11,"try_from","","",437,[[["u"]],["result"]]],[11,"into","","",437,[[],["u"]]],[11,"try_into","","",437,[[],["result"]]],[11,"borrow","","",437,[[["self"]],["t"]]],[11,"borrow_mut","","",437,[[["self"]],["t"]]],[11,"type_id","","",437,[[["self"]],["typeid"]]],[11,"from","","",438,[[["t"]],["t"]]],[11,"try_from","","",438,[[["u"]],["result"]]],[11,"into","","",438,[[],["u"]]],[11,"try_into","","",438,[[],["result"]]],[11,"borrow","","",438,[[["self"]],["t"]]],[11,"borrow_mut","","",438,[[["self"]],["t"]]],[11,"type_id","","",438,[[["self"]],["typeid"]]],[11,"from","","",439,[[["t"]],["t"]]],[11,"try_from","","",439,[[["u"]],["result"]]],[11,"into","","",439,[[],["u"]]],[11,"try_into","","",439,[[],["result"]]],[11,"borrow","","",439,[[["self"]],["t"]]],[11,"borrow_mut","","",439,[[["self"]],["t"]]],[11,"type_id","","",439,[[["self"]],["typeid"]]],[11,"from","","",440,[[["t"]],["t"]]],[11,"try_from","","",440,[[["u"]],["result"]]],[11,"into","","",440,[[],["u"]]],[11,"try_into","","",440,[[],["result"]]],[11,"borrow","","",440,[[["self"]],["t"]]],[11,"borrow_mut","","",440,[[["self"]],["t"]]],[11,"type_id","","",440,[[["self"]],["typeid"]]],[11,"from","","",441,[[["t"]],["t"]]],[11,"try_from","","",441,[[["u"]],["result"]]],[11,"into","","",441,[[],["u"]]],[11,"try_into","","",441,[[],["result"]]],[11,"borrow","","",441,[[["self"]],["t"]]],[11,"borrow_mut","","",441,[[["self"]],["t"]]],[11,"type_id","","",441,[[["self"]],["typeid"]]],[11,"from","","",442,[[["t"]],["t"]]],[11,"try_from","","",442,[[["u"]],["result"]]],[11,"into","","",442,[[],["u"]]],[11,"try_into","","",442,[[],["result"]]],[11,"borrow","","",442,[[["self"]],["t"]]],[11,"borrow_mut","","",442,[[["self"]],["t"]]],[11,"type_id","","",442,[[["self"]],["typeid"]]],[11,"from","","",443,[[["t"]],["t"]]],[11,"try_from","","",443,[[["u"]],["result"]]],[11,"into","","",443,[[],["u"]]],[11,"try_into","","",443,[[],["result"]]],[11,"borrow","","",443,[[["self"]],["t"]]],[11,"borrow_mut","","",443,[[["self"]],["t"]]],[11,"type_id","","",443,[[["self"]],["typeid"]]],[11,"from","","",444,[[["t"]],["t"]]],[11,"try_from","","",444,[[["u"]],["result"]]],[11,"into","","",444,[[],["u"]]],[11,"try_into","","",444,[[],["result"]]],[11,"borrow","","",444,[[["self"]],["t"]]],[11,"borrow_mut","","",444,[[["self"]],["t"]]],[11,"type_id","","",444,[[["self"]],["typeid"]]],[11,"from","","",445,[[["t"]],["t"]]],[11,"try_from","","",445,[[["u"]],["result"]]],[11,"into","","",445,[[],["u"]]],[11,"try_into","","",445,[[],["result"]]],[11,"borrow","","",445,[[["self"]],["t"]]],[11,"borrow_mut","","",445,[[["self"]],["t"]]],[11,"type_id","","",445,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_plic::le::le1","",448,[[["t"]],["t"]]],[11,"try_from","","",448,[[["u"]],["result"]]],[11,"into","","",448,[[],["u"]]],[11,"try_into","","",448,[[],["result"]]],[11,"borrow","","",448,[[["self"]],["t"]]],[11,"borrow_mut","","",448,[[["self"]],["t"]]],[11,"type_id","","",448,[[["self"]],["typeid"]]],[11,"from","","",449,[[["t"]],["t"]]],[11,"try_from","","",449,[[["u"]],["result"]]],[11,"into","","",449,[[],["u"]]],[11,"try_into","","",449,[[],["result"]]],[11,"borrow","","",449,[[["self"]],["t"]]],[11,"borrow_mut","","",449,[[["self"]],["t"]]],[11,"type_id","","",449,[[["self"]],["typeid"]]],[11,"from","","",450,[[["t"]],["t"]]],[11,"try_from","","",450,[[["u"]],["result"]]],[11,"into","","",450,[[],["u"]]],[11,"try_into","","",450,[[],["result"]]],[11,"borrow","","",450,[[["self"]],["t"]]],[11,"borrow_mut","","",450,[[["self"]],["t"]]],[11,"type_id","","",450,[[["self"]],["typeid"]]],[11,"from","","",451,[[["t"]],["t"]]],[11,"try_from","","",451,[[["u"]],["result"]]],[11,"into","","",451,[[],["u"]]],[11,"try_into","","",451,[[],["result"]]],[11,"borrow","","",451,[[["self"]],["t"]]],[11,"borrow_mut","","",451,[[["self"]],["t"]]],[11,"type_id","","",451,[[["self"]],["typeid"]]],[11,"from","","",452,[[["t"]],["t"]]],[11,"try_from","","",452,[[["u"]],["result"]]],[11,"into","","",452,[[],["u"]]],[11,"try_into","","",452,[[],["result"]]],[11,"borrow","","",452,[[["self"]],["t"]]],[11,"borrow_mut","","",452,[[["self"]],["t"]]],[11,"type_id","","",452,[[["self"]],["typeid"]]],[11,"from","","",453,[[["t"]],["t"]]],[11,"try_from","","",453,[[["u"]],["result"]]],[11,"into","","",453,[[],["u"]]],[11,"try_into","","",453,[[],["result"]]],[11,"borrow","","",453,[[["self"]],["t"]]],[11,"borrow_mut","","",453,[[["self"]],["t"]]],[11,"type_id","","",453,[[["self"]],["typeid"]]],[11,"from","","",454,[[["t"]],["t"]]],[11,"try_from","","",454,[[["u"]],["result"]]],[11,"into","","",454,[[],["u"]]],[11,"try_into","","",454,[[],["result"]]],[11,"borrow","","",454,[[["self"]],["t"]]],[11,"borrow_mut","","",454,[[["self"]],["t"]]],[11,"type_id","","",454,[[["self"]],["typeid"]]],[11,"from","","",455,[[["t"]],["t"]]],[11,"try_from","","",455,[[["u"]],["result"]]],[11,"into","","",455,[[],["u"]]],[11,"try_into","","",455,[[],["result"]]],[11,"borrow","","",455,[[["self"]],["t"]]],[11,"borrow_mut","","",455,[[["self"]],["t"]]],[11,"type_id","","",455,[[["self"]],["typeid"]]],[11,"from","","",456,[[["t"]],["t"]]],[11,"try_from","","",456,[[["u"]],["result"]]],[11,"into","","",456,[[],["u"]]],[11,"try_into","","",456,[[],["result"]]],[11,"borrow","","",456,[[["self"]],["t"]]],[11,"borrow_mut","","",456,[[["self"]],["t"]]],[11,"type_id","","",456,[[["self"]],["typeid"]]],[11,"from","","",457,[[["t"]],["t"]]],[11,"try_from","","",457,[[["u"]],["result"]]],[11,"into","","",457,[[],["u"]]],[11,"try_into","","",457,[[],["result"]]],[11,"borrow","","",457,[[["self"]],["t"]]],[11,"borrow_mut","","",457,[[["self"]],["t"]]],[11,"type_id","","",457,[[["self"]],["typeid"]]],[11,"from","","",458,[[["t"]],["t"]]],[11,"try_from","","",458,[[["u"]],["result"]]],[11,"into","","",458,[[],["u"]]],[11,"try_into","","",458,[[],["result"]]],[11,"borrow","","",458,[[["self"]],["t"]]],[11,"borrow_mut","","",458,[[["self"]],["t"]]],[11,"type_id","","",458,[[["self"]],["typeid"]]],[11,"from","","",459,[[["t"]],["t"]]],[11,"try_from","","",459,[[["u"]],["result"]]],[11,"into","","",459,[[],["u"]]],[11,"try_into","","",459,[[],["result"]]],[11,"borrow","","",459,[[["self"]],["t"]]],[11,"borrow_mut","","",459,[[["self"]],["t"]]],[11,"type_id","","",459,[[["self"]],["typeid"]]],[11,"from","","",460,[[["t"]],["t"]]],[11,"try_from","","",460,[[["u"]],["result"]]],[11,"into","","",460,[[],["u"]]],[11,"try_into","","",460,[[],["result"]]],[11,"borrow","","",460,[[["self"]],["t"]]],[11,"borrow_mut","","",460,[[["self"]],["t"]]],[11,"type_id","","",460,[[["self"]],["typeid"]]],[11,"from","","",461,[[["t"]],["t"]]],[11,"try_from","","",461,[[["u"]],["result"]]],[11,"into","","",461,[[],["u"]]],[11,"try_into","","",461,[[],["result"]]],[11,"borrow","","",461,[[["self"]],["t"]]],[11,"borrow_mut","","",461,[[["self"]],["t"]]],[11,"type_id","","",461,[[["self"]],["typeid"]]],[11,"from","","",462,[[["t"]],["t"]]],[11,"try_from","","",462,[[["u"]],["result"]]],[11,"into","","",462,[[],["u"]]],[11,"try_into","","",462,[[],["result"]]],[11,"borrow","","",462,[[["self"]],["t"]]],[11,"borrow_mut","","",462,[[["self"]],["t"]]],[11,"type_id","","",462,[[["self"]],["typeid"]]],[11,"from","","",463,[[["t"]],["t"]]],[11,"try_from","","",463,[[["u"]],["result"]]],[11,"into","","",463,[[],["u"]]],[11,"try_into","","",463,[[],["result"]]],[11,"borrow","","",463,[[["self"]],["t"]]],[11,"borrow_mut","","",463,[[["self"]],["t"]]],[11,"type_id","","",463,[[["self"]],["typeid"]]],[11,"from","","",464,[[["t"]],["t"]]],[11,"try_from","","",464,[[["u"]],["result"]]],[11,"into","","",464,[[],["u"]]],[11,"try_into","","",464,[[],["result"]]],[11,"borrow","","",464,[[["self"]],["t"]]],[11,"borrow_mut","","",464,[[["self"]],["t"]]],[11,"type_id","","",464,[[["self"]],["typeid"]]],[11,"from","","",465,[[["t"]],["t"]]],[11,"try_from","","",465,[[["u"]],["result"]]],[11,"into","","",465,[[],["u"]]],[11,"try_into","","",465,[[],["result"]]],[11,"borrow","","",465,[[["self"]],["t"]]],[11,"borrow_mut","","",465,[[["self"]],["t"]]],[11,"type_id","","",465,[[["self"]],["typeid"]]],[11,"from","","",466,[[["t"]],["t"]]],[11,"try_from","","",466,[[["u"]],["result"]]],[11,"into","","",466,[[],["u"]]],[11,"try_into","","",466,[[],["result"]]],[11,"borrow","","",466,[[["self"]],["t"]]],[11,"borrow_mut","","",466,[[["self"]],["t"]]],[11,"type_id","","",466,[[["self"]],["typeid"]]],[11,"from","","",467,[[["t"]],["t"]]],[11,"try_from","","",467,[[["u"]],["result"]]],[11,"into","","",467,[[],["u"]]],[11,"try_into","","",467,[[],["result"]]],[11,"borrow","","",467,[[["self"]],["t"]]],[11,"borrow_mut","","",467,[[["self"]],["t"]]],[11,"type_id","","",467,[[["self"]],["typeid"]]],[11,"from","","",468,[[["t"]],["t"]]],[11,"try_from","","",468,[[["u"]],["result"]]],[11,"into","","",468,[[],["u"]]],[11,"try_into","","",468,[[],["result"]]],[11,"borrow","","",468,[[["self"]],["t"]]],[11,"borrow_mut","","",468,[[["self"]],["t"]]],[11,"type_id","","",468,[[["self"]],["typeid"]]],[11,"from","","",469,[[["t"]],["t"]]],[11,"try_from","","",469,[[["u"]],["result"]]],[11,"into","","",469,[[],["u"]]],[11,"try_into","","",469,[[],["result"]]],[11,"borrow","","",469,[[["self"]],["t"]]],[11,"borrow_mut","","",469,[[["self"]],["t"]]],[11,"type_id","","",469,[[["self"]],["typeid"]]],[11,"from","","",470,[[["t"]],["t"]]],[11,"try_from","","",470,[[["u"]],["result"]]],[11,"into","","",470,[[],["u"]]],[11,"try_into","","",470,[[],["result"]]],[11,"borrow","","",470,[[["self"]],["t"]]],[11,"borrow_mut","","",470,[[["self"]],["t"]]],[11,"type_id","","",470,[[["self"]],["typeid"]]],[11,"from","","",471,[[["t"]],["t"]]],[11,"try_from","","",471,[[["u"]],["result"]]],[11,"into","","",471,[[],["u"]]],[11,"try_into","","",471,[[],["result"]]],[11,"borrow","","",471,[[["self"]],["t"]]],[11,"borrow_mut","","",471,[[["self"]],["t"]]],[11,"type_id","","",471,[[["self"]],["typeid"]]],[11,"from","","",472,[[["t"]],["t"]]],[11,"try_from","","",472,[[["u"]],["result"]]],[11,"into","","",472,[[],["u"]]],[11,"try_into","","",472,[[],["result"]]],[11,"borrow","","",472,[[["self"]],["t"]]],[11,"borrow_mut","","",472,[[["self"]],["t"]]],[11,"type_id","","",472,[[["self"]],["typeid"]]],[11,"from","","",473,[[["t"]],["t"]]],[11,"try_from","","",473,[[["u"]],["result"]]],[11,"into","","",473,[[],["u"]]],[11,"try_into","","",473,[[],["result"]]],[11,"borrow","","",473,[[["self"]],["t"]]],[11,"borrow_mut","","",473,[[["self"]],["t"]]],[11,"type_id","","",473,[[["self"]],["typeid"]]],[11,"from","","",474,[[["t"]],["t"]]],[11,"try_from","","",474,[[["u"]],["result"]]],[11,"into","","",474,[[],["u"]]],[11,"try_into","","",474,[[],["result"]]],[11,"borrow","","",474,[[["self"]],["t"]]],[11,"borrow_mut","","",474,[[["self"]],["t"]]],[11,"type_id","","",474,[[["self"]],["typeid"]]],[11,"from","","",475,[[["t"]],["t"]]],[11,"try_from","","",475,[[["u"]],["result"]]],[11,"into","","",475,[[],["u"]]],[11,"try_into","","",475,[[],["result"]]],[11,"borrow","","",475,[[["self"]],["t"]]],[11,"borrow_mut","","",475,[[["self"]],["t"]]],[11,"type_id","","",475,[[["self"]],["typeid"]]],[11,"from","","",476,[[["t"]],["t"]]],[11,"try_from","","",476,[[["u"]],["result"]]],[11,"into","","",476,[[],["u"]]],[11,"try_into","","",476,[[],["result"]]],[11,"borrow","","",476,[[["self"]],["t"]]],[11,"borrow_mut","","",476,[[["self"]],["t"]]],[11,"type_id","","",476,[[["self"]],["typeid"]]],[11,"from","","",477,[[["t"]],["t"]]],[11,"try_from","","",477,[[["u"]],["result"]]],[11,"into","","",477,[[],["u"]]],[11,"try_into","","",477,[[],["result"]]],[11,"borrow","","",477,[[["self"]],["t"]]],[11,"borrow_mut","","",477,[[["self"]],["t"]]],[11,"type_id","","",477,[[["self"]],["typeid"]]],[11,"from","","",478,[[["t"]],["t"]]],[11,"try_from","","",478,[[["u"]],["result"]]],[11,"into","","",478,[[],["u"]]],[11,"try_into","","",478,[[],["result"]]],[11,"borrow","","",478,[[["self"]],["t"]]],[11,"borrow_mut","","",478,[[["self"]],["t"]]],[11,"type_id","","",478,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_plic::ie0::ie00","",481,[[["t"]],["t"]]],[11,"try_from","","",481,[[["u"]],["result"]]],[11,"into","","",481,[[],["u"]]],[11,"try_into","","",481,[[],["result"]]],[11,"borrow","","",481,[[["self"]],["t"]]],[11,"borrow_mut","","",481,[[["self"]],["t"]]],[11,"type_id","","",481,[[["self"]],["typeid"]]],[11,"from","","",482,[[["t"]],["t"]]],[11,"try_from","","",482,[[["u"]],["result"]]],[11,"into","","",482,[[],["u"]]],[11,"try_into","","",482,[[],["result"]]],[11,"borrow","","",482,[[["self"]],["t"]]],[11,"borrow_mut","","",482,[[["self"]],["t"]]],[11,"type_id","","",482,[[["self"]],["typeid"]]],[11,"from","","",483,[[["t"]],["t"]]],[11,"try_from","","",483,[[["u"]],["result"]]],[11,"into","","",483,[[],["u"]]],[11,"try_into","","",483,[[],["result"]]],[11,"borrow","","",483,[[["self"]],["t"]]],[11,"borrow_mut","","",483,[[["self"]],["t"]]],[11,"type_id","","",483,[[["self"]],["typeid"]]],[11,"from","","",484,[[["t"]],["t"]]],[11,"try_from","","",484,[[["u"]],["result"]]],[11,"into","","",484,[[],["u"]]],[11,"try_into","","",484,[[],["result"]]],[11,"borrow","","",484,[[["self"]],["t"]]],[11,"borrow_mut","","",484,[[["self"]],["t"]]],[11,"type_id","","",484,[[["self"]],["typeid"]]],[11,"from","","",485,[[["t"]],["t"]]],[11,"try_from","","",485,[[["u"]],["result"]]],[11,"into","","",485,[[],["u"]]],[11,"try_into","","",485,[[],["result"]]],[11,"borrow","","",485,[[["self"]],["t"]]],[11,"borrow_mut","","",485,[[["self"]],["t"]]],[11,"type_id","","",485,[[["self"]],["typeid"]]],[11,"from","","",486,[[["t"]],["t"]]],[11,"try_from","","",486,[[["u"]],["result"]]],[11,"into","","",486,[[],["u"]]],[11,"try_into","","",486,[[],["result"]]],[11,"borrow","","",486,[[["self"]],["t"]]],[11,"borrow_mut","","",486,[[["self"]],["t"]]],[11,"type_id","","",486,[[["self"]],["typeid"]]],[11,"from","","",487,[[["t"]],["t"]]],[11,"try_from","","",487,[[["u"]],["result"]]],[11,"into","","",487,[[],["u"]]],[11,"try_into","","",487,[[],["result"]]],[11,"borrow","","",487,[[["self"]],["t"]]],[11,"borrow_mut","","",487,[[["self"]],["t"]]],[11,"type_id","","",487,[[["self"]],["typeid"]]],[11,"from","","",488,[[["t"]],["t"]]],[11,"try_from","","",488,[[["u"]],["result"]]],[11,"into","","",488,[[],["u"]]],[11,"try_into","","",488,[[],["result"]]],[11,"borrow","","",488,[[["self"]],["t"]]],[11,"borrow_mut","","",488,[[["self"]],["t"]]],[11,"type_id","","",488,[[["self"]],["typeid"]]],[11,"from","","",489,[[["t"]],["t"]]],[11,"try_from","","",489,[[["u"]],["result"]]],[11,"into","","",489,[[],["u"]]],[11,"try_into","","",489,[[],["result"]]],[11,"borrow","","",489,[[["self"]],["t"]]],[11,"borrow_mut","","",489,[[["self"]],["t"]]],[11,"type_id","","",489,[[["self"]],["typeid"]]],[11,"from","","",490,[[["t"]],["t"]]],[11,"try_from","","",490,[[["u"]],["result"]]],[11,"into","","",490,[[],["u"]]],[11,"try_into","","",490,[[],["result"]]],[11,"borrow","","",490,[[["self"]],["t"]]],[11,"borrow_mut","","",490,[[["self"]],["t"]]],[11,"type_id","","",490,[[["self"]],["typeid"]]],[11,"from","","",491,[[["t"]],["t"]]],[11,"try_from","","",491,[[["u"]],["result"]]],[11,"into","","",491,[[],["u"]]],[11,"try_into","","",491,[[],["result"]]],[11,"borrow","","",491,[[["self"]],["t"]]],[11,"borrow_mut","","",491,[[["self"]],["t"]]],[11,"type_id","","",491,[[["self"]],["typeid"]]],[11,"from","","",492,[[["t"]],["t"]]],[11,"try_from","","",492,[[["u"]],["result"]]],[11,"into","","",492,[[],["u"]]],[11,"try_into","","",492,[[],["result"]]],[11,"borrow","","",492,[[["self"]],["t"]]],[11,"borrow_mut","","",492,[[["self"]],["t"]]],[11,"type_id","","",492,[[["self"]],["typeid"]]],[11,"from","","",493,[[["t"]],["t"]]],[11,"try_from","","",493,[[["u"]],["result"]]],[11,"into","","",493,[[],["u"]]],[11,"try_into","","",493,[[],["result"]]],[11,"borrow","","",493,[[["self"]],["t"]]],[11,"borrow_mut","","",493,[[["self"]],["t"]]],[11,"type_id","","",493,[[["self"]],["typeid"]]],[11,"from","","",494,[[["t"]],["t"]]],[11,"try_from","","",494,[[["u"]],["result"]]],[11,"into","","",494,[[],["u"]]],[11,"try_into","","",494,[[],["result"]]],[11,"borrow","","",494,[[["self"]],["t"]]],[11,"borrow_mut","","",494,[[["self"]],["t"]]],[11,"type_id","","",494,[[["self"]],["typeid"]]],[11,"from","","",495,[[["t"]],["t"]]],[11,"try_from","","",495,[[["u"]],["result"]]],[11,"into","","",495,[[],["u"]]],[11,"try_into","","",495,[[],["result"]]],[11,"borrow","","",495,[[["self"]],["t"]]],[11,"borrow_mut","","",495,[[["self"]],["t"]]],[11,"type_id","","",495,[[["self"]],["typeid"]]],[11,"from","","",496,[[["t"]],["t"]]],[11,"try_from","","",496,[[["u"]],["result"]]],[11,"into","","",496,[[],["u"]]],[11,"try_into","","",496,[[],["result"]]],[11,"borrow","","",496,[[["self"]],["t"]]],[11,"borrow_mut","","",496,[[["self"]],["t"]]],[11,"type_id","","",496,[[["self"]],["typeid"]]],[11,"from","","",497,[[["t"]],["t"]]],[11,"try_from","","",497,[[["u"]],["result"]]],[11,"into","","",497,[[],["u"]]],[11,"try_into","","",497,[[],["result"]]],[11,"borrow","","",497,[[["self"]],["t"]]],[11,"borrow_mut","","",497,[[["self"]],["t"]]],[11,"type_id","","",497,[[["self"]],["typeid"]]],[11,"from","","",498,[[["t"]],["t"]]],[11,"try_from","","",498,[[["u"]],["result"]]],[11,"into","","",498,[[],["u"]]],[11,"try_into","","",498,[[],["result"]]],[11,"borrow","","",498,[[["self"]],["t"]]],[11,"borrow_mut","","",498,[[["self"]],["t"]]],[11,"type_id","","",498,[[["self"]],["typeid"]]],[11,"from","","",499,[[["t"]],["t"]]],[11,"try_from","","",499,[[["u"]],["result"]]],[11,"into","","",499,[[],["u"]]],[11,"try_into","","",499,[[],["result"]]],[11,"borrow","","",499,[[["self"]],["t"]]],[11,"borrow_mut","","",499,[[["self"]],["t"]]],[11,"type_id","","",499,[[["self"]],["typeid"]]],[11,"from","","",500,[[["t"]],["t"]]],[11,"try_from","","",500,[[["u"]],["result"]]],[11,"into","","",500,[[],["u"]]],[11,"try_into","","",500,[[],["result"]]],[11,"borrow","","",500,[[["self"]],["t"]]],[11,"borrow_mut","","",500,[[["self"]],["t"]]],[11,"type_id","","",500,[[["self"]],["typeid"]]],[11,"from","","",501,[[["t"]],["t"]]],[11,"try_from","","",501,[[["u"]],["result"]]],[11,"into","","",501,[[],["u"]]],[11,"try_into","","",501,[[],["result"]]],[11,"borrow","","",501,[[["self"]],["t"]]],[11,"borrow_mut","","",501,[[["self"]],["t"]]],[11,"type_id","","",501,[[["self"]],["typeid"]]],[11,"from","","",502,[[["t"]],["t"]]],[11,"try_from","","",502,[[["u"]],["result"]]],[11,"into","","",502,[[],["u"]]],[11,"try_into","","",502,[[],["result"]]],[11,"borrow","","",502,[[["self"]],["t"]]],[11,"borrow_mut","","",502,[[["self"]],["t"]]],[11,"type_id","","",502,[[["self"]],["typeid"]]],[11,"from","","",503,[[["t"]],["t"]]],[11,"try_from","","",503,[[["u"]],["result"]]],[11,"into","","",503,[[],["u"]]],[11,"try_into","","",503,[[],["result"]]],[11,"borrow","","",503,[[["self"]],["t"]]],[11,"borrow_mut","","",503,[[["self"]],["t"]]],[11,"type_id","","",503,[[["self"]],["typeid"]]],[11,"from","","",504,[[["t"]],["t"]]],[11,"try_from","","",504,[[["u"]],["result"]]],[11,"into","","",504,[[],["u"]]],[11,"try_into","","",504,[[],["result"]]],[11,"borrow","","",504,[[["self"]],["t"]]],[11,"borrow_mut","","",504,[[["self"]],["t"]]],[11,"type_id","","",504,[[["self"]],["typeid"]]],[11,"from","","",505,[[["t"]],["t"]]],[11,"try_from","","",505,[[["u"]],["result"]]],[11,"into","","",505,[[],["u"]]],[11,"try_into","","",505,[[],["result"]]],[11,"borrow","","",505,[[["self"]],["t"]]],[11,"borrow_mut","","",505,[[["self"]],["t"]]],[11,"type_id","","",505,[[["self"]],["typeid"]]],[11,"from","","",506,[[["t"]],["t"]]],[11,"try_from","","",506,[[["u"]],["result"]]],[11,"into","","",506,[[],["u"]]],[11,"try_into","","",506,[[],["result"]]],[11,"borrow","","",506,[[["self"]],["t"]]],[11,"borrow_mut","","",506,[[["self"]],["t"]]],[11,"type_id","","",506,[[["self"]],["typeid"]]],[11,"from","","",507,[[["t"]],["t"]]],[11,"try_from","","",507,[[["u"]],["result"]]],[11,"into","","",507,[[],["u"]]],[11,"try_into","","",507,[[],["result"]]],[11,"borrow","","",507,[[["self"]],["t"]]],[11,"borrow_mut","","",507,[[["self"]],["t"]]],[11,"type_id","","",507,[[["self"]],["typeid"]]],[11,"from","","",508,[[["t"]],["t"]]],[11,"try_from","","",508,[[["u"]],["result"]]],[11,"into","","",508,[[],["u"]]],[11,"try_into","","",508,[[],["result"]]],[11,"borrow","","",508,[[["self"]],["t"]]],[11,"borrow_mut","","",508,[[["self"]],["t"]]],[11,"type_id","","",508,[[["self"]],["typeid"]]],[11,"from","","",509,[[["t"]],["t"]]],[11,"try_from","","",509,[[["u"]],["result"]]],[11,"into","","",509,[[],["u"]]],[11,"try_into","","",509,[[],["result"]]],[11,"borrow","","",509,[[["self"]],["t"]]],[11,"borrow_mut","","",509,[[["self"]],["t"]]],[11,"type_id","","",509,[[["self"]],["typeid"]]],[11,"from","","",510,[[["t"]],["t"]]],[11,"try_from","","",510,[[["u"]],["result"]]],[11,"into","","",510,[[],["u"]]],[11,"try_into","","",510,[[],["result"]]],[11,"borrow","","",510,[[["self"]],["t"]]],[11,"borrow_mut","","",510,[[["self"]],["t"]]],[11,"type_id","","",510,[[["self"]],["typeid"]]],[11,"from","","",511,[[["t"]],["t"]]],[11,"try_from","","",511,[[["u"]],["result"]]],[11,"into","","",511,[[],["u"]]],[11,"try_into","","",511,[[],["result"]]],[11,"borrow","","",511,[[["self"]],["t"]]],[11,"borrow_mut","","",511,[[["self"]],["t"]]],[11,"type_id","","",511,[[["self"]],["typeid"]]],[11,"from","","",512,[[["t"]],["t"]]],[11,"try_from","","",512,[[["u"]],["result"]]],[11,"into","","",512,[[],["u"]]],[11,"try_into","","",512,[[],["result"]]],[11,"borrow","","",512,[[["self"]],["t"]]],[11,"borrow_mut","","",512,[[["self"]],["t"]]],[11,"type_id","","",512,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::rv_plic::ie0::ie01","",515,[[["t"]],["t"]]],[11,"try_from","","",515,[[["u"]],["result"]]],[11,"into","","",515,[[],["u"]]],[11,"try_into","","",515,[[],["result"]]],[11,"borrow","","",515,[[["self"]],["t"]]],[11,"borrow_mut","","",515,[[["self"]],["t"]]],[11,"type_id","","",515,[[["self"]],["typeid"]]],[11,"from","","",516,[[["t"]],["t"]]],[11,"try_from","","",516,[[["u"]],["result"]]],[11,"into","","",516,[[],["u"]]],[11,"try_into","","",516,[[],["result"]]],[11,"borrow","","",516,[[["self"]],["t"]]],[11,"borrow_mut","","",516,[[["self"]],["t"]]],[11,"type_id","","",516,[[["self"]],["typeid"]]],[11,"from","","",517,[[["t"]],["t"]]],[11,"try_from","","",517,[[["u"]],["result"]]],[11,"into","","",517,[[],["u"]]],[11,"try_into","","",517,[[],["result"]]],[11,"borrow","","",517,[[["self"]],["t"]]],[11,"borrow_mut","","",517,[[["self"]],["t"]]],[11,"type_id","","",517,[[["self"]],["typeid"]]],[11,"from","","",518,[[["t"]],["t"]]],[11,"try_from","","",518,[[["u"]],["result"]]],[11,"into","","",518,[[],["u"]]],[11,"try_into","","",518,[[],["result"]]],[11,"borrow","","",518,[[["self"]],["t"]]],[11,"borrow_mut","","",518,[[["self"]],["t"]]],[11,"type_id","","",518,[[["self"]],["typeid"]]],[11,"from","","",519,[[["t"]],["t"]]],[11,"try_from","","",519,[[["u"]],["result"]]],[11,"into","","",519,[[],["u"]]],[11,"try_into","","",519,[[],["result"]]],[11,"borrow","","",519,[[["self"]],["t"]]],[11,"borrow_mut","","",519,[[["self"]],["t"]]],[11,"type_id","","",519,[[["self"]],["typeid"]]],[11,"from","","",520,[[["t"]],["t"]]],[11,"try_from","","",520,[[["u"]],["result"]]],[11,"into","","",520,[[],["u"]]],[11,"try_into","","",520,[[],["result"]]],[11,"borrow","","",520,[[["self"]],["t"]]],[11,"borrow_mut","","",520,[[["self"]],["t"]]],[11,"type_id","","",520,[[["self"]],["typeid"]]],[11,"from","","",521,[[["t"]],["t"]]],[11,"try_from","","",521,[[["u"]],["result"]]],[11,"into","","",521,[[],["u"]]],[11,"try_into","","",521,[[],["result"]]],[11,"borrow","","",521,[[["self"]],["t"]]],[11,"borrow_mut","","",521,[[["self"]],["t"]]],[11,"type_id","","",521,[[["self"]],["typeid"]]],[11,"from","","",522,[[["t"]],["t"]]],[11,"try_from","","",522,[[["u"]],["result"]]],[11,"into","","",522,[[],["u"]]],[11,"try_into","","",522,[[],["result"]]],[11,"borrow","","",522,[[["self"]],["t"]]],[11,"borrow_mut","","",522,[[["self"]],["t"]]],[11,"type_id","","",522,[[["self"]],["typeid"]]],[11,"from","","",523,[[["t"]],["t"]]],[11,"try_from","","",523,[[["u"]],["result"]]],[11,"into","","",523,[[],["u"]]],[11,"try_into","","",523,[[],["result"]]],[11,"borrow","","",523,[[["self"]],["t"]]],[11,"borrow_mut","","",523,[[["self"]],["t"]]],[11,"type_id","","",523,[[["self"]],["typeid"]]],[11,"from","","",524,[[["t"]],["t"]]],[11,"try_from","","",524,[[["u"]],["result"]]],[11,"into","","",524,[[],["u"]]],[11,"try_into","","",524,[[],["result"]]],[11,"borrow","","",524,[[["self"]],["t"]]],[11,"borrow_mut","","",524,[[["self"]],["t"]]],[11,"type_id","","",524,[[["self"]],["typeid"]]],[11,"from","","",525,[[["t"]],["t"]]],[11,"try_from","","",525,[[["u"]],["result"]]],[11,"into","","",525,[[],["u"]]],[11,"try_into","","",525,[[],["result"]]],[11,"borrow","","",525,[[["self"]],["t"]]],[11,"borrow_mut","","",525,[[["self"]],["t"]]],[11,"type_id","","",525,[[["self"]],["typeid"]]],[11,"from","","",526,[[["t"]],["t"]]],[11,"try_from","","",526,[[["u"]],["result"]]],[11,"into","","",526,[[],["u"]]],[11,"try_into","","",526,[[],["result"]]],[11,"borrow","","",526,[[["self"]],["t"]]],[11,"borrow_mut","","",526,[[["self"]],["t"]]],[11,"type_id","","",526,[[["self"]],["typeid"]]],[11,"from","","",527,[[["t"]],["t"]]],[11,"try_from","","",527,[[["u"]],["result"]]],[11,"into","","",527,[[],["u"]]],[11,"try_into","","",527,[[],["result"]]],[11,"borrow","","",527,[[["self"]],["t"]]],[11,"borrow_mut","","",527,[[["self"]],["t"]]],[11,"type_id","","",527,[[["self"]],["typeid"]]],[11,"from","","",528,[[["t"]],["t"]]],[11,"try_from","","",528,[[["u"]],["result"]]],[11,"into","","",528,[[],["u"]]],[11,"try_into","","",528,[[],["result"]]],[11,"borrow","","",528,[[["self"]],["t"]]],[11,"borrow_mut","","",528,[[["self"]],["t"]]],[11,"type_id","","",528,[[["self"]],["typeid"]]],[11,"from","","",529,[[["t"]],["t"]]],[11,"try_from","","",529,[[["u"]],["result"]]],[11,"into","","",529,[[],["u"]]],[11,"try_into","","",529,[[],["result"]]],[11,"borrow","","",529,[[["self"]],["t"]]],[11,"borrow_mut","","",529,[[["self"]],["t"]]],[11,"type_id","","",529,[[["self"]],["typeid"]]],[11,"from","","",530,[[["t"]],["t"]]],[11,"try_from","","",530,[[["u"]],["result"]]],[11,"into","","",530,[[],["u"]]],[11,"try_into","","",530,[[],["result"]]],[11,"borrow","","",530,[[["self"]],["t"]]],[11,"borrow_mut","","",530,[[["self"]],["t"]]],[11,"type_id","","",530,[[["self"]],["typeid"]]],[11,"from","","",531,[[["t"]],["t"]]],[11,"try_from","","",531,[[["u"]],["result"]]],[11,"into","","",531,[[],["u"]]],[11,"try_into","","",531,[[],["result"]]],[11,"borrow","","",531,[[["self"]],["t"]]],[11,"borrow_mut","","",531,[[["self"]],["t"]]],[11,"type_id","","",531,[[["self"]],["typeid"]]],[11,"from","","",532,[[["t"]],["t"]]],[11,"try_from","","",532,[[["u"]],["result"]]],[11,"into","","",532,[[],["u"]]],[11,"try_into","","",532,[[],["result"]]],[11,"borrow","","",532,[[["self"]],["t"]]],[11,"borrow_mut","","",532,[[["self"]],["t"]]],[11,"type_id","","",532,[[["self"]],["typeid"]]],[11,"from","","",533,[[["t"]],["t"]]],[11,"try_from","","",533,[[["u"]],["result"]]],[11,"into","","",533,[[],["u"]]],[11,"try_into","","",533,[[],["result"]]],[11,"borrow","","",533,[[["self"]],["t"]]],[11,"borrow_mut","","",533,[[["self"]],["t"]]],[11,"type_id","","",533,[[["self"]],["typeid"]]],[11,"from","","",534,[[["t"]],["t"]]],[11,"try_from","","",534,[[["u"]],["result"]]],[11,"into","","",534,[[],["u"]]],[11,"try_into","","",534,[[],["result"]]],[11,"borrow","","",534,[[["self"]],["t"]]],[11,"borrow_mut","","",534,[[["self"]],["t"]]],[11,"type_id","","",534,[[["self"]],["typeid"]]],[11,"from","","",535,[[["t"]],["t"]]],[11,"try_from","","",535,[[["u"]],["result"]]],[11,"into","","",535,[[],["u"]]],[11,"try_into","","",535,[[],["result"]]],[11,"borrow","","",535,[[["self"]],["t"]]],[11,"borrow_mut","","",535,[[["self"]],["t"]]],[11,"type_id","","",535,[[["self"]],["typeid"]]],[11,"from","","",536,[[["t"]],["t"]]],[11,"try_from","","",536,[[["u"]],["result"]]],[11,"into","","",536,[[],["u"]]],[11,"try_into","","",536,[[],["result"]]],[11,"borrow","","",536,[[["self"]],["t"]]],[11,"borrow_mut","","",536,[[["self"]],["t"]]],[11,"type_id","","",536,[[["self"]],["typeid"]]],[11,"from","","",537,[[["t"]],["t"]]],[11,"try_from","","",537,[[["u"]],["result"]]],[11,"into","","",537,[[],["u"]]],[11,"try_into","","",537,[[],["result"]]],[11,"borrow","","",537,[[["self"]],["t"]]],[11,"borrow_mut","","",537,[[["self"]],["t"]]],[11,"type_id","","",537,[[["self"]],["typeid"]]],[11,"from","","",538,[[["t"]],["t"]]],[11,"try_from","","",538,[[["u"]],["result"]]],[11,"into","","",538,[[],["u"]]],[11,"try_into","","",538,[[],["result"]]],[11,"borrow","","",538,[[["self"]],["t"]]],[11,"borrow_mut","","",538,[[["self"]],["t"]]],[11,"type_id","","",538,[[["self"]],["typeid"]]],[11,"from","","",539,[[["t"]],["t"]]],[11,"try_from","","",539,[[["u"]],["result"]]],[11,"into","","",539,[[],["u"]]],[11,"try_into","","",539,[[],["result"]]],[11,"borrow","","",539,[[["self"]],["t"]]],[11,"borrow_mut","","",539,[[["self"]],["t"]]],[11,"type_id","","",539,[[["self"]],["typeid"]]],[11,"from","","",540,[[["t"]],["t"]]],[11,"try_from","","",540,[[["u"]],["result"]]],[11,"into","","",540,[[],["u"]]],[11,"try_into","","",540,[[],["result"]]],[11,"borrow","","",540,[[["self"]],["t"]]],[11,"borrow_mut","","",540,[[["self"]],["t"]]],[11,"type_id","","",540,[[["self"]],["typeid"]]],[11,"from","","",541,[[["t"]],["t"]]],[11,"try_from","","",541,[[["u"]],["result"]]],[11,"into","","",541,[[],["u"]]],[11,"try_into","","",541,[[],["result"]]],[11,"borrow","","",541,[[["self"]],["t"]]],[11,"borrow_mut","","",541,[[["self"]],["t"]]],[11,"type_id","","",541,[[["self"]],["typeid"]]],[11,"from","","",542,[[["t"]],["t"]]],[11,"try_from","","",542,[[["u"]],["result"]]],[11,"into","","",542,[[],["u"]]],[11,"try_into","","",542,[[],["result"]]],[11,"borrow","","",542,[[["self"]],["t"]]],[11,"borrow_mut","","",542,[[["self"]],["t"]]],[11,"type_id","","",542,[[["self"]],["typeid"]]],[11,"from","","",543,[[["t"]],["t"]]],[11,"try_from","","",543,[[["u"]],["result"]]],[11,"into","","",543,[[],["u"]]],[11,"try_into","","",543,[[],["result"]]],[11,"borrow","","",543,[[["self"]],["t"]]],[11,"borrow_mut","","",543,[[["self"]],["t"]]],[11,"type_id","","",543,[[["self"]],["typeid"]]],[11,"from","","",544,[[["t"]],["t"]]],[11,"try_from","","",544,[[["u"]],["result"]]],[11,"into","","",544,[[],["u"]]],[11,"try_into","","",544,[[],["result"]]],[11,"borrow","","",544,[[["self"]],["t"]]],[11,"borrow_mut","","",544,[[["self"]],["t"]]],[11,"type_id","","",544,[[["self"]],["typeid"]]],[11,"from","","",545,[[["t"]],["t"]]],[11,"try_from","","",545,[[["u"]],["result"]]],[11,"into","","",545,[[],["u"]]],[11,"try_into","","",545,[[],["result"]]],[11,"borrow","","",545,[[["self"]],["t"]]],[11,"borrow_mut","","",545,[[["self"]],["t"]]],[11,"type_id","","",545,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux","",548,[[["t"]],["t"]]],[11,"try_from","","",548,[[["u"]],["result"]]],[11,"into","","",548,[[],["u"]]],[11,"try_into","","",548,[[],["result"]]],[11,"borrow","","",548,[[["self"]],["t"]]],[11,"borrow_mut","","",548,[[["self"]],["t"]]],[11,"type_id","","",548,[[["self"]],["typeid"]]],[11,"from","","",549,[[["t"]],["t"]]],[11,"try_from","","",549,[[["u"]],["result"]]],[11,"into","","",549,[[],["u"]]],[11,"try_into","","",549,[[],["result"]]],[11,"borrow","","",549,[[["self"]],["t"]]],[11,"borrow_mut","","",549,[[["self"]],["t"]]],[11,"type_id","","",549,[[["self"]],["typeid"]]],[11,"from","","",550,[[["t"]],["t"]]],[11,"try_from","","",550,[[["u"]],["result"]]],[11,"into","","",550,[[],["u"]]],[11,"try_into","","",550,[[],["result"]]],[11,"borrow","","",550,[[["self"]],["t"]]],[11,"borrow_mut","","",550,[[["self"]],["t"]]],[11,"type_id","","",550,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel0","",551,[[["t"]],["t"]]],[11,"try_from","","",551,[[["u"]],["result"]]],[11,"into","","",551,[[],["u"]]],[11,"try_into","","",551,[[],["result"]]],[11,"borrow","","",551,[[["self"]],["t"]]],[11,"borrow_mut","","",551,[[["self"]],["t"]]],[11,"type_id","","",551,[[["self"]],["typeid"]]],[11,"from","","",552,[[["t"]],["t"]]],[11,"try_from","","",552,[[["u"]],["result"]]],[11,"into","","",552,[[],["u"]]],[11,"try_into","","",552,[[],["result"]]],[11,"borrow","","",552,[[["self"]],["t"]]],[11,"borrow_mut","","",552,[[["self"]],["t"]]],[11,"type_id","","",552,[[["self"]],["typeid"]]],[11,"from","","",553,[[["t"]],["t"]]],[11,"try_from","","",553,[[["u"]],["result"]]],[11,"into","","",553,[[],["u"]]],[11,"try_into","","",553,[[],["result"]]],[11,"borrow","","",553,[[["self"]],["t"]]],[11,"borrow_mut","","",553,[[["self"]],["t"]]],[11,"type_id","","",553,[[["self"]],["typeid"]]],[11,"from","","",554,[[["t"]],["t"]]],[11,"try_from","","",554,[[["u"]],["result"]]],[11,"into","","",554,[[],["u"]]],[11,"try_into","","",554,[[],["result"]]],[11,"borrow","","",554,[[["self"]],["t"]]],[11,"borrow_mut","","",554,[[["self"]],["t"]]],[11,"type_id","","",554,[[["self"]],["typeid"]]],[11,"from","","",555,[[["t"]],["t"]]],[11,"try_from","","",555,[[["u"]],["result"]]],[11,"into","","",555,[[],["u"]]],[11,"try_into","","",555,[[],["result"]]],[11,"borrow","","",555,[[["self"]],["t"]]],[11,"borrow_mut","","",555,[[["self"]],["t"]]],[11,"type_id","","",555,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel1","",558,[[["t"]],["t"]]],[11,"try_from","","",558,[[["u"]],["result"]]],[11,"into","","",558,[[],["u"]]],[11,"try_into","","",558,[[],["result"]]],[11,"borrow","","",558,[[["self"]],["t"]]],[11,"borrow_mut","","",558,[[["self"]],["t"]]],[11,"type_id","","",558,[[["self"]],["typeid"]]],[11,"from","","",559,[[["t"]],["t"]]],[11,"try_from","","",559,[[["u"]],["result"]]],[11,"into","","",559,[[],["u"]]],[11,"try_into","","",559,[[],["result"]]],[11,"borrow","","",559,[[["self"]],["t"]]],[11,"borrow_mut","","",559,[[["self"]],["t"]]],[11,"type_id","","",559,[[["self"]],["typeid"]]],[11,"from","","",560,[[["t"]],["t"]]],[11,"try_from","","",560,[[["u"]],["result"]]],[11,"into","","",560,[[],["u"]]],[11,"try_into","","",560,[[],["result"]]],[11,"borrow","","",560,[[["self"]],["t"]]],[11,"borrow_mut","","",560,[[["self"]],["t"]]],[11,"type_id","","",560,[[["self"]],["typeid"]]],[11,"from","","",561,[[["t"]],["t"]]],[11,"try_from","","",561,[[["u"]],["result"]]],[11,"into","","",561,[[],["u"]]],[11,"try_into","","",561,[[],["result"]]],[11,"borrow","","",561,[[["self"]],["t"]]],[11,"borrow_mut","","",561,[[["self"]],["t"]]],[11,"type_id","","",561,[[["self"]],["typeid"]]],[11,"from","","",562,[[["t"]],["t"]]],[11,"try_from","","",562,[[["u"]],["result"]]],[11,"into","","",562,[[],["u"]]],[11,"try_into","","",562,[[],["result"]]],[11,"borrow","","",562,[[["self"]],["t"]]],[11,"borrow_mut","","",562,[[["self"]],["t"]]],[11,"type_id","","",562,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel2","",565,[[["t"]],["t"]]],[11,"try_from","","",565,[[["u"]],["result"]]],[11,"into","","",565,[[],["u"]]],[11,"try_into","","",565,[[],["result"]]],[11,"borrow","","",565,[[["self"]],["t"]]],[11,"borrow_mut","","",565,[[["self"]],["t"]]],[11,"type_id","","",565,[[["self"]],["typeid"]]],[11,"from","","",566,[[["t"]],["t"]]],[11,"try_from","","",566,[[["u"]],["result"]]],[11,"into","","",566,[[],["u"]]],[11,"try_into","","",566,[[],["result"]]],[11,"borrow","","",566,[[["self"]],["t"]]],[11,"borrow_mut","","",566,[[["self"]],["t"]]],[11,"type_id","","",566,[[["self"]],["typeid"]]],[11,"from","","",567,[[["t"]],["t"]]],[11,"try_from","","",567,[[["u"]],["result"]]],[11,"into","","",567,[[],["u"]]],[11,"try_into","","",567,[[],["result"]]],[11,"borrow","","",567,[[["self"]],["t"]]],[11,"borrow_mut","","",567,[[["self"]],["t"]]],[11,"type_id","","",567,[[["self"]],["typeid"]]],[11,"from","","",568,[[["t"]],["t"]]],[11,"try_from","","",568,[[["u"]],["result"]]],[11,"into","","",568,[[],["u"]]],[11,"try_into","","",568,[[],["result"]]],[11,"borrow","","",568,[[["self"]],["t"]]],[11,"borrow_mut","","",568,[[["self"]],["t"]]],[11,"type_id","","",568,[[["self"]],["typeid"]]],[11,"from","","",569,[[["t"]],["t"]]],[11,"try_from","","",569,[[["u"]],["result"]]],[11,"into","","",569,[[],["u"]]],[11,"try_into","","",569,[[],["result"]]],[11,"borrow","","",569,[[["self"]],["t"]]],[11,"borrow_mut","","",569,[[["self"]],["t"]]],[11,"type_id","","",569,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel3","",572,[[["t"]],["t"]]],[11,"try_from","","",572,[[["u"]],["result"]]],[11,"into","","",572,[[],["u"]]],[11,"try_into","","",572,[[],["result"]]],[11,"borrow","","",572,[[["self"]],["t"]]],[11,"borrow_mut","","",572,[[["self"]],["t"]]],[11,"type_id","","",572,[[["self"]],["typeid"]]],[11,"from","","",573,[[["t"]],["t"]]],[11,"try_from","","",573,[[["u"]],["result"]]],[11,"into","","",573,[[],["u"]]],[11,"try_into","","",573,[[],["result"]]],[11,"borrow","","",573,[[["self"]],["t"]]],[11,"borrow_mut","","",573,[[["self"]],["t"]]],[11,"type_id","","",573,[[["self"]],["typeid"]]],[11,"from","","",574,[[["t"]],["t"]]],[11,"try_from","","",574,[[["u"]],["result"]]],[11,"into","","",574,[[],["u"]]],[11,"try_into","","",574,[[],["result"]]],[11,"borrow","","",574,[[["self"]],["t"]]],[11,"borrow_mut","","",574,[[["self"]],["t"]]],[11,"type_id","","",574,[[["self"]],["typeid"]]],[11,"from","","",575,[[["t"]],["t"]]],[11,"try_from","","",575,[[["u"]],["result"]]],[11,"into","","",575,[[],["u"]]],[11,"try_into","","",575,[[],["result"]]],[11,"borrow","","",575,[[["self"]],["t"]]],[11,"borrow_mut","","",575,[[["self"]],["t"]]],[11,"type_id","","",575,[[["self"]],["typeid"]]],[11,"from","","",576,[[["t"]],["t"]]],[11,"try_from","","",576,[[["u"]],["result"]]],[11,"into","","",576,[[],["u"]]],[11,"try_into","","",576,[[],["result"]]],[11,"borrow","","",576,[[["self"]],["t"]]],[11,"borrow_mut","","",576,[[["self"]],["t"]]],[11,"type_id","","",576,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel4","",579,[[["t"]],["t"]]],[11,"try_from","","",579,[[["u"]],["result"]]],[11,"into","","",579,[[],["u"]]],[11,"try_into","","",579,[[],["result"]]],[11,"borrow","","",579,[[["self"]],["t"]]],[11,"borrow_mut","","",579,[[["self"]],["t"]]],[11,"type_id","","",579,[[["self"]],["typeid"]]],[11,"from","","",580,[[["t"]],["t"]]],[11,"try_from","","",580,[[["u"]],["result"]]],[11,"into","","",580,[[],["u"]]],[11,"try_into","","",580,[[],["result"]]],[11,"borrow","","",580,[[["self"]],["t"]]],[11,"borrow_mut","","",580,[[["self"]],["t"]]],[11,"type_id","","",580,[[["self"]],["typeid"]]],[11,"from","","",581,[[["t"]],["t"]]],[11,"try_from","","",581,[[["u"]],["result"]]],[11,"into","","",581,[[],["u"]]],[11,"try_into","","",581,[[],["result"]]],[11,"borrow","","",581,[[["self"]],["t"]]],[11,"borrow_mut","","",581,[[["self"]],["t"]]],[11,"type_id","","",581,[[["self"]],["typeid"]]],[11,"from","","",582,[[["t"]],["t"]]],[11,"try_from","","",582,[[["u"]],["result"]]],[11,"into","","",582,[[],["u"]]],[11,"try_into","","",582,[[],["result"]]],[11,"borrow","","",582,[[["self"]],["t"]]],[11,"borrow_mut","","",582,[[["self"]],["t"]]],[11,"type_id","","",582,[[["self"]],["typeid"]]],[11,"from","","",583,[[["t"]],["t"]]],[11,"try_from","","",583,[[["u"]],["result"]]],[11,"into","","",583,[[],["u"]]],[11,"try_into","","",583,[[],["result"]]],[11,"borrow","","",583,[[["self"]],["t"]]],[11,"borrow_mut","","",583,[[["self"]],["t"]]],[11,"type_id","","",583,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel5","",586,[[["t"]],["t"]]],[11,"try_from","","",586,[[["u"]],["result"]]],[11,"into","","",586,[[],["u"]]],[11,"try_into","","",586,[[],["result"]]],[11,"borrow","","",586,[[["self"]],["t"]]],[11,"borrow_mut","","",586,[[["self"]],["t"]]],[11,"type_id","","",586,[[["self"]],["typeid"]]],[11,"from","","",587,[[["t"]],["t"]]],[11,"try_from","","",587,[[["u"]],["result"]]],[11,"into","","",587,[[],["u"]]],[11,"try_into","","",587,[[],["result"]]],[11,"borrow","","",587,[[["self"]],["t"]]],[11,"borrow_mut","","",587,[[["self"]],["t"]]],[11,"type_id","","",587,[[["self"]],["typeid"]]],[11,"from","","",588,[[["t"]],["t"]]],[11,"try_from","","",588,[[["u"]],["result"]]],[11,"into","","",588,[[],["u"]]],[11,"try_into","","",588,[[],["result"]]],[11,"borrow","","",588,[[["self"]],["t"]]],[11,"borrow_mut","","",588,[[["self"]],["t"]]],[11,"type_id","","",588,[[["self"]],["typeid"]]],[11,"from","","",589,[[["t"]],["t"]]],[11,"try_from","","",589,[[["u"]],["result"]]],[11,"into","","",589,[[],["u"]]],[11,"try_into","","",589,[[],["result"]]],[11,"borrow","","",589,[[["self"]],["t"]]],[11,"borrow_mut","","",589,[[["self"]],["t"]]],[11,"type_id","","",589,[[["self"]],["typeid"]]],[11,"from","","",590,[[["t"]],["t"]]],[11,"try_from","","",590,[[["u"]],["result"]]],[11,"into","","",590,[[],["u"]]],[11,"try_into","","",590,[[],["result"]]],[11,"borrow","","",590,[[["self"]],["t"]]],[11,"borrow_mut","","",590,[[["self"]],["t"]]],[11,"type_id","","",590,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::periph_insel::periph_insel6","",593,[[["t"]],["t"]]],[11,"try_from","","",593,[[["u"]],["result"]]],[11,"into","","",593,[[],["u"]]],[11,"try_into","","",593,[[],["result"]]],[11,"borrow","","",593,[[["self"]],["t"]]],[11,"borrow_mut","","",593,[[["self"]],["t"]]],[11,"type_id","","",593,[[["self"]],["typeid"]]],[11,"from","","",594,[[["t"]],["t"]]],[11,"try_from","","",594,[[["u"]],["result"]]],[11,"into","","",594,[[],["u"]]],[11,"try_into","","",594,[[],["result"]]],[11,"borrow","","",594,[[["self"]],["t"]]],[11,"borrow_mut","","",594,[[["self"]],["t"]]],[11,"type_id","","",594,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel0","",597,[[["t"]],["t"]]],[11,"try_from","","",597,[[["u"]],["result"]]],[11,"into","","",597,[[],["u"]]],[11,"try_into","","",597,[[],["result"]]],[11,"borrow","","",597,[[["self"]],["t"]]],[11,"borrow_mut","","",597,[[["self"]],["t"]]],[11,"type_id","","",597,[[["self"]],["typeid"]]],[11,"from","","",598,[[["t"]],["t"]]],[11,"try_from","","",598,[[["u"]],["result"]]],[11,"into","","",598,[[],["u"]]],[11,"try_into","","",598,[[],["result"]]],[11,"borrow","","",598,[[["self"]],["t"]]],[11,"borrow_mut","","",598,[[["self"]],["t"]]],[11,"type_id","","",598,[[["self"]],["typeid"]]],[11,"from","","",599,[[["t"]],["t"]]],[11,"try_from","","",599,[[["u"]],["result"]]],[11,"into","","",599,[[],["u"]]],[11,"try_into","","",599,[[],["result"]]],[11,"borrow","","",599,[[["self"]],["t"]]],[11,"borrow_mut","","",599,[[["self"]],["t"]]],[11,"type_id","","",599,[[["self"]],["typeid"]]],[11,"from","","",600,[[["t"]],["t"]]],[11,"try_from","","",600,[[["u"]],["result"]]],[11,"into","","",600,[[],["u"]]],[11,"try_into","","",600,[[],["result"]]],[11,"borrow","","",600,[[["self"]],["t"]]],[11,"borrow_mut","","",600,[[["self"]],["t"]]],[11,"type_id","","",600,[[["self"]],["typeid"]]],[11,"from","","",601,[[["t"]],["t"]]],[11,"try_from","","",601,[[["u"]],["result"]]],[11,"into","","",601,[[],["u"]]],[11,"try_into","","",601,[[],["result"]]],[11,"borrow","","",601,[[["self"]],["t"]]],[11,"borrow_mut","","",601,[[["self"]],["t"]]],[11,"type_id","","",601,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel1","",604,[[["t"]],["t"]]],[11,"try_from","","",604,[[["u"]],["result"]]],[11,"into","","",604,[[],["u"]]],[11,"try_into","","",604,[[],["result"]]],[11,"borrow","","",604,[[["self"]],["t"]]],[11,"borrow_mut","","",604,[[["self"]],["t"]]],[11,"type_id","","",604,[[["self"]],["typeid"]]],[11,"from","","",605,[[["t"]],["t"]]],[11,"try_from","","",605,[[["u"]],["result"]]],[11,"into","","",605,[[],["u"]]],[11,"try_into","","",605,[[],["result"]]],[11,"borrow","","",605,[[["self"]],["t"]]],[11,"borrow_mut","","",605,[[["self"]],["t"]]],[11,"type_id","","",605,[[["self"]],["typeid"]]],[11,"from","","",606,[[["t"]],["t"]]],[11,"try_from","","",606,[[["u"]],["result"]]],[11,"into","","",606,[[],["u"]]],[11,"try_into","","",606,[[],["result"]]],[11,"borrow","","",606,[[["self"]],["t"]]],[11,"borrow_mut","","",606,[[["self"]],["t"]]],[11,"type_id","","",606,[[["self"]],["typeid"]]],[11,"from","","",607,[[["t"]],["t"]]],[11,"try_from","","",607,[[["u"]],["result"]]],[11,"into","","",607,[[],["u"]]],[11,"try_into","","",607,[[],["result"]]],[11,"borrow","","",607,[[["self"]],["t"]]],[11,"borrow_mut","","",607,[[["self"]],["t"]]],[11,"type_id","","",607,[[["self"]],["typeid"]]],[11,"from","","",608,[[["t"]],["t"]]],[11,"try_from","","",608,[[["u"]],["result"]]],[11,"into","","",608,[[],["u"]]],[11,"try_into","","",608,[[],["result"]]],[11,"borrow","","",608,[[["self"]],["t"]]],[11,"borrow_mut","","",608,[[["self"]],["t"]]],[11,"type_id","","",608,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel2","",611,[[["t"]],["t"]]],[11,"try_from","","",611,[[["u"]],["result"]]],[11,"into","","",611,[[],["u"]]],[11,"try_into","","",611,[[],["result"]]],[11,"borrow","","",611,[[["self"]],["t"]]],[11,"borrow_mut","","",611,[[["self"]],["t"]]],[11,"type_id","","",611,[[["self"]],["typeid"]]],[11,"from","","",612,[[["t"]],["t"]]],[11,"try_from","","",612,[[["u"]],["result"]]],[11,"into","","",612,[[],["u"]]],[11,"try_into","","",612,[[],["result"]]],[11,"borrow","","",612,[[["self"]],["t"]]],[11,"borrow_mut","","",612,[[["self"]],["t"]]],[11,"type_id","","",612,[[["self"]],["typeid"]]],[11,"from","","",613,[[["t"]],["t"]]],[11,"try_from","","",613,[[["u"]],["result"]]],[11,"into","","",613,[[],["u"]]],[11,"try_into","","",613,[[],["result"]]],[11,"borrow","","",613,[[["self"]],["t"]]],[11,"borrow_mut","","",613,[[["self"]],["t"]]],[11,"type_id","","",613,[[["self"]],["typeid"]]],[11,"from","","",614,[[["t"]],["t"]]],[11,"try_from","","",614,[[["u"]],["result"]]],[11,"into","","",614,[[],["u"]]],[11,"try_into","","",614,[[],["result"]]],[11,"borrow","","",614,[[["self"]],["t"]]],[11,"borrow_mut","","",614,[[["self"]],["t"]]],[11,"type_id","","",614,[[["self"]],["typeid"]]],[11,"from","","",615,[[["t"]],["t"]]],[11,"try_from","","",615,[[["u"]],["result"]]],[11,"into","","",615,[[],["u"]]],[11,"try_into","","",615,[[],["result"]]],[11,"borrow","","",615,[[["self"]],["t"]]],[11,"borrow_mut","","",615,[[["self"]],["t"]]],[11,"type_id","","",615,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel3","",618,[[["t"]],["t"]]],[11,"try_from","","",618,[[["u"]],["result"]]],[11,"into","","",618,[[],["u"]]],[11,"try_into","","",618,[[],["result"]]],[11,"borrow","","",618,[[["self"]],["t"]]],[11,"borrow_mut","","",618,[[["self"]],["t"]]],[11,"type_id","","",618,[[["self"]],["typeid"]]],[11,"from","","",619,[[["t"]],["t"]]],[11,"try_from","","",619,[[["u"]],["result"]]],[11,"into","","",619,[[],["u"]]],[11,"try_into","","",619,[[],["result"]]],[11,"borrow","","",619,[[["self"]],["t"]]],[11,"borrow_mut","","",619,[[["self"]],["t"]]],[11,"type_id","","",619,[[["self"]],["typeid"]]],[11,"from","","",620,[[["t"]],["t"]]],[11,"try_from","","",620,[[["u"]],["result"]]],[11,"into","","",620,[[],["u"]]],[11,"try_into","","",620,[[],["result"]]],[11,"borrow","","",620,[[["self"]],["t"]]],[11,"borrow_mut","","",620,[[["self"]],["t"]]],[11,"type_id","","",620,[[["self"]],["typeid"]]],[11,"from","","",621,[[["t"]],["t"]]],[11,"try_from","","",621,[[["u"]],["result"]]],[11,"into","","",621,[[],["u"]]],[11,"try_into","","",621,[[],["result"]]],[11,"borrow","","",621,[[["self"]],["t"]]],[11,"borrow_mut","","",621,[[["self"]],["t"]]],[11,"type_id","","",621,[[["self"]],["typeid"]]],[11,"from","","",622,[[["t"]],["t"]]],[11,"try_from","","",622,[[["u"]],["result"]]],[11,"into","","",622,[[],["u"]]],[11,"try_into","","",622,[[],["result"]]],[11,"borrow","","",622,[[["self"]],["t"]]],[11,"borrow_mut","","",622,[[["self"]],["t"]]],[11,"type_id","","",622,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel4","",625,[[["t"]],["t"]]],[11,"try_from","","",625,[[["u"]],["result"]]],[11,"into","","",625,[[],["u"]]],[11,"try_into","","",625,[[],["result"]]],[11,"borrow","","",625,[[["self"]],["t"]]],[11,"borrow_mut","","",625,[[["self"]],["t"]]],[11,"type_id","","",625,[[["self"]],["typeid"]]],[11,"from","","",626,[[["t"]],["t"]]],[11,"try_from","","",626,[[["u"]],["result"]]],[11,"into","","",626,[[],["u"]]],[11,"try_into","","",626,[[],["result"]]],[11,"borrow","","",626,[[["self"]],["t"]]],[11,"borrow_mut","","",626,[[["self"]],["t"]]],[11,"type_id","","",626,[[["self"]],["typeid"]]],[11,"from","","",627,[[["t"]],["t"]]],[11,"try_from","","",627,[[["u"]],["result"]]],[11,"into","","",627,[[],["u"]]],[11,"try_into","","",627,[[],["result"]]],[11,"borrow","","",627,[[["self"]],["t"]]],[11,"borrow_mut","","",627,[[["self"]],["t"]]],[11,"type_id","","",627,[[["self"]],["typeid"]]],[11,"from","","",628,[[["t"]],["t"]]],[11,"try_from","","",628,[[["u"]],["result"]]],[11,"into","","",628,[[],["u"]]],[11,"try_into","","",628,[[],["result"]]],[11,"borrow","","",628,[[["self"]],["t"]]],[11,"borrow_mut","","",628,[[["self"]],["t"]]],[11,"type_id","","",628,[[["self"]],["typeid"]]],[11,"from","","",629,[[["t"]],["t"]]],[11,"try_from","","",629,[[["u"]],["result"]]],[11,"into","","",629,[[],["u"]]],[11,"try_into","","",629,[[],["result"]]],[11,"borrow","","",629,[[["self"]],["t"]]],[11,"borrow_mut","","",629,[[["self"]],["t"]]],[11,"type_id","","",629,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel5","",632,[[["t"]],["t"]]],[11,"try_from","","",632,[[["u"]],["result"]]],[11,"into","","",632,[[],["u"]]],[11,"try_into","","",632,[[],["result"]]],[11,"borrow","","",632,[[["self"]],["t"]]],[11,"borrow_mut","","",632,[[["self"]],["t"]]],[11,"type_id","","",632,[[["self"]],["typeid"]]],[11,"from","","",633,[[["t"]],["t"]]],[11,"try_from","","",633,[[["u"]],["result"]]],[11,"into","","",633,[[],["u"]]],[11,"try_into","","",633,[[],["result"]]],[11,"borrow","","",633,[[["self"]],["t"]]],[11,"borrow_mut","","",633,[[["self"]],["t"]]],[11,"type_id","","",633,[[["self"]],["typeid"]]],[11,"from","","",634,[[["t"]],["t"]]],[11,"try_from","","",634,[[["u"]],["result"]]],[11,"into","","",634,[[],["u"]]],[11,"try_into","","",634,[[],["result"]]],[11,"borrow","","",634,[[["self"]],["t"]]],[11,"borrow_mut","","",634,[[["self"]],["t"]]],[11,"type_id","","",634,[[["self"]],["typeid"]]],[11,"from","","",635,[[["t"]],["t"]]],[11,"try_from","","",635,[[["u"]],["result"]]],[11,"into","","",635,[[],["u"]]],[11,"try_into","","",635,[[],["result"]]],[11,"borrow","","",635,[[["self"]],["t"]]],[11,"borrow_mut","","",635,[[["self"]],["t"]]],[11,"type_id","","",635,[[["self"]],["typeid"]]],[11,"from","","",636,[[["t"]],["t"]]],[11,"try_from","","",636,[[["u"]],["result"]]],[11,"into","","",636,[[],["u"]]],[11,"try_into","","",636,[[],["result"]]],[11,"borrow","","",636,[[["self"]],["t"]]],[11,"borrow_mut","","",636,[[["self"]],["t"]]],[11,"type_id","","",636,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::mio_outsel::mio_outsel6","",639,[[["t"]],["t"]]],[11,"try_from","","",639,[[["u"]],["result"]]],[11,"into","","",639,[[],["u"]]],[11,"try_into","","",639,[[],["result"]]],[11,"borrow","","",639,[[["self"]],["t"]]],[11,"borrow_mut","","",639,[[["self"]],["t"]]],[11,"type_id","","",639,[[["self"]],["typeid"]]],[11,"from","","",640,[[["t"]],["t"]]],[11,"try_from","","",640,[[["u"]],["result"]]],[11,"into","","",640,[[],["u"]]],[11,"try_into","","",640,[[],["result"]]],[11,"borrow","","",640,[[["self"]],["t"]]],[11,"borrow_mut","","",640,[[["self"]],["t"]]],[11,"type_id","","",640,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::pinmux::regen","",643,[[["t"]],["t"]]],[11,"try_from","","",643,[[["u"]],["result"]]],[11,"into","","",643,[[],["u"]]],[11,"try_into","","",643,[[],["result"]]],[11,"borrow","","",643,[[["self"]],["t"]]],[11,"borrow_mut","","",643,[[["self"]],["t"]]],[11,"type_id","","",643,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler","",646,[[["t"]],["t"]]],[11,"try_from","","",646,[[["u"]],["result"]]],[11,"into","","",646,[[],["u"]]],[11,"try_into","","",646,[[],["result"]]],[11,"borrow","","",646,[[["self"]],["t"]]],[11,"borrow_mut","","",646,[[["self"]],["t"]]],[11,"type_id","","",646,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::intr_state","",647,[[["t"]],["t"]]],[11,"try_from","","",647,[[["u"]],["result"]]],[11,"into","","",647,[[],["u"]]],[11,"try_into","","",647,[[],["result"]]],[11,"borrow","","",647,[[["self"]],["t"]]],[11,"borrow_mut","","",647,[[["self"]],["t"]]],[11,"type_id","","",647,[[["self"]],["typeid"]]],[11,"from","","",648,[[["t"]],["t"]]],[11,"try_from","","",648,[[["u"]],["result"]]],[11,"into","","",648,[[],["u"]]],[11,"try_into","","",648,[[],["result"]]],[11,"borrow","","",648,[[["self"]],["t"]]],[11,"borrow_mut","","",648,[[["self"]],["t"]]],[11,"type_id","","",648,[[["self"]],["typeid"]]],[11,"from","","",649,[[["t"]],["t"]]],[11,"try_from","","",649,[[["u"]],["result"]]],[11,"into","","",649,[[],["u"]]],[11,"try_into","","",649,[[],["result"]]],[11,"borrow","","",649,[[["self"]],["t"]]],[11,"borrow_mut","","",649,[[["self"]],["t"]]],[11,"type_id","","",649,[[["self"]],["typeid"]]],[11,"from","","",650,[[["t"]],["t"]]],[11,"try_from","","",650,[[["u"]],["result"]]],[11,"into","","",650,[[],["u"]]],[11,"try_into","","",650,[[],["result"]]],[11,"borrow","","",650,[[["self"]],["t"]]],[11,"borrow_mut","","",650,[[["self"]],["t"]]],[11,"type_id","","",650,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::intr_enable","",653,[[["t"]],["t"]]],[11,"try_from","","",653,[[["u"]],["result"]]],[11,"into","","",653,[[],["u"]]],[11,"try_into","","",653,[[],["result"]]],[11,"borrow","","",653,[[["self"]],["t"]]],[11,"borrow_mut","","",653,[[["self"]],["t"]]],[11,"type_id","","",653,[[["self"]],["typeid"]]],[11,"from","","",654,[[["t"]],["t"]]],[11,"try_from","","",654,[[["u"]],["result"]]],[11,"into","","",654,[[],["u"]]],[11,"try_into","","",654,[[],["result"]]],[11,"borrow","","",654,[[["self"]],["t"]]],[11,"borrow_mut","","",654,[[["self"]],["t"]]],[11,"type_id","","",654,[[["self"]],["typeid"]]],[11,"from","","",655,[[["t"]],["t"]]],[11,"try_from","","",655,[[["u"]],["result"]]],[11,"into","","",655,[[],["u"]]],[11,"try_into","","",655,[[],["result"]]],[11,"borrow","","",655,[[["self"]],["t"]]],[11,"borrow_mut","","",655,[[["self"]],["t"]]],[11,"type_id","","",655,[[["self"]],["typeid"]]],[11,"from","","",656,[[["t"]],["t"]]],[11,"try_from","","",656,[[["u"]],["result"]]],[11,"into","","",656,[[],["u"]]],[11,"try_into","","",656,[[],["result"]]],[11,"borrow","","",656,[[["self"]],["t"]]],[11,"borrow_mut","","",656,[[["self"]],["t"]]],[11,"type_id","","",656,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::intr_test","",659,[[["t"]],["t"]]],[11,"try_from","","",659,[[["u"]],["result"]]],[11,"into","","",659,[[],["u"]]],[11,"try_into","","",659,[[],["result"]]],[11,"borrow","","",659,[[["self"]],["t"]]],[11,"borrow_mut","","",659,[[["self"]],["t"]]],[11,"type_id","","",659,[[["self"]],["typeid"]]],[11,"from","","",660,[[["t"]],["t"]]],[11,"try_from","","",660,[[["u"]],["result"]]],[11,"into","","",660,[[],["u"]]],[11,"try_into","","",660,[[],["result"]]],[11,"borrow","","",660,[[["self"]],["t"]]],[11,"borrow_mut","","",660,[[["self"]],["t"]]],[11,"type_id","","",660,[[["self"]],["typeid"]]],[11,"from","","",661,[[["t"]],["t"]]],[11,"try_from","","",661,[[["u"]],["result"]]],[11,"into","","",661,[[],["u"]]],[11,"try_into","","",661,[[],["result"]]],[11,"borrow","","",661,[[["self"]],["t"]]],[11,"borrow_mut","","",661,[[["self"]],["t"]]],[11,"type_id","","",661,[[["self"]],["typeid"]]],[11,"from","","",662,[[["t"]],["t"]]],[11,"try_from","","",662,[[["u"]],["result"]]],[11,"into","","",662,[[],["u"]]],[11,"try_into","","",662,[[],["result"]]],[11,"borrow","","",662,[[["self"]],["t"]]],[11,"borrow_mut","","",662,[[["self"]],["t"]]],[11,"type_id","","",662,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::alert_en","",664,[[["t"]],["t"]]],[11,"try_from","","",664,[[["u"]],["result"]]],[11,"into","","",664,[[],["u"]]],[11,"try_into","","",664,[[],["result"]]],[11,"borrow","","",664,[[["self"]],["t"]]],[11,"borrow_mut","","",664,[[["self"]],["t"]]],[11,"type_id","","",664,[[["self"]],["typeid"]]],[11,"from","","",665,[[["t"]],["t"]]],[11,"try_from","","",665,[[["u"]],["result"]]],[11,"into","","",665,[[],["u"]]],[11,"try_into","","",665,[[],["result"]]],[11,"borrow","","",665,[[["self"]],["t"]]],[11,"borrow_mut","","",665,[[["self"]],["t"]]],[11,"type_id","","",665,[[["self"]],["typeid"]]],[11,"from","","",666,[[["t"]],["t"]]],[11,"try_from","","",666,[[["u"]],["result"]]],[11,"into","","",666,[[],["u"]]],[11,"try_into","","",666,[[],["result"]]],[11,"borrow","","",666,[[["self"]],["t"]]],[11,"borrow_mut","","",666,[[["self"]],["t"]]],[11,"type_id","","",666,[[["self"]],["typeid"]]],[11,"from","","",667,[[["t"]],["t"]]],[11,"try_from","","",667,[[["u"]],["result"]]],[11,"into","","",667,[[],["u"]]],[11,"try_into","","",667,[[],["result"]]],[11,"borrow","","",667,[[["self"]],["t"]]],[11,"borrow_mut","","",667,[[["self"]],["t"]]],[11,"type_id","","",667,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::alert_class","",670,[[["t"]],["t"]]],[11,"try_from","","",670,[[["u"]],["result"]]],[11,"into","","",670,[[],["u"]]],[11,"try_into","","",670,[[],["result"]]],[11,"borrow","","",670,[[["self"]],["t"]]],[11,"borrow_mut","","",670,[[["self"]],["t"]]],[11,"type_id","","",670,[[["self"]],["typeid"]]],[11,"from","","",671,[[["t"]],["t"]]],[11,"try_from","","",671,[[["u"]],["result"]]],[11,"into","","",671,[[],["u"]]],[11,"try_into","","",671,[[],["result"]]],[11,"borrow","","",671,[[["self"]],["t"]]],[11,"borrow_mut","","",671,[[["self"]],["t"]]],[11,"type_id","","",671,[[["self"]],["typeid"]]],[11,"from","","",672,[[["t"]],["t"]]],[11,"try_from","","",672,[[["u"]],["result"]]],[11,"into","","",672,[[],["u"]]],[11,"try_into","","",672,[[],["result"]]],[11,"borrow","","",672,[[["self"]],["t"]]],[11,"borrow_mut","","",672,[[["self"]],["t"]]],[11,"type_id","","",672,[[["self"]],["typeid"]]],[11,"from","","",673,[[["t"]],["t"]]],[11,"try_from","","",673,[[["u"]],["result"]]],[11,"into","","",673,[[],["u"]]],[11,"try_into","","",673,[[],["result"]]],[11,"borrow","","",673,[[["self"]],["t"]]],[11,"borrow_mut","","",673,[[["self"]],["t"]]],[11,"type_id","","",673,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::alert_cause","",676,[[["t"]],["t"]]],[11,"try_from","","",676,[[["u"]],["result"]]],[11,"into","","",676,[[],["u"]]],[11,"try_into","","",676,[[],["result"]]],[11,"borrow","","",676,[[["self"]],["t"]]],[11,"borrow_mut","","",676,[[["self"]],["t"]]],[11,"type_id","","",676,[[["self"]],["typeid"]]],[11,"from","","",677,[[["t"]],["t"]]],[11,"try_from","","",677,[[["u"]],["result"]]],[11,"into","","",677,[[],["u"]]],[11,"try_into","","",677,[[],["result"]]],[11,"borrow","","",677,[[["self"]],["t"]]],[11,"borrow_mut","","",677,[[["self"]],["t"]]],[11,"type_id","","",677,[[["self"]],["typeid"]]],[11,"from","","",678,[[["t"]],["t"]]],[11,"try_from","","",678,[[["u"]],["result"]]],[11,"into","","",678,[[],["u"]]],[11,"try_into","","",678,[[],["result"]]],[11,"borrow","","",678,[[["self"]],["t"]]],[11,"borrow_mut","","",678,[[["self"]],["t"]]],[11,"type_id","","",678,[[["self"]],["typeid"]]],[11,"from","","",679,[[["t"]],["t"]]],[11,"try_from","","",679,[[["u"]],["result"]]],[11,"into","","",679,[[],["u"]]],[11,"try_into","","",679,[[],["result"]]],[11,"borrow","","",679,[[["self"]],["t"]]],[11,"borrow_mut","","",679,[[["self"]],["t"]]],[11,"type_id","","",679,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::loc_alert_en","",682,[[["t"]],["t"]]],[11,"try_from","","",682,[[["u"]],["result"]]],[11,"into","","",682,[[],["u"]]],[11,"try_into","","",682,[[],["result"]]],[11,"borrow","","",682,[[["self"]],["t"]]],[11,"borrow_mut","","",682,[[["self"]],["t"]]],[11,"type_id","","",682,[[["self"]],["typeid"]]],[11,"from","","",683,[[["t"]],["t"]]],[11,"try_from","","",683,[[["u"]],["result"]]],[11,"into","","",683,[[],["u"]]],[11,"try_into","","",683,[[],["result"]]],[11,"borrow","","",683,[[["self"]],["t"]]],[11,"borrow_mut","","",683,[[["self"]],["t"]]],[11,"type_id","","",683,[[["self"]],["typeid"]]],[11,"from","","",684,[[["t"]],["t"]]],[11,"try_from","","",684,[[["u"]],["result"]]],[11,"into","","",684,[[],["u"]]],[11,"try_into","","",684,[[],["result"]]],[11,"borrow","","",684,[[["self"]],["t"]]],[11,"borrow_mut","","",684,[[["self"]],["t"]]],[11,"type_id","","",684,[[["self"]],["typeid"]]],[11,"from","","",685,[[["t"]],["t"]]],[11,"try_from","","",685,[[["u"]],["result"]]],[11,"into","","",685,[[],["u"]]],[11,"try_into","","",685,[[],["result"]]],[11,"borrow","","",685,[[["self"]],["t"]]],[11,"borrow_mut","","",685,[[["self"]],["t"]]],[11,"type_id","","",685,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::loc_alert_class","",688,[[["t"]],["t"]]],[11,"try_from","","",688,[[["u"]],["result"]]],[11,"into","","",688,[[],["u"]]],[11,"try_into","","",688,[[],["result"]]],[11,"borrow","","",688,[[["self"]],["t"]]],[11,"borrow_mut","","",688,[[["self"]],["t"]]],[11,"type_id","","",688,[[["self"]],["typeid"]]],[11,"from","","",689,[[["t"]],["t"]]],[11,"try_from","","",689,[[["u"]],["result"]]],[11,"into","","",689,[[],["u"]]],[11,"try_into","","",689,[[],["result"]]],[11,"borrow","","",689,[[["self"]],["t"]]],[11,"borrow_mut","","",689,[[["self"]],["t"]]],[11,"type_id","","",689,[[["self"]],["typeid"]]],[11,"from","","",690,[[["t"]],["t"]]],[11,"try_from","","",690,[[["u"]],["result"]]],[11,"into","","",690,[[],["u"]]],[11,"try_into","","",690,[[],["result"]]],[11,"borrow","","",690,[[["self"]],["t"]]],[11,"borrow_mut","","",690,[[["self"]],["t"]]],[11,"type_id","","",690,[[["self"]],["typeid"]]],[11,"from","","",691,[[["t"]],["t"]]],[11,"try_from","","",691,[[["u"]],["result"]]],[11,"into","","",691,[[],["u"]]],[11,"try_into","","",691,[[],["result"]]],[11,"borrow","","",691,[[["self"]],["t"]]],[11,"borrow_mut","","",691,[[["self"]],["t"]]],[11,"type_id","","",691,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::loc_alert_cause","",694,[[["t"]],["t"]]],[11,"try_from","","",694,[[["u"]],["result"]]],[11,"into","","",694,[[],["u"]]],[11,"try_into","","",694,[[],["result"]]],[11,"borrow","","",694,[[["self"]],["t"]]],[11,"borrow_mut","","",694,[[["self"]],["t"]]],[11,"type_id","","",694,[[["self"]],["typeid"]]],[11,"from","","",695,[[["t"]],["t"]]],[11,"try_from","","",695,[[["u"]],["result"]]],[11,"into","","",695,[[],["u"]]],[11,"try_into","","",695,[[],["result"]]],[11,"borrow","","",695,[[["self"]],["t"]]],[11,"borrow_mut","","",695,[[["self"]],["t"]]],[11,"type_id","","",695,[[["self"]],["typeid"]]],[11,"from","","",696,[[["t"]],["t"]]],[11,"try_from","","",696,[[["u"]],["result"]]],[11,"into","","",696,[[],["u"]]],[11,"try_into","","",696,[[],["result"]]],[11,"borrow","","",696,[[["self"]],["t"]]],[11,"borrow_mut","","",696,[[["self"]],["t"]]],[11,"type_id","","",696,[[["self"]],["typeid"]]],[11,"from","","",697,[[["t"]],["t"]]],[11,"try_from","","",697,[[["u"]],["result"]]],[11,"into","","",697,[[],["u"]]],[11,"try_into","","",697,[[],["result"]]],[11,"borrow","","",697,[[["self"]],["t"]]],[11,"borrow_mut","","",697,[[["self"]],["t"]]],[11,"type_id","","",697,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::classa_ctrl","",700,[[["t"]],["t"]]],[11,"try_from","","",700,[[["u"]],["result"]]],[11,"into","","",700,[[],["u"]]],[11,"try_into","","",700,[[],["result"]]],[11,"borrow","","",700,[[["self"]],["t"]]],[11,"borrow_mut","","",700,[[["self"]],["t"]]],[11,"type_id","","",700,[[["self"]],["typeid"]]],[11,"from","","",701,[[["t"]],["t"]]],[11,"try_from","","",701,[[["u"]],["result"]]],[11,"into","","",701,[[],["u"]]],[11,"try_into","","",701,[[],["result"]]],[11,"borrow","","",701,[[["self"]],["t"]]],[11,"borrow_mut","","",701,[[["self"]],["t"]]],[11,"type_id","","",701,[[["self"]],["typeid"]]],[11,"from","","",702,[[["t"]],["t"]]],[11,"try_from","","",702,[[["u"]],["result"]]],[11,"into","","",702,[[],["u"]]],[11,"try_into","","",702,[[],["result"]]],[11,"borrow","","",702,[[["self"]],["t"]]],[11,"borrow_mut","","",702,[[["self"]],["t"]]],[11,"type_id","","",702,[[["self"]],["typeid"]]],[11,"from","","",703,[[["t"]],["t"]]],[11,"try_from","","",703,[[["u"]],["result"]]],[11,"into","","",703,[[],["u"]]],[11,"try_into","","",703,[[],["result"]]],[11,"borrow","","",703,[[["self"]],["t"]]],[11,"borrow_mut","","",703,[[["self"]],["t"]]],[11,"type_id","","",703,[[["self"]],["typeid"]]],[11,"from","","",704,[[["t"]],["t"]]],[11,"try_from","","",704,[[["u"]],["result"]]],[11,"into","","",704,[[],["u"]]],[11,"try_into","","",704,[[],["result"]]],[11,"borrow","","",704,[[["self"]],["t"]]],[11,"borrow_mut","","",704,[[["self"]],["t"]]],[11,"type_id","","",704,[[["self"]],["typeid"]]],[11,"from","","",705,[[["t"]],["t"]]],[11,"try_from","","",705,[[["u"]],["result"]]],[11,"into","","",705,[[],["u"]]],[11,"try_into","","",705,[[],["result"]]],[11,"borrow","","",705,[[["self"]],["t"]]],[11,"borrow_mut","","",705,[[["self"]],["t"]]],[11,"type_id","","",705,[[["self"]],["typeid"]]],[11,"from","","",706,[[["t"]],["t"]]],[11,"try_from","","",706,[[["u"]],["result"]]],[11,"into","","",706,[[],["u"]]],[11,"try_into","","",706,[[],["result"]]],[11,"borrow","","",706,[[["self"]],["t"]]],[11,"borrow_mut","","",706,[[["self"]],["t"]]],[11,"type_id","","",706,[[["self"]],["typeid"]]],[11,"from","","",707,[[["t"]],["t"]]],[11,"try_from","","",707,[[["u"]],["result"]]],[11,"into","","",707,[[],["u"]]],[11,"try_into","","",707,[[],["result"]]],[11,"borrow","","",707,[[["self"]],["t"]]],[11,"borrow_mut","","",707,[[["self"]],["t"]]],[11,"type_id","","",707,[[["self"]],["typeid"]]],[11,"from","","",708,[[["t"]],["t"]]],[11,"try_from","","",708,[[["u"]],["result"]]],[11,"into","","",708,[[],["u"]]],[11,"try_into","","",708,[[],["result"]]],[11,"borrow","","",708,[[["self"]],["t"]]],[11,"borrow_mut","","",708,[[["self"]],["t"]]],[11,"type_id","","",708,[[["self"]],["typeid"]]],[11,"from","","",709,[[["t"]],["t"]]],[11,"try_from","","",709,[[["u"]],["result"]]],[11,"into","","",709,[[],["u"]]],[11,"try_into","","",709,[[],["result"]]],[11,"borrow","","",709,[[["self"]],["t"]]],[11,"borrow_mut","","",709,[[["self"]],["t"]]],[11,"type_id","","",709,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::classb_ctrl","",712,[[["t"]],["t"]]],[11,"try_from","","",712,[[["u"]],["result"]]],[11,"into","","",712,[[],["u"]]],[11,"try_into","","",712,[[],["result"]]],[11,"borrow","","",712,[[["self"]],["t"]]],[11,"borrow_mut","","",712,[[["self"]],["t"]]],[11,"type_id","","",712,[[["self"]],["typeid"]]],[11,"from","","",713,[[["t"]],["t"]]],[11,"try_from","","",713,[[["u"]],["result"]]],[11,"into","","",713,[[],["u"]]],[11,"try_into","","",713,[[],["result"]]],[11,"borrow","","",713,[[["self"]],["t"]]],[11,"borrow_mut","","",713,[[["self"]],["t"]]],[11,"type_id","","",713,[[["self"]],["typeid"]]],[11,"from","","",714,[[["t"]],["t"]]],[11,"try_from","","",714,[[["u"]],["result"]]],[11,"into","","",714,[[],["u"]]],[11,"try_into","","",714,[[],["result"]]],[11,"borrow","","",714,[[["self"]],["t"]]],[11,"borrow_mut","","",714,[[["self"]],["t"]]],[11,"type_id","","",714,[[["self"]],["typeid"]]],[11,"from","","",715,[[["t"]],["t"]]],[11,"try_from","","",715,[[["u"]],["result"]]],[11,"into","","",715,[[],["u"]]],[11,"try_into","","",715,[[],["result"]]],[11,"borrow","","",715,[[["self"]],["t"]]],[11,"borrow_mut","","",715,[[["self"]],["t"]]],[11,"type_id","","",715,[[["self"]],["typeid"]]],[11,"from","","",716,[[["t"]],["t"]]],[11,"try_from","","",716,[[["u"]],["result"]]],[11,"into","","",716,[[],["u"]]],[11,"try_into","","",716,[[],["result"]]],[11,"borrow","","",716,[[["self"]],["t"]]],[11,"borrow_mut","","",716,[[["self"]],["t"]]],[11,"type_id","","",716,[[["self"]],["typeid"]]],[11,"from","","",717,[[["t"]],["t"]]],[11,"try_from","","",717,[[["u"]],["result"]]],[11,"into","","",717,[[],["u"]]],[11,"try_into","","",717,[[],["result"]]],[11,"borrow","","",717,[[["self"]],["t"]]],[11,"borrow_mut","","",717,[[["self"]],["t"]]],[11,"type_id","","",717,[[["self"]],["typeid"]]],[11,"from","","",718,[[["t"]],["t"]]],[11,"try_from","","",718,[[["u"]],["result"]]],[11,"into","","",718,[[],["u"]]],[11,"try_into","","",718,[[],["result"]]],[11,"borrow","","",718,[[["self"]],["t"]]],[11,"borrow_mut","","",718,[[["self"]],["t"]]],[11,"type_id","","",718,[[["self"]],["typeid"]]],[11,"from","","",719,[[["t"]],["t"]]],[11,"try_from","","",719,[[["u"]],["result"]]],[11,"into","","",719,[[],["u"]]],[11,"try_into","","",719,[[],["result"]]],[11,"borrow","","",719,[[["self"]],["t"]]],[11,"borrow_mut","","",719,[[["self"]],["t"]]],[11,"type_id","","",719,[[["self"]],["typeid"]]],[11,"from","","",720,[[["t"]],["t"]]],[11,"try_from","","",720,[[["u"]],["result"]]],[11,"into","","",720,[[],["u"]]],[11,"try_into","","",720,[[],["result"]]],[11,"borrow","","",720,[[["self"]],["t"]]],[11,"borrow_mut","","",720,[[["self"]],["t"]]],[11,"type_id","","",720,[[["self"]],["typeid"]]],[11,"from","","",721,[[["t"]],["t"]]],[11,"try_from","","",721,[[["u"]],["result"]]],[11,"into","","",721,[[],["u"]]],[11,"try_into","","",721,[[],["result"]]],[11,"borrow","","",721,[[["self"]],["t"]]],[11,"borrow_mut","","",721,[[["self"]],["t"]]],[11,"type_id","","",721,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::classc_ctrl","",724,[[["t"]],["t"]]],[11,"try_from","","",724,[[["u"]],["result"]]],[11,"into","","",724,[[],["u"]]],[11,"try_into","","",724,[[],["result"]]],[11,"borrow","","",724,[[["self"]],["t"]]],[11,"borrow_mut","","",724,[[["self"]],["t"]]],[11,"type_id","","",724,[[["self"]],["typeid"]]],[11,"from","","",725,[[["t"]],["t"]]],[11,"try_from","","",725,[[["u"]],["result"]]],[11,"into","","",725,[[],["u"]]],[11,"try_into","","",725,[[],["result"]]],[11,"borrow","","",725,[[["self"]],["t"]]],[11,"borrow_mut","","",725,[[["self"]],["t"]]],[11,"type_id","","",725,[[["self"]],["typeid"]]],[11,"from","","",726,[[["t"]],["t"]]],[11,"try_from","","",726,[[["u"]],["result"]]],[11,"into","","",726,[[],["u"]]],[11,"try_into","","",726,[[],["result"]]],[11,"borrow","","",726,[[["self"]],["t"]]],[11,"borrow_mut","","",726,[[["self"]],["t"]]],[11,"type_id","","",726,[[["self"]],["typeid"]]],[11,"from","","",727,[[["t"]],["t"]]],[11,"try_from","","",727,[[["u"]],["result"]]],[11,"into","","",727,[[],["u"]]],[11,"try_into","","",727,[[],["result"]]],[11,"borrow","","",727,[[["self"]],["t"]]],[11,"borrow_mut","","",727,[[["self"]],["t"]]],[11,"type_id","","",727,[[["self"]],["typeid"]]],[11,"from","","",728,[[["t"]],["t"]]],[11,"try_from","","",728,[[["u"]],["result"]]],[11,"into","","",728,[[],["u"]]],[11,"try_into","","",728,[[],["result"]]],[11,"borrow","","",728,[[["self"]],["t"]]],[11,"borrow_mut","","",728,[[["self"]],["t"]]],[11,"type_id","","",728,[[["self"]],["typeid"]]],[11,"from","","",729,[[["t"]],["t"]]],[11,"try_from","","",729,[[["u"]],["result"]]],[11,"into","","",729,[[],["u"]]],[11,"try_into","","",729,[[],["result"]]],[11,"borrow","","",729,[[["self"]],["t"]]],[11,"borrow_mut","","",729,[[["self"]],["t"]]],[11,"type_id","","",729,[[["self"]],["typeid"]]],[11,"from","","",730,[[["t"]],["t"]]],[11,"try_from","","",730,[[["u"]],["result"]]],[11,"into","","",730,[[],["u"]]],[11,"try_into","","",730,[[],["result"]]],[11,"borrow","","",730,[[["self"]],["t"]]],[11,"borrow_mut","","",730,[[["self"]],["t"]]],[11,"type_id","","",730,[[["self"]],["typeid"]]],[11,"from","","",731,[[["t"]],["t"]]],[11,"try_from","","",731,[[["u"]],["result"]]],[11,"into","","",731,[[],["u"]]],[11,"try_into","","",731,[[],["result"]]],[11,"borrow","","",731,[[["self"]],["t"]]],[11,"borrow_mut","","",731,[[["self"]],["t"]]],[11,"type_id","","",731,[[["self"]],["typeid"]]],[11,"from","","",732,[[["t"]],["t"]]],[11,"try_from","","",732,[[["u"]],["result"]]],[11,"into","","",732,[[],["u"]]],[11,"try_into","","",732,[[],["result"]]],[11,"borrow","","",732,[[["self"]],["t"]]],[11,"borrow_mut","","",732,[[["self"]],["t"]]],[11,"type_id","","",732,[[["self"]],["typeid"]]],[11,"from","","",733,[[["t"]],["t"]]],[11,"try_from","","",733,[[["u"]],["result"]]],[11,"into","","",733,[[],["u"]]],[11,"try_into","","",733,[[],["result"]]],[11,"borrow","","",733,[[["self"]],["t"]]],[11,"borrow_mut","","",733,[[["self"]],["t"]]],[11,"type_id","","",733,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::alert_handler::classd_ctrl","",736,[[["t"]],["t"]]],[11,"try_from","","",736,[[["u"]],["result"]]],[11,"into","","",736,[[],["u"]]],[11,"try_into","","",736,[[],["result"]]],[11,"borrow","","",736,[[["self"]],["t"]]],[11,"borrow_mut","","",736,[[["self"]],["t"]]],[11,"type_id","","",736,[[["self"]],["typeid"]]],[11,"from","","",737,[[["t"]],["t"]]],[11,"try_from","","",737,[[["u"]],["result"]]],[11,"into","","",737,[[],["u"]]],[11,"try_into","","",737,[[],["result"]]],[11,"borrow","","",737,[[["self"]],["t"]]],[11,"borrow_mut","","",737,[[["self"]],["t"]]],[11,"type_id","","",737,[[["self"]],["typeid"]]],[11,"from","","",738,[[["t"]],["t"]]],[11,"try_from","","",738,[[["u"]],["result"]]],[11,"into","","",738,[[],["u"]]],[11,"try_into","","",738,[[],["result"]]],[11,"borrow","","",738,[[["self"]],["t"]]],[11,"borrow_mut","","",738,[[["self"]],["t"]]],[11,"type_id","","",738,[[["self"]],["typeid"]]],[11,"from","","",739,[[["t"]],["t"]]],[11,"try_from","","",739,[[["u"]],["result"]]],[11,"into","","",739,[[],["u"]]],[11,"try_into","","",739,[[],["result"]]],[11,"borrow","","",739,[[["self"]],["t"]]],[11,"borrow_mut","","",739,[[["self"]],["t"]]],[11,"type_id","","",739,[[["self"]],["typeid"]]],[11,"from","","",740,[[["t"]],["t"]]],[11,"try_from","","",740,[[["u"]],["result"]]],[11,"into","","",740,[[],["u"]]],[11,"try_into","","",740,[[],["result"]]],[11,"borrow","","",740,[[["self"]],["t"]]],[11,"borrow_mut","","",740,[[["self"]],["t"]]],[11,"type_id","","",740,[[["self"]],["typeid"]]],[11,"from","","",741,[[["t"]],["t"]]],[11,"try_from","","",741,[[["u"]],["result"]]],[11,"into","","",741,[[],["u"]]],[11,"try_into","","",741,[[],["result"]]],[11,"borrow","","",741,[[["self"]],["t"]]],[11,"borrow_mut","","",741,[[["self"]],["t"]]],[11,"type_id","","",741,[[["self"]],["typeid"]]],[11,"from","","",742,[[["t"]],["t"]]],[11,"try_from","","",742,[[["u"]],["result"]]],[11,"into","","",742,[[],["u"]]],[11,"try_into","","",742,[[],["result"]]],[11,"borrow","","",742,[[["self"]],["t"]]],[11,"borrow_mut","","",742,[[["self"]],["t"]]],[11,"type_id","","",742,[[["self"]],["typeid"]]],[11,"from","","",743,[[["t"]],["t"]]],[11,"try_from","","",743,[[["u"]],["result"]]],[11,"into","","",743,[[],["u"]]],[11,"try_into","","",743,[[],["result"]]],[11,"borrow","","",743,[[["self"]],["t"]]],[11,"borrow_mut","","",743,[[["self"]],["t"]]],[11,"type_id","","",743,[[["self"]],["typeid"]]],[11,"from","","",744,[[["t"]],["t"]]],[11,"try_from","","",744,[[["u"]],["result"]]],[11,"into","","",744,[[],["u"]]],[11,"try_into","","",744,[[],["result"]]],[11,"borrow","","",744,[[["self"]],["t"]]],[11,"borrow_mut","","",744,[[["self"]],["t"]]],[11,"type_id","","",744,[[["self"]],["typeid"]]],[11,"from","","",745,[[["t"]],["t"]]],[11,"try_from","","",745,[[["u"]],["result"]]],[11,"into","","",745,[[],["u"]]],[11,"try_into","","",745,[[],["result"]]],[11,"borrow","","",745,[[["self"]],["t"]]],[11,"borrow_mut","","",745,[[["self"]],["t"]]],[11,"type_id","","",745,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::nmi_gen","",748,[[["t"]],["t"]]],[11,"try_from","","",748,[[["u"]],["result"]]],[11,"into","","",748,[[],["u"]]],[11,"try_into","","",748,[[],["result"]]],[11,"borrow","","",748,[[["self"]],["t"]]],[11,"borrow_mut","","",748,[[["self"]],["t"]]],[11,"type_id","","",748,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::nmi_gen::intr_state","",749,[[["t"]],["t"]]],[11,"try_from","","",749,[[["u"]],["result"]]],[11,"into","","",749,[[],["u"]]],[11,"try_into","","",749,[[],["result"]]],[11,"borrow","","",749,[[["self"]],["t"]]],[11,"borrow_mut","","",749,[[["self"]],["t"]]],[11,"type_id","","",749,[[["self"]],["typeid"]]],[11,"from","","",750,[[["t"]],["t"]]],[11,"try_from","","",750,[[["u"]],["result"]]],[11,"into","","",750,[[],["u"]]],[11,"try_into","","",750,[[],["result"]]],[11,"borrow","","",750,[[["self"]],["t"]]],[11,"borrow_mut","","",750,[[["self"]],["t"]]],[11,"type_id","","",750,[[["self"]],["typeid"]]],[11,"from","","",751,[[["t"]],["t"]]],[11,"try_from","","",751,[[["u"]],["result"]]],[11,"into","","",751,[[],["u"]]],[11,"try_into","","",751,[[],["result"]]],[11,"borrow","","",751,[[["self"]],["t"]]],[11,"borrow_mut","","",751,[[["self"]],["t"]]],[11,"type_id","","",751,[[["self"]],["typeid"]]],[11,"from","","",752,[[["t"]],["t"]]],[11,"try_from","","",752,[[["u"]],["result"]]],[11,"into","","",752,[[],["u"]]],[11,"try_into","","",752,[[],["result"]]],[11,"borrow","","",752,[[["self"]],["t"]]],[11,"borrow_mut","","",752,[[["self"]],["t"]]],[11,"type_id","","",752,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::nmi_gen::intr_enable","",755,[[["t"]],["t"]]],[11,"try_from","","",755,[[["u"]],["result"]]],[11,"into","","",755,[[],["u"]]],[11,"try_into","","",755,[[],["result"]]],[11,"borrow","","",755,[[["self"]],["t"]]],[11,"borrow_mut","","",755,[[["self"]],["t"]]],[11,"type_id","","",755,[[["self"]],["typeid"]]],[11,"from","","",756,[[["t"]],["t"]]],[11,"try_from","","",756,[[["u"]],["result"]]],[11,"into","","",756,[[],["u"]]],[11,"try_into","","",756,[[],["result"]]],[11,"borrow","","",756,[[["self"]],["t"]]],[11,"borrow_mut","","",756,[[["self"]],["t"]]],[11,"type_id","","",756,[[["self"]],["typeid"]]],[11,"from","","",757,[[["t"]],["t"]]],[11,"try_from","","",757,[[["u"]],["result"]]],[11,"into","","",757,[[],["u"]]],[11,"try_into","","",757,[[],["result"]]],[11,"borrow","","",757,[[["self"]],["t"]]],[11,"borrow_mut","","",757,[[["self"]],["t"]]],[11,"type_id","","",757,[[["self"]],["typeid"]]],[11,"from","","",758,[[["t"]],["t"]]],[11,"try_from","","",758,[[["u"]],["result"]]],[11,"into","","",758,[[],["u"]]],[11,"try_into","","",758,[[],["result"]]],[11,"borrow","","",758,[[["self"]],["t"]]],[11,"borrow_mut","","",758,[[["self"]],["t"]]],[11,"type_id","","",758,[[["self"]],["typeid"]]],[11,"from","earlgrey_registers::nmi_gen::intr_test","",761,[[["t"]],["t"]]],[11,"try_from","","",761,[[["u"]],["result"]]],[11,"into","","",761,[[],["u"]]],[11,"try_into","","",761,[[],["result"]]],[11,"borrow","","",761,[[["self"]],["t"]]],[11,"borrow_mut","","",761,[[["self"]],["t"]]],[11,"type_id","","",761,[[["self"]],["typeid"]]],[11,"from","","",762,[[["t"]],["t"]]],[11,"try_from","","",762,[[["u"]],["result"]]],[11,"into","","",762,[[],["u"]]],[11,"try_into","","",762,[[],["result"]]],[11,"borrow","","",762,[[["self"]],["t"]]],[11,"borrow_mut","","",762,[[["self"]],["t"]]],[11,"type_id","","",762,[[["self"]],["typeid"]]],[11,"from","","",763,[[["t"]],["t"]]],[11,"try_from","","",763,[[["u"]],["result"]]],[11,"into","","",763,[[],["u"]]],[11,"try_into","","",763,[[],["result"]]],[11,"borrow","","",763,[[["self"]],["t"]]],[11,"borrow_mut","","",763,[[["self"]],["t"]]],[11,"type_id","","",763,[[["self"]],["typeid"]]],[11,"from","","",764,[[["t"]],["t"]]],[11,"try_from","","",764,[[["u"]],["result"]]],[11,"into","","",764,[[],["u"]]],[11,"try_into","","",764,[[],["result"]]],[11,"borrow","","",764,[[["self"]],["t"]]],[11,"borrow_mut","","",764,[[["self"]],["t"]]],[11,"type_id","","",764,[[["self"]],["typeid"]]],[11,"reset_value","earlgrey_registers","",777,[[]]],[11,"reset_value","","",778,[[]]],[11,"reset_value","","",779,[[]]],[11,"reset_value","","",780,[[]]],[11,"reset_value","","",781,[[]]],[11,"reset_value","","",782,[[]]],[11,"reset_value","","",783,[[]]],[11,"reset_value","","",784,[[]]],[11,"reset_value","","",785,[[]]],[11,"reset_value","","",786,[[]]],[11,"reset_value","","",787,[[]]],[11,"reset_value","","",788,[[]]],[11,"reset_value","","",789,[[]]],[11,"reset_value","","",790,[[]]],[11,"reset_value","","",791,[[]]],[11,"reset_value","","",792,[[]]],[11,"reset_value","","",793,[[]]],[11,"reset_value","","",794,[[]]],[11,"reset_value","","",795,[[]]],[11,"reset_value","","",796,[[]]],[11,"reset_value","","",797,[[]]],[11,"reset_value","","",798,[[]]],[11,"reset_value","","",799,[[]]],[11,"reset_value","","",800,[[]]],[11,"reset_value","","",801,[[]]],[11,"reset_value","","",802,[[]]],[11,"reset_value","","",803,[[]]],[11,"reset_value","","",804,[[]]],[11,"reset_value","","",805,[[]]],[11,"reset_value","","",806,[[]]],[11,"reset_value","","",807,[[]]],[11,"reset_value","","",808,[[]]],[11,"reset_value","","",809,[[]]],[11,"reset_value","","",810,[[]]],[11,"reset_value","","",811,[[]]],[11,"reset_value","","",812,[[]]],[11,"reset_value","","",813,[[]]],[11,"reset_value","","",814,[[]]],[11,"reset_value","","",815,[[]]],[11,"reset_value","","",816,[[]]],[11,"reset_value","","",817,[[]]],[11,"reset_value","","",818,[[]]],[11,"reset_value","","",819,[[]]],[11,"reset_value","","",820,[[]]],[11,"reset_value","","",821,[[]]],[11,"reset_value","","",822,[[]]],[11,"reset_value","","",823,[[]]],[11,"reset_value","","",824,[[]]],[11,"reset_value","","",825,[[]]],[11,"reset_value","","",826,[[]]],[11,"reset_value","","",827,[[]]],[11,"reset_value","","",828,[[]]],[11,"reset_value","","",829,[[]]],[11,"reset_value","","",830,[[]]],[11,"reset_value","","",831,[[]]],[11,"reset_value","","",832,[[]]],[11,"reset_value","","",833,[[]]],[11,"reset_value","","",834,[[]]],[11,"reset_value","","",835,[[]]],[11,"reset_value","","",836,[[]]],[11,"reset_value","","",837,[[]]],[11,"reset_value","","",838,[[]]],[11,"reset_value","","",839,[[]]],[11,"reset_value","","",840,[[]]],[11,"reset_value","","",841,[[]]],[11,"reset_value","","",842,[[]]],[11,"reset_value","","",843,[[]]],[11,"reset_value","","",844,[[]]],[11,"reset_value","","",845,[[]]],[11,"reset_value","","",846,[[]]],[11,"reset_value","","",847,[[]]],[11,"reset_value","","",848,[[]]],[11,"reset_value","","",849,[[]]],[11,"reset_value","","",850,[[]]],[11,"reset_value","","",851,[[]]],[11,"reset_value","","",852,[[]]],[11,"reset_value","","",853,[[]]],[11,"reset_value","","",854,[[]]],[11,"reset_value","","",855,[[]]],[11,"reset_value","","",856,[[]]],[11,"reset_value","","",857,[[]]],[11,"reset_value","","",858,[[]]],[11,"reset_value","","",859,[[]]],[11,"reset_value","","",860,[[]]],[11,"reset_value","","",861,[[]]],[11,"reset_value","","",862,[[]]],[11,"reset_value","","",863,[[]]],[11,"reset_value","","",864,[[]]],[11,"reset_value","","",865,[[]]],[11,"reset_value","","",866,[[]]],[11,"reset_value","","",867,[[]]],[11,"reset_value","","",868,[[]]],[11,"reset_value","","",869,[[]]],[11,"reset_value","","",870,[[]]],[11,"reset_value","","",871,[[]]],[11,"reset_value","","",872,[[]]],[11,"reset_value","","",873,[[]]],[11,"reset_value","","",874,[[]]],[11,"reset_value","","",875,[[]]],[11,"reset_value","","",876,[[]]],[11,"reset_value","","",877,[[]]],[11,"reset_value","","",878,[[]]],[11,"reset_value","","",879,[[]]],[11,"reset_value","","",880,[[]]],[11,"reset_value","","",881,[[]]],[11,"reset_value","","",882,[[]]],[11,"reset_value","","",883,[[]]],[11,"reset_value","","",884,[[]]],[11,"reset_value","","",885,[[]]],[11,"reset_value","","",886,[[]]],[11,"reset_value","","",887,[[]]],[11,"reset_value","","",888,[[]]],[11,"reset_value","","",889,[[]]],[11,"reset_value","","",890,[[]]],[11,"reset_value","","",891,[[]]],[11,"reset_value","","",892,[[]]],[11,"reset_value","","",893,[[]]],[11,"reset_value","","",894,[[]]],[11,"reset_value","","",895,[[]]],[11,"reset_value","","",896,[[]]],[11,"reset_value","","",897,[[]]],[11,"reset_value","","",898,[[]]],[11,"reset_value","","",899,[[]]],[11,"reset_value","","",900,[[]]],[11,"reset_value","","",901,[[]]],[11,"reset_value","","",902,[[]]],[11,"reset_value","","",903,[[]]],[11,"reset_value","","",904,[[]]],[11,"reset_value","","",905,[[]]],[11,"reset_value","","",906,[[]]],[11,"reset_value","","",907,[[]]],[11,"reset_value","","",908,[[]]],[11,"reset_value","","",909,[[]]],[11,"reset_value","","",910,[[]]],[11,"reset_value","","",911,[[]]],[11,"reset_value","","",912,[[]]],[11,"reset_value","","",913,[[]]],[11,"reset_value","","",914,[[]]],[11,"reset_value","","",915,[[]]],[11,"reset_value","","",916,[[]]],[11,"reset_value","","",917,[[]]],[11,"reset_value","","",918,[[]]],[11,"reset_value","","",919,[[]]],[11,"reset_value","","",920,[[]]],[11,"reset_value","","",921,[[]]],[11,"reset_value","","",922,[[]]],[11,"reset_value","","",923,[[]]],[11,"reset_value","","",924,[[]]],[11,"reset_value","","",925,[[]]],[11,"reset_value","","",926,[[]]],[11,"reset_value","","",927,[[]]],[11,"reset_value","","",928,[[]]],[11,"reset_value","","",929,[[]]],[11,"reset_value","","",930,[[]]],[11,"reset_value","","",931,[[]]],[11,"reset_value","","",932,[[]]],[11,"reset_value","","",933,[[]]],[11,"reset_value","","",934,[[]]],[11,"reset_value","","",935,[[]]],[11,"reset_value","","",936,[[]]],[11,"reset_value","","",937,[[]]],[11,"reset_value","","",938,[[]]],[11,"reset_value","","",939,[[]]],[11,"reset_value","","",940,[[]]],[11,"reset_value","","",941,[[]]],[11,"reset_value","","",942,[[]]],[11,"reset_value","","",943,[[]]],[11,"reset_value","","",944,[[]]],[11,"reset_value","","",945,[[]]],[11,"reset_value","","",946,[[]]],[11,"reset_value","","",947,[[]]],[11,"reset_value","","",948,[[]]],[11,"reset_value","","",949,[[]]],[11,"reset_value","","",950,[[]]],[11,"reset_value","","",951,[[]]],[11,"reset_value","","",952,[[]]],[11,"reset_value","","",953,[[]]],[11,"reset_value","","",954,[[]]],[11,"reset_value","","",955,[[]]],[11,"reset_value","","",956,[[]]],[11,"reset_value","","",957,[[]]],[11,"reset_value","","",958,[[]]],[11,"reset_value","","",959,[[]]],[11,"reset_value","","",960,[[]]],[11,"reset_value","","",961,[[]]],[11,"reset_value","","",962,[[]]],[11,"reset_value","","",963,[[]]],[11,"reset_value","","",964,[[]]],[11,"reset_value","","",965,[[]]],[11,"reset_value","","",966,[[]]],[11,"reset_value","","",967,[[]]],[11,"reset_value","","",968,[[]]],[11,"reset_value","","",969,[[]]],[11,"reset_value","","",970,[[]]],[11,"reset_value","","",971,[[]]],[11,"reset_value","","",972,[[]]],[11,"reset_value","","",973,[[]]],[11,"reset_value","","",974,[[]]],[11,"reset_value","","",975,[[]]],[11,"reset_value","","",976,[[]]],[11,"reset_value","","",977,[[]]],[11,"reset_value","","",978,[[]]],[11,"reset_value","","",979,[[]]],[11,"reset_value","","",980,[[]]],[11,"reset_value","","",981,[[]]],[11,"reset_value","","",982,[[]]],[11,"reset_value","","",983,[[]]],[11,"reset_value","","",984,[[]]],[11,"reset_value","","",985,[[]]],[11,"reset_value","","",986,[[]]],[11,"reset_value","","",987,[[]]],[11,"reset_value","","",988,[[]]],[11,"reset_value","","",989,[[]]],[11,"reset_value","","",990,[[]]],[11,"reset_value","","",991,[[]]],[11,"reset_value","","",992,[[]]],[11,"reset_value","","",993,[[]]],[11,"reset_value","","",994,[[]]],[11,"reset_value","","",995,[[]]],[11,"reset_value","","",996,[[]]],[11,"reset_value","","",997,[[]]],[11,"reset_value","","",998,[[]]],[11,"reset_value","","",999,[[]]],[11,"reset_value","","",1000,[[]]],[11,"deref","","",766,[[["self"]]]],[11,"deref","","",767,[[["self"]]]],[11,"deref","","",768,[[["self"]]]],[11,"deref","","",769,[[["self"]]]],[11,"deref","","",770,[[["self"]]]],[11,"deref","","",771,[[["self"]]]],[11,"deref","","",772,[[["self"]]]],[11,"deref","","",773,[[["self"]]]],[11,"deref","","",774,[[["self"]]]],[11,"deref","","",775,[[["self"]]]],[11,"deref","","",776,[[["self"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"eq","earlgrey_registers::generic","",5,[[["self"],["fi"]],["bool"]]],[11,"eq","","",2,[[["self"],["variant"]],["bool"]]],[11,"ne","","",2,[[["self"],["variant"]],["bool"]]],[11,"clone","earlgrey_registers","",1,[[["self"]],["interrupt"]]],[11,"clone","earlgrey_registers::generic","",2,[[["self"]],["variant"]]],[11,"nr","earlgrey_registers","",1,[[["self"]],["u8"]]]],"p":[[3,"Peripherals"],[4,"Interrupt"],[4,"Variant"],[8,"ResetValue"],[3,"Reg"],[3,"R"],[3,"W"],[3,"RegisterBlock"],[3,"TX_WATERMARK_W"],[3,"RX_WATERMARK_W"],[3,"TX_EMPTY_W"],[3,"RX_OVERFLOW_W"],[3,"RX_FRAME_ERR_W"],[3,"RX_BREAK_ERR_W"],[3,"RX_TIMEOUT_W"],[3,"RX_PARITY_ERR_W"],[6,"R"],[6,"W"],[3,"TX_WATERMARK_W"],[3,"RX_WATERMARK_W"],[3,"TX_EMPTY_W"],[3,"RX_OVERFLOW_W"],[3,"RX_FRAME_ERR_W"],[3,"RX_BREAK_ERR_W"],[3,"RX_TIMEOUT_W"],[3,"RX_PARITY_ERR_W"],[6,"R"],[6,"W"],[3,"TX_WATERMARK_W"],[3,"RX_WATERMARK_W"],[3,"TX_EMPTY_W"],[3,"RX_OVERFLOW_W"],[3,"RX_FRAME_ERR_W"],[3,"RX_BREAK_ERR_W"],[3,"RX_TIMEOUT_W"],[3,"RX_PARITY_ERR_W"],[6,"W"],[3,"TX_W"],[3,"RX_W"],[3,"NF_W"],[3,"SLPBK_W"],[3,"LLPBK_W"],[3,"PARITY_EN_W"],[3,"PARITY_ODD_W"],[3,"RXBLVL_W"],[3,"NCO_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RXRST_W"],[3,"TXRST_W"],[3,"RXILVL_W"],[3,"TXILVL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"TXEN_W"],[3,"TXVAL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"VAL_W"],[3,"EN_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"GPIO_W"],[6,"R"],[6,"W"],[3,"GPIO_W"],[6,"R"],[6,"W"],[3,"GPIO_W"],[6,"W"],[3,"DATA_W"],[3,"MASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[3,"MASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[3,"MASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[3,"MASK_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RXF_W"],[3,"RXLVL_W"],[3,"TXLVL_W"],[3,"RXERR_W"],[3,"RXOVERFLOW_W"],[3,"TXUNDERFLOW_W"],[6,"R"],[6,"W"],[3,"RXF_W"],[3,"RXLVL_W"],[3,"TXLVL_W"],[3,"RXERR_W"],[3,"RXOVERFLOW_W"],[3,"TXUNDERFLOW_W"],[6,"R"],[6,"W"],[3,"RXF_W"],[3,"RXLVL_W"],[3,"TXLVL_W"],[3,"RXERR_W"],[3,"RXOVERFLOW_W"],[3,"TXUNDERFLOW_W"],[6,"W"],[3,"ABORT_W"],[3,"MODE_W"],[3,"RST_TXFIFO_W"],[3,"RST_RXFIFO_W"],[6,"R"],[6,"W"],[3,"CPOL_W"],[3,"CPHA_W"],[3,"TX_ORDER_W"],[3,"RX_ORDER_W"],[3,"TIMER_V_W"],[6,"R"],[6,"W"],[3,"RXLVL_W"],[3,"TXLVL_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"RPTR_W"],[6,"R"],[6,"W"],[3,"WPTR_W"],[6,"R"],[6,"W"],[3,"BASE_W"],[3,"LIMIT_W"],[6,"R"],[6,"W"],[3,"BASE_W"],[3,"LIMIT_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"MP_REGION_CFG"],[3,"EN0_W"],[3,"RD_EN0_W"],[3,"PROG_EN0_W"],[3,"ERASE_EN0_W"],[3,"BASE0_W"],[3,"SIZE0_W"],[6,"R"],[6,"W"],[3,"EN1_W"],[3,"RD_EN1_W"],[3,"PROG_EN1_W"],[3,"ERASE_EN1_W"],[3,"BASE1_W"],[3,"SIZE1_W"],[6,"R"],[6,"W"],[3,"EN2_W"],[3,"RD_EN2_W"],[3,"PROG_EN2_W"],[3,"ERASE_EN2_W"],[3,"BASE2_W"],[3,"SIZE2_W"],[6,"R"],[6,"W"],[3,"EN3_W"],[3,"RD_EN3_W"],[3,"PROG_EN3_W"],[3,"ERASE_EN3_W"],[3,"BASE3_W"],[3,"SIZE3_W"],[6,"R"],[6,"W"],[3,"EN4_W"],[3,"RD_EN4_W"],[3,"PROG_EN4_W"],[3,"ERASE_EN4_W"],[3,"BASE4_W"],[3,"SIZE4_W"],[6,"R"],[6,"W"],[3,"EN5_W"],[3,"RD_EN5_W"],[3,"PROG_EN5_W"],[3,"ERASE_EN5_W"],[3,"BASE5_W"],[3,"SIZE5_W"],[6,"R"],[6,"W"],[3,"EN6_W"],[3,"RD_EN6_W"],[3,"PROG_EN6_W"],[3,"ERASE_EN6_W"],[3,"BASE6_W"],[3,"SIZE6_W"],[6,"R"],[6,"W"],[3,"EN7_W"],[3,"RD_EN7_W"],[3,"PROG_EN7_W"],[3,"ERASE_EN7_W"],[3,"BASE7_W"],[3,"SIZE7_W"],[6,"R"],[6,"W"],[3,"PROG_EMPTY_W"],[3,"PROG_LVL_W"],[3,"RD_FULL_W"],[3,"RD_LVL_W"],[3,"OP_DONE_W"],[3,"OP_ERROR_W"],[6,"R"],[6,"W"],[3,"PROG_EMPTY_W"],[3,"PROG_LVL_W"],[3,"RD_FULL_W"],[3,"RD_LVL_W"],[3,"OP_DONE_W"],[3,"OP_ERROR_W"],[6,"R"],[6,"W"],[3,"PROG_EMPTY_W"],[3,"PROG_LVL_W"],[3,"RD_FULL_W"],[3,"RD_LVL_W"],[3,"OP_DONE_W"],[3,"OP_ERROR_W"],[6,"W"],[3,"START_W"],[3,"OP_W"],[3,"ERASE_SEL_W"],[3,"FIFO_RST_W"],[3,"NUM_W"],[6,"R"],[6,"W"],[3,"START_W"],[6,"R"],[6,"W"],[3,"REGION0_W"],[3,"REGION1_W"],[3,"REGION2_W"],[3,"REGION3_W"],[3,"REGION4_W"],[3,"REGION5_W"],[3,"REGION6_W"],[3,"REGION7_W"],[6,"R"],[6,"W"],[3,"RD_EN_W"],[3,"PROG_EN_W"],[3,"ERASE_EN_W"],[6,"R"],[6,"W"],[3,"BANK_W"],[6,"R"],[6,"W"],[3,"ERASE_EN0_W"],[3,"ERASE_EN1_W"],[6,"R"],[6,"W"],[3,"DONE_W"],[3,"ERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"PROG_W"],[3,"RD_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"ACTIVE0_W"],[6,"R"],[6,"W"],[3,"PRESCALE_W"],[3,"STEP_W"],[6,"R"],[6,"W"],[3,"V_W"],[6,"R"],[6,"W"],[3,"V_W"],[6,"R"],[6,"W"],[3,"V_W"],[6,"R"],[6,"W"],[3,"V_W"],[6,"R"],[6,"W"],[3,"IE0_W"],[6,"R"],[6,"W"],[3,"IS0_W"],[6,"R"],[6,"W"],[3,"T0_W"],[6,"W"],[3,"RegisterBlock"],[3,"KEY"],[3,"DATA_IN"],[3,"DATA_OUT"],[3,"KEY0_W"],[6,"W"],[3,"KEY1_W"],[6,"W"],[3,"KEY2_W"],[6,"W"],[3,"KEY3_W"],[6,"W"],[3,"KEY4_W"],[6,"W"],[3,"KEY5_W"],[6,"W"],[3,"KEY6_W"],[6,"W"],[3,"KEY7_W"],[6,"W"],[3,"DATA_IN0_W"],[6,"W"],[3,"DATA_IN1_W"],[6,"W"],[3,"DATA_IN2_W"],[6,"W"],[3,"DATA_IN3_W"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"MODE_W"],[3,"KEY_LEN_W"],[3,"MANUAL_START_TRIGGER_W"],[3,"FORCE_DATA_OVERWRITE_W"],[6,"R"],[6,"W"],[3,"START_W"],[3,"KEY_CLEAR_W"],[3,"DATA_IN_CLEAR_W"],[3,"DATA_OUT_CLEAR_W"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"KEY"],[3,"DIGEST"],[3,"KEY0_W"],[6,"W"],[3,"KEY1_W"],[6,"W"],[3,"KEY2_W"],[6,"W"],[3,"KEY3_W"],[6,"W"],[3,"KEY4_W"],[6,"W"],[3,"KEY5_W"],[6,"W"],[3,"KEY6_W"],[6,"W"],[3,"KEY7_W"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"HMAC_DONE_W"],[3,"FIFO_FULL_W"],[3,"HMAC_ERR_W"],[6,"R"],[6,"W"],[3,"HMAC_DONE_W"],[3,"FIFO_FULL_W"],[3,"HMAC_ERR_W"],[6,"R"],[6,"W"],[3,"HMAC_DONE_W"],[3,"FIFO_FULL_W"],[3,"HMAC_ERR_W"],[6,"W"],[3,"HMAC_EN_W"],[3,"SHA_EN_W"],[3,"ENDIAN_SWAP_W"],[3,"DIGEST_SWAP_W"],[6,"R"],[6,"W"],[3,"HASH_START_W"],[3,"HASH_PROCESS_W"],[6,"W"],[6,"R"],[6,"R"],[3,"SECRET_W"],[6,"W"],[6,"R"],[6,"R"],[3,"RegisterBlock"],[3,"IP"],[3,"LE"],[3,"IE0"],[6,"R"],[6,"R"],[3,"LE0_W"],[3,"LE1_W"],[3,"LE2_W"],[3,"LE3_W"],[3,"LE4_W"],[3,"LE5_W"],[3,"LE6_W"],[3,"LE7_W"],[3,"LE8_W"],[3,"LE9_W"],[3,"LE10_W"],[3,"LE11_W"],[3,"LE12_W"],[3,"LE13_W"],[3,"LE14_W"],[3,"LE15_W"],[3,"LE16_W"],[3,"LE17_W"],[3,"LE18_W"],[3,"LE19_W"],[3,"LE20_W"],[3,"LE21_W"],[3,"LE22_W"],[3,"LE23_W"],[3,"LE24_W"],[3,"LE25_W"],[3,"LE26_W"],[3,"LE27_W"],[3,"LE28_W"],[3,"LE29_W"],[3,"LE30_W"],[3,"LE31_W"],[6,"R"],[6,"W"],[3,"LE32_W"],[3,"LE33_W"],[3,"LE34_W"],[3,"LE35_W"],[3,"LE36_W"],[3,"LE37_W"],[3,"LE38_W"],[3,"LE39_W"],[3,"LE40_W"],[3,"LE41_W"],[3,"LE42_W"],[3,"LE43_W"],[3,"LE44_W"],[3,"LE45_W"],[3,"LE46_W"],[3,"LE47_W"],[3,"LE48_W"],[3,"LE49_W"],[3,"LE50_W"],[3,"LE51_W"],[3,"LE52_W"],[3,"LE53_W"],[3,"LE54_W"],[3,"LE55_W"],[3,"LE56_W"],[3,"LE57_W"],[3,"LE58_W"],[3,"LE59_W"],[3,"LE60_W"],[3,"LE61_W"],[3,"LE62_W"],[6,"R"],[6,"W"],[3,"E0_W"],[3,"E1_W"],[3,"E2_W"],[3,"E3_W"],[3,"E4_W"],[3,"E5_W"],[3,"E6_W"],[3,"E7_W"],[3,"E8_W"],[3,"E9_W"],[3,"E10_W"],[3,"E11_W"],[3,"E12_W"],[3,"E13_W"],[3,"E14_W"],[3,"E15_W"],[3,"E16_W"],[3,"E17_W"],[3,"E18_W"],[3,"E19_W"],[3,"E20_W"],[3,"E21_W"],[3,"E22_W"],[3,"E23_W"],[3,"E24_W"],[3,"E25_W"],[3,"E26_W"],[3,"E27_W"],[3,"E28_W"],[3,"E29_W"],[3,"E30_W"],[3,"E31_W"],[6,"R"],[6,"W"],[3,"E32_W"],[3,"E33_W"],[3,"E34_W"],[3,"E35_W"],[3,"E36_W"],[3,"E37_W"],[3,"E38_W"],[3,"E39_W"],[3,"E40_W"],[3,"E41_W"],[3,"E42_W"],[3,"E43_W"],[3,"E44_W"],[3,"E45_W"],[3,"E46_W"],[3,"E47_W"],[3,"E48_W"],[3,"E49_W"],[3,"E50_W"],[3,"E51_W"],[3,"E52_W"],[3,"E53_W"],[3,"E54_W"],[3,"E55_W"],[3,"E56_W"],[3,"E57_W"],[3,"E58_W"],[3,"E59_W"],[3,"E60_W"],[3,"E61_W"],[3,"E62_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"PERIPH_INSEL"],[3,"MIO_OUTSEL"],[3,"IN0_W"],[3,"IN1_W"],[3,"IN2_W"],[3,"IN3_W"],[3,"IN4_W"],[6,"R"],[6,"W"],[3,"IN5_W"],[3,"IN6_W"],[3,"IN7_W"],[3,"IN8_W"],[3,"IN9_W"],[6,"R"],[6,"W"],[3,"IN10_W"],[3,"IN11_W"],[3,"IN12_W"],[3,"IN13_W"],[3,"IN14_W"],[6,"R"],[6,"W"],[3,"IN15_W"],[3,"IN16_W"],[3,"IN17_W"],[3,"IN18_W"],[3,"IN19_W"],[6,"R"],[6,"W"],[3,"IN20_W"],[3,"IN21_W"],[3,"IN22_W"],[3,"IN23_W"],[3,"IN24_W"],[6,"R"],[6,"W"],[3,"IN25_W"],[3,"IN26_W"],[3,"IN27_W"],[3,"IN28_W"],[3,"IN29_W"],[6,"R"],[6,"W"],[3,"IN30_W"],[3,"IN31_W"],[6,"R"],[6,"W"],[3,"OUT0_W"],[3,"OUT1_W"],[3,"OUT2_W"],[3,"OUT3_W"],[3,"OUT4_W"],[6,"R"],[6,"W"],[3,"OUT5_W"],[3,"OUT6_W"],[3,"OUT7_W"],[3,"OUT8_W"],[3,"OUT9_W"],[6,"R"],[6,"W"],[3,"OUT10_W"],[3,"OUT11_W"],[3,"OUT12_W"],[3,"OUT13_W"],[3,"OUT14_W"],[6,"R"],[6,"W"],[3,"OUT15_W"],[3,"OUT16_W"],[3,"OUT17_W"],[3,"OUT18_W"],[3,"OUT19_W"],[6,"R"],[6,"W"],[3,"OUT20_W"],[3,"OUT21_W"],[3,"OUT22_W"],[3,"OUT23_W"],[3,"OUT24_W"],[6,"R"],[6,"W"],[3,"OUT25_W"],[3,"OUT26_W"],[3,"OUT27_W"],[3,"OUT28_W"],[3,"OUT29_W"],[6,"R"],[6,"W"],[3,"OUT30_W"],[3,"OUT31_W"],[6,"R"],[6,"W"],[3,"WEN_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"CLASSA_W"],[3,"CLASSB_W"],[3,"CLASSC_W"],[3,"CLASSD_W"],[6,"R"],[6,"W"],[3,"CLASSA_W"],[3,"CLASSB_W"],[3,"CLASSC_W"],[3,"CLASSD_W"],[6,"R"],[6,"W"],[3,"CLASSA_W"],[3,"CLASSB_W"],[3,"CLASSC_W"],[3,"CLASSD_W"],[6,"W"],[3,"EN_A0_W"],[3,"EN_A1_W"],[3,"EN_A2_W"],[3,"EN_A3_W"],[6,"R"],[6,"W"],[3,"CLASS_A0_W"],[3,"CLASS_A1_W"],[3,"CLASS_A2_W"],[3,"CLASS_A3_W"],[6,"R"],[6,"W"],[3,"A0_W"],[3,"A1_W"],[3,"A2_W"],[3,"A3_W"],[6,"R"],[6,"W"],[3,"EN_LA0_W"],[3,"EN_LA1_W"],[3,"EN_LA2_W"],[3,"EN_LA3_W"],[6,"R"],[6,"W"],[3,"CLASS_LA0_W"],[3,"CLASS_LA1_W"],[3,"CLASS_LA2_W"],[3,"CLASS_LA3_W"],[6,"R"],[6,"W"],[3,"LA0_W"],[3,"LA1_W"],[3,"LA2_W"],[3,"LA3_W"],[6,"R"],[6,"W"],[3,"EN_W"],[3,"LOCK_W"],[3,"EN_E0_W"],[3,"EN_E1_W"],[3,"EN_E2_W"],[3,"EN_E3_W"],[3,"MAP_E0_W"],[3,"MAP_E1_W"],[3,"MAP_E2_W"],[3,"MAP_E3_W"],[6,"R"],[6,"W"],[3,"EN_W"],[3,"LOCK_W"],[3,"EN_E0_W"],[3,"EN_E1_W"],[3,"EN_E2_W"],[3,"EN_E3_W"],[3,"MAP_E0_W"],[3,"MAP_E1_W"],[3,"MAP_E2_W"],[3,"MAP_E3_W"],[6,"R"],[6,"W"],[3,"EN_W"],[3,"LOCK_W"],[3,"EN_E0_W"],[3,"EN_E1_W"],[3,"EN_E2_W"],[3,"EN_E3_W"],[3,"MAP_E0_W"],[3,"MAP_E1_W"],[3,"MAP_E2_W"],[3,"MAP_E3_W"],[6,"R"],[6,"W"],[3,"EN_W"],[3,"LOCK_W"],[3,"EN_E0_W"],[3,"EN_E1_W"],[3,"EN_E2_W"],[3,"EN_E3_W"],[3,"MAP_E0_W"],[3,"MAP_E1_W"],[3,"MAP_E2_W"],[3,"MAP_E3_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"ESC0_W"],[3,"ESC1_W"],[3,"ESC2_W"],[3,"ESC3_W"],[6,"R"],[6,"W"],[3,"ESC0_W"],[3,"ESC1_W"],[3,"ESC2_W"],[3,"ESC3_W"],[6,"R"],[6,"W"],[3,"ESC0_W"],[3,"ESC1_W"],[3,"ESC2_W"],[3,"ESC3_W"],[6,"W"],[3,"UART"],[3,"GPIO"],[3,"SPI_DEVICE"],[3,"FLASH_CTRL"],[3,"RV_TIMER"],[3,"AES"],[3,"HMAC"],[3,"RV_PLIC"],[3,"PINMUX"],[3,"ALERT_HANDLER"],[3,"NMI_GEN"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"],[6,"CTRL"],[6,"WDATA"],[6,"FIFO_CTRL"],[6,"OVRD"],[6,"TIMEOUT_CTRL"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"],[6,"DIRECT_OUT"],[6,"MASKED_OUT_LOWER"],[6,"MASKED_OUT_UPPER"],[6,"DIRECT_OE"],[6,"MASKED_OE_LOWER"],[6,"MASKED_OE_UPPER"],[6,"INTR_CTRL_EN_RISING"],[6,"INTR_CTRL_EN_FALLING"],[6,"INTR_CTRL_EN_LVLHIGH"],[6,"INTR_CTRL_EN_LVLLOW"],[6,"CTRL_EN_INPUT_FILTER"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"],[6,"CONTROL"],[6,"CFG"],[6,"FIFO_LEVEL"],[6,"RXF_PTR"],[6,"TXF_PTR"],[6,"RXF_ADDR"],[6,"TXF_ADDR"],[6,"MP_REGION_CFG0"],[6,"MP_REGION_CFG1"],[6,"MP_REGION_CFG2"],[6,"MP_REGION_CFG3"],[6,"MP_REGION_CFG4"],[6,"MP_REGION_CFG5"],[6,"MP_REGION_CFG6"],[6,"MP_REGION_CFG7"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"],[6,"CONTROL"],[6,"ADDR"],[6,"REGION_CFG_REGWEN"],[6,"DEFAULT_REGION"],[6,"BANK_CFG_REGWEN"],[6,"MP_BANK_CFG"],[6,"OP_STATUS"],[6,"SCRATCH"],[6,"FIFO_LVL"],[6,"CTRL"],[6,"CFG0"],[6,"TIMER_V_LOWER0"],[6,"TIMER_V_UPPER0"],[6,"COMPARE_LOWER0_0"],[6,"COMPARE_UPPER0_0"],[6,"INTR_ENABLE0"],[6,"INTR_STATE0"],[6,"INTR_TEST0"],[6,"KEY0"],[6,"KEY1"],[6,"KEY2"],[6,"KEY3"],[6,"KEY4"],[6,"KEY5"],[6,"KEY6"],[6,"KEY7"],[6,"DATA_IN0"],[6,"DATA_IN1"],[6,"DATA_IN2"],[6,"DATA_IN3"],[6,"CTRL"],[6,"TRIGGER"],[6,"KEY0"],[6,"KEY1"],[6,"KEY2"],[6,"KEY3"],[6,"KEY4"],[6,"KEY5"],[6,"KEY6"],[6,"KEY7"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"],[6,"CFG"],[6,"CMD"],[6,"WIPE_SECRET"],[6,"LE0"],[6,"LE1"],[6,"IE00"],[6,"IE01"],[6,"PRIO0"],[6,"PRIO1"],[6,"PRIO2"],[6,"PRIO3"],[6,"PRIO4"],[6,"PRIO5"],[6,"PRIO6"],[6,"PRIO7"],[6,"PRIO8"],[6,"PRIO9"],[6,"PRIO10"],[6,"PRIO11"],[6,"PRIO12"],[6,"PRIO13"],[6,"PRIO14"],[6,"PRIO15"],[6,"PRIO16"],[6,"PRIO17"],[6,"PRIO18"],[6,"PRIO19"],[6,"PRIO20"],[6,"PRIO21"],[6,"PRIO22"],[6,"PRIO23"],[6,"PRIO24"],[6,"PRIO25"],[6,"PRIO26"],[6,"PRIO27"],[6,"PRIO28"],[6,"PRIO29"],[6,"PRIO30"],[6,"PRIO31"],[6,"PRIO32"],[6,"PRIO33"],[6,"PRIO34"],[6,"PRIO35"],[6,"PRIO36"],[6,"PRIO37"],[6,"PRIO38"],[6,"PRIO39"],[6,"PRIO40"],[6,"PRIO41"],[6,"PRIO42"],[6,"PRIO43"],[6,"PRIO44"],[6,"PRIO45"],[6,"PRIO46"],[6,"PRIO47"],[6,"PRIO48"],[6,"PRIO49"],[6,"PRIO50"],[6,"PRIO51"],[6,"PRIO52"],[6,"PRIO53"],[6,"PRIO54"],[6,"PRIO55"],[6,"PRIO56"],[6,"PRIO57"],[6,"PRIO58"],[6,"PRIO59"],[6,"PRIO60"],[6,"PRIO61"],[6,"PRIO62"],[6,"THRESHOLD0"],[6,"CC0"],[6,"MSIP0"],[6,"PERIPH_INSEL0"],[6,"PERIPH_INSEL1"],[6,"PERIPH_INSEL2"],[6,"PERIPH_INSEL3"],[6,"PERIPH_INSEL4"],[6,"PERIPH_INSEL5"],[6,"PERIPH_INSEL6"],[6,"MIO_OUTSEL0"],[6,"MIO_OUTSEL1"],[6,"MIO_OUTSEL2"],[6,"MIO_OUTSEL3"],[6,"MIO_OUTSEL4"],[6,"MIO_OUTSEL5"],[6,"MIO_OUTSEL6"],[6,"REGEN"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"],[6,"REGEN"],[6,"PING_TIMEOUT_CYC"],[6,"ALERT_EN"],[6,"ALERT_CLASS"],[6,"ALERT_CAUSE"],[6,"LOC_ALERT_EN"],[6,"LOC_ALERT_CLASS"],[6,"LOC_ALERT_CAUSE"],[6,"CLASSA_CTRL"],[6,"CLASSA_CLREN"],[6,"CLASSA_CLR"],[6,"CLASSA_ACCUM_THRESH"],[6,"CLASSA_TIMEOUT_CYC"],[6,"CLASSA_PHASE0_CYC"],[6,"CLASSA_PHASE1_CYC"],[6,"CLASSA_PHASE2_CYC"],[6,"CLASSA_PHASE3_CYC"],[6,"CLASSB_CTRL"],[6,"CLASSB_CLREN"],[6,"CLASSB_CLR"],[6,"CLASSB_ACCUM_THRESH"],[6,"CLASSB_TIMEOUT_CYC"],[6,"CLASSB_PHASE0_CYC"],[6,"CLASSB_PHASE1_CYC"],[6,"CLASSB_PHASE2_CYC"],[6,"CLASSB_PHASE3_CYC"],[6,"CLASSC_CTRL"],[6,"CLASSC_CLREN"],[6,"CLASSC_CLR"],[6,"CLASSC_ACCUM_THRESH"],[6,"CLASSC_TIMEOUT_CYC"],[6,"CLASSC_PHASE0_CYC"],[6,"CLASSC_PHASE1_CYC"],[6,"CLASSC_PHASE2_CYC"],[6,"CLASSC_PHASE3_CYC"],[6,"CLASSD_CTRL"],[6,"CLASSD_CLREN"],[6,"CLASSD_CLR"],[6,"CLASSD_ACCUM_THRESH"],[6,"CLASSD_TIMEOUT_CYC"],[6,"CLASSD_PHASE0_CYC"],[6,"CLASSD_PHASE1_CYC"],[6,"CLASSD_PHASE2_CYC"],[6,"CLASSD_PHASE3_CYC"],[6,"INTR_STATE"],[6,"INTR_ENABLE"],[6,"INTR_TEST"]]};
searchIndex["riscv"] = {"doc":"Low level access to RISC-V processors","i":[[0,"asm","riscv","Assembly instructions",null,null],[5,"ebreak","riscv::asm","`EBREAK` instruction wrapper",null,[[]]],[5,"wfi","","`WFI` instruction wrapper",null,[[]]],[5,"sfence_vma_all","","`SFENCE.VMA` instruction wrapper (all address spaces and…",null,[[]]],[5,"sfence_vma","","`SFENCE.VMA` instruction wrapper",null,[[["usize"]]]],[0,"interrupt","riscv","Interrupts",null,null],[3,"CriticalSection","riscv::interrupt","Critical section token",null,null],[3,"Mutex","","A \"mutex\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[["self"]],["u8"]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure `f` in an interrupt-free context.",null,[[["f"]],["r"]]],[0,"register","riscv","RISC-V CSR's",null,null],[0,"fcsr","riscv::register","Floating-point control and status register",null,null],[3,"FCSR","riscv::register::fcsr","Floating-point control and status register",null,null],[3,"Flags","","Accrued Exception Flags",null,null],[4,"Flag","","Accrued Exception Flag",null,null],[13,"NX","","Inexact",1,null],[13,"UF","","Underflow",1,null],[13,"OF","","Overflow",1,null],[13,"DZ","","Divide by Zero",1,null],[13,"NV","","Invalid Operation",1,null],[4,"RoundingMode","","Rounding Mode",null,null],[13,"RoundToNearestEven","","",2,null],[13,"RoundTowardsZero","","",2,null],[13,"RoundDown","","",2,null],[13,"RoundUp","","",2,null],[13,"RoundToNearestMaxMagnitude","","",2,null],[13,"Invalid","","",2,null],[5,"read","","Reads the CSR",null,[[],["fcsr"]]],[5,"set_rounding_mode","","Writes the CSR",null,[[["roundingmode"]]]],[5,"clear_flags","","Resets `fflags` field bits",null,[[]]],[5,"clear_flag","","Resets `fflags` field bit",null,[[["flag"]]]],[11,"nx","","Inexact",3,[[["self"]],["bool"]]],[11,"uf","","Underflow",3,[[["self"]],["bool"]]],[11,"of","","Overflow",3,[[["self"]],["bool"]]],[11,"dz","","Divide by Zero",3,[[["self"]],["bool"]]],[11,"nv","","Invalid Operation",3,[[["self"]],["bool"]]],[11,"bits","","Returns the contents of the register as raw bits",4,[[["self"]],["u32"]]],[11,"fflags","","Accrued Exception Flags",4,[[["self"]],["flags"]]],[11,"frm","","Rounding Mode",4,[[["self"]],["roundingmode"]]],[0,"time","riscv::register","time register",null,null],[5,"read","riscv::register::time","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter3","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter3","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter4","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter4","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter5","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter5","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter6","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter6","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter7","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter7","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter8","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter8","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter9","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter9","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter10","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter10","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter11","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter11","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter12","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter12","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter13","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter13","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter14","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter14","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter15","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter15","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter16","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter16","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter17","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter17","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter18","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter18","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter19","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter19","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter20","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter20","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter21","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter21","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter22","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter22","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter23","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter23","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter24","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter24","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter25","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter25","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter26","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter26","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter27","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter27","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter28","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter28","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter29","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter29","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter30","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter30","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter31","riscv::register","Performance-monitoring counter",null,null],[5,"read","riscv::register::hpmcounter31","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"hpmcounter3h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter3h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter4h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter4h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter5h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter5h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter6h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter6h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter7h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter7h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter8h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter8h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter9h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter9h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter10h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter10h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter11h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter11h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter12h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter12h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter13h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter13h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter14h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter14h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter15h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter15h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter16h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter16h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter17h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter17h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter18h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter18h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter19h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter19h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter20h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter20h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter21h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter21h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter22h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter22h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter23h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter23h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter24h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter24h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter25h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter25h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter26h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter26h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter27h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter27h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter28h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter28h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter29h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter29h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter30h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter30h","Reads the CSR",null,[[],["usize"]]],[0,"hpmcounter31h","riscv::register","Upper 32 bits of performance-monitoring counter (RV32I only)",null,null],[5,"read","riscv::register::hpmcounter31h","Reads the CSR",null,[[],["usize"]]],[0,"timeh","riscv::register","timeh register",null,null],[5,"read","riscv::register::timeh","Reads the CSR",null,[[],["usize"]]],[0,"sstatus","riscv::register","sstatus register",null,null],[3,"Sstatus","riscv::register::sstatus","Supervisor Status Register",null,null],[4,"SPP","","Supervisor Previous Privilege Mode",null,null],[13,"Supervisor","","",5,null],[13,"User","","",5,null],[4,"FS","","Floating-point unit Status",null,null],[13,"Off","","",6,null],[13,"Initial","","",6,null],[13,"Clean","","",6,null],[13,"Dirty","","",6,null],[5,"read","","Reads the CSR",null,[[],["sstatus"]]],[5,"set_uie","","User Interrupt Enable",null,[[]]],[5,"clear_uie","","User Interrupt Enable",null,[[]]],[5,"set_sie","","Supervisor Interrupt Enable",null,[[]]],[5,"clear_sie","","Supervisor Interrupt Enable",null,[[]]],[5,"set_upie","","User Previous Interrupt Enable",null,[[]]],[5,"set_spie","","Supervisor Previous Interrupt Enable",null,[[]]],[5,"set_mxr","","Make eXecutable Readable",null,[[]]],[5,"clear_mxr","","Make eXecutable Readable",null,[[]]],[5,"set_sum","","Permit Supervisor User Memory access",null,[[]]],[5,"clear_sum","","Permit Supervisor User Memory access",null,[[]]],[11,"uie","","User Interrupt Enable",7,[[["self"]],["bool"]]],[11,"sie","","Supervisor Interrupt Enable",7,[[["self"]],["bool"]]],[11,"upie","","User Previous Interrupt Enable",7,[[["self"]],["bool"]]],[11,"spie","","Supervisor Previous Interrupt Enable",7,[[["self"]],["bool"]]],[11,"spp","","Supervisor Previous Privilege Mode",7,[[["self"]],["spp"]]],[11,"fs","","The status of the floating-point unit",7,[[["self"]],["fs"]]],[11,"xs","","The status of additional user-mode extensions and…",7,[[["self"]],["fs"]]],[11,"sum","","Permit Supervisor User Memory access",7,[[["self"]],["bool"]]],[11,"mxr","","Make eXecutable Readable",7,[[["self"]],["bool"]]],[11,"sd","","Whether either the FS field or XS field signals the…",7,[[["self"]],["bool"]]],[0,"sie","riscv::register","sie register",null,null],[3,"Sie","riscv::register::sie","sie register",null,null],[5,"read","","Reads the CSR",null,[[],["sie"]]],[5,"set_usoft","","User Software Interrupt Enable",null,[[]]],[5,"clear_usoft","","User Software Interrupt Enable",null,[[]]],[5,"set_ssoft","","Supervisor Software Interrupt Enable",null,[[]]],[5,"clear_ssoft","","Supervisor Software Interrupt Enable",null,[[]]],[5,"set_utimer","","User Timer Interrupt Enable",null,[[]]],[5,"clear_utimer","","User Timer Interrupt Enable",null,[[]]],[5,"set_stimer","","Supervisor Timer Interrupt Enable",null,[[]]],[5,"clear_stimer","","Supervisor Timer Interrupt Enable",null,[[]]],[5,"set_uext","","User External Interrupt Enable",null,[[]]],[5,"clear_uext","","User External Interrupt Enable",null,[[]]],[5,"set_sext","","Supervisor External Interrupt Enable",null,[[]]],[5,"clear_sext","","Supervisor External Interrupt Enable",null,[[]]],[11,"bits","","Returns the contents of the register as raw bits",8,[[["self"]],["usize"]]],[11,"usoft","","User Software Interrupt Enable",8,[[["self"]],["bool"]]],[11,"ssoft","","Supervisor Software Interrupt Enable",8,[[["self"]],["bool"]]],[11,"utimer","","User Timer Interrupt Enable",8,[[["self"]],["bool"]]],[11,"stimer","","Supervisor Timer Interrupt Enable",8,[[["self"]],["bool"]]],[11,"uext","","User External Interrupt Enable",8,[[["self"]],["bool"]]],[11,"sext","","Supervisor External Interrupt Enable",8,[[["self"]],["bool"]]],[0,"stvec","riscv::register","stvec register",null,null],[3,"Stvec","riscv::register::stvec","stvec register",null,null],[4,"TrapMode","","Trap mode",null,null],[13,"Direct","","",9,null],[13,"Vectored","","",9,null],[5,"read","","Reads the CSR",null,[[],["stvec"]]],[5,"write","","Writes the CSR",null,[[["usize"],["trapmode"]]]],[11,"bits","","Returns the contents of the register as raw bits",10,[[["self"]],["usize"]]],[11,"address","","Returns the trap-vector base-address",10,[[["self"]],["usize"]]],[11,"trap_mode","","Returns the trap-vector mode",10,[[["self"]],["trapmode"]]],[0,"sscratch","riscv::register","sscratch register",null,null],[5,"read","riscv::register::sscratch","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"sepc","riscv::register","sepc register",null,null],[5,"read","riscv::register::sepc","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"scause","riscv::register","scause register",null,null],[3,"Scause","riscv::register::scause","scause register",null,null],[4,"Trap","","Trap Cause",null,null],[13,"Interrupt","","",11,null],[13,"Exception","","",11,null],[4,"Interrupt","","Interrupt",null,null],[13,"UserSoft","","",12,null],[13,"SupervisorSoft","","",12,null],[13,"UserTimer","","",12,null],[13,"SupervisorTimer","","",12,null],[13,"UserExternal","","",12,null],[13,"SupervisorExternal","","",12,null],[13,"Unknown","","",12,null],[4,"Exception","","Exception",null,null],[13,"InstructionMisaligned","","",13,null],[13,"InstructionFault","","",13,null],[13,"IllegalInstruction","","",13,null],[13,"Breakpoint","","",13,null],[13,"LoadFault","","",13,null],[13,"StoreMisaligned","","",13,null],[13,"StoreFault","","",13,null],[13,"UserEnvCall","","",13,null],[13,"InstructionPageFault","","",13,null],[13,"LoadPageFault","","",13,null],[13,"StorePageFault","","",13,null],[13,"Unknown","","",13,null],[5,"read","","Reads the CSR",null,[[],["scause"]]],[11,"from","","",12,[[["usize"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"bits","","Returns the contents of the register as raw bits",14,[[["self"]],["usize"]]],[11,"code","","Returns the code field",14,[[["self"]],["usize"]]],[11,"cause","","Trap Cause",14,[[["self"]],["trap"]]],[11,"is_interrupt","","Is trap cause an interrupt.",14,[[["self"]],["bool"]]],[11,"is_exception","","Is trap cause an exception.",14,[[["self"]],["bool"]]],[0,"stval","riscv::register","stval register",null,null],[5,"read","riscv::register::stval","Reads the CSR",null,[[],["usize"]]],[0,"sip","riscv::register","sip register",null,null],[3,"Sip","riscv::register::sip","sip register",null,null],[5,"read","","Reads the CSR",null,[[],["sip"]]],[11,"bits","","Returns the contents of the register as raw bits",15,[[["self"]],["usize"]]],[11,"usoft","","User Software Interrupt Pending",15,[[["self"]],["bool"]]],[11,"ssoft","","Supervisor Software Interrupt Pending",15,[[["self"]],["bool"]]],[11,"utimer","","User Timer Interrupt Pending",15,[[["self"]],["bool"]]],[11,"stimer","","Supervisor Timer Interrupt Pending",15,[[["self"]],["bool"]]],[11,"uext","","User External Interrupt Pending",15,[[["self"]],["bool"]]],[11,"sext","","Supervisor External Interrupt Pending",15,[[["self"]],["bool"]]],[0,"satp","riscv::register","satp register",null,null],[3,"Satp","riscv::register::satp","satp register",null,null],[5,"read","","Reads the CSR",null,[[],["satp"]]],[11,"bits","","Returns the contents of the register as raw bits",16,[[["self"]],["usize"]]],[0,"mvendorid","riscv::register","mvendorid register",null,null],[3,"Mvendorid","riscv::register::mvendorid","mvendorid register",null,null],[5,"read","","Reads the CSR",null,[[],[["option",["mvendorid"]],["mvendorid"]]]],[11,"bits","","Returns the contents of the register as raw bits",17,[[["self"]],["usize"]]],[11,"jedec_manufacturer","","Returns the JEDEC manufacturer ID",17,[[["self"]],["usize"]]],[0,"marchid","riscv::register","marchid register",null,null],[3,"Marchid","riscv::register::marchid","marchid register",null,null],[5,"read","","Reads the CSR",null,[[],[["marchid"],["option",["marchid"]]]]],[11,"bits","","Returns the contents of the register as raw bits",18,[[["self"]],["usize"]]],[0,"mimpid","riscv::register","mimpid register",null,null],[3,"Mimpid","riscv::register::mimpid","mimpid register",null,null],[5,"read","","Reads the CSR",null,[[],[["mimpid"],["option",["mimpid"]]]]],[11,"bits","","Returns the contents of the register as raw bits",19,[[["self"]],["usize"]]],[0,"mhartid","riscv::register","mhartid register",null,null],[5,"read","riscv::register::mhartid","Reads the CSR",null,[[],["usize"]]],[0,"mstatus","riscv::register","mstatus register",null,null],[3,"Mstatus","riscv::register::mstatus","mstatus register",null,null],[4,"XS","","Additional extension state",null,null],[13,"AllOff","","All off",20,null],[13,"NoneDirtyOrClean","","None dirty or clean, some on",20,null],[13,"NoneDirtySomeClean","","None dirty, some clean",20,null],[13,"SomeDirty","","Some dirty",20,null],[4,"FS","","Floating-point extension state",null,null],[13,"Off","","",21,null],[13,"Initial","","",21,null],[13,"Clean","","",21,null],[13,"Dirty","","",21,null],[4,"MPP","","Machine Previous Privilege Mode",null,null],[13,"Machine","","",22,null],[13,"Supervisor","","",22,null],[13,"User","","",22,null],[4,"SPP","","Supervisor Previous Privilege Mode",null,null],[13,"Supervisor","","",23,null],[13,"User","","",23,null],[5,"read","","Reads the CSR",null,[[],["mstatus"]]],[5,"set_uie","","User Interrupt Enable",null,[[]]],[5,"clear_uie","","User Interrupt Enable",null,[[]]],[5,"set_sie","","Supervisor Interrupt Enable",null,[[]]],[5,"clear_sie","","Supervisor Interrupt Enable",null,[[]]],[5,"set_mie","","Machine Interrupt Enable",null,[[]]],[5,"clear_mie","","Machine Interrupt Enable",null,[[]]],[5,"set_upie","","User Previous Interrupt Enable",null,[[]]],[5,"set_spie","","Supervisor Previous Interrupt Enable",null,[[]]],[5,"set_mpie","","Machine Previous Interrupt Enable",null,[[]]],[5,"set_spp","","Supervisor Previous Privilege Mode",null,[[["spp"]]]],[5,"set_mpp","","Machine Previous Privilege Mode",null,[[["mpp"]]]],[5,"set_fs","","Floating-point extension state",null,[[["fs"]]]],[11,"uie","","User Interrupt Enable",24,[[["self"]],["bool"]]],[11,"sie","","Supervisor Interrupt Enable",24,[[["self"]],["bool"]]],[11,"mie","","Machine Interrupt Enable",24,[[["self"]],["bool"]]],[11,"upie","","User Previous Interrupt Enable",24,[[["self"]],["bool"]]],[11,"spie","","Supervisor Previous Interrupt Enable",24,[[["self"]],["bool"]]],[11,"mpie","","User Previous Interrupt Enable",24,[[["self"]],["bool"]]],[11,"spp","","Supervisor Previous Privilege Mode",24,[[["self"]],["spp"]]],[11,"mpp","","Machine Previous Privilege Mode",24,[[["self"]],["mpp"]]],[11,"fs","","Floating-point extension state",24,[[["self"]],["fs"]]],[11,"xs","","Additional extension state",24,[[["self"]],["xs"]]],[0,"misa","riscv::register","misa register",null,null],[3,"Misa","riscv::register::misa","misa register",null,null],[4,"MXL","","Machine XLEN",null,null],[13,"XLEN32","","",25,null],[13,"XLEN64","","",25,null],[13,"XLEN128","","",25,null],[5,"read","","Reads the CSR",null,[[],[["option",["misa"]],["misa"]]]],[11,"bits","","Returns the contents of the register as raw bits",26,[[["self"]],["usize"]]],[11,"mxl","","Returns the machine xlen.",26,[[["self"]],["mxl"]]],[11,"has_extension","","Returns true when the atomic extension is implemented.",26,[[["self"],["char"]],["bool"]]],[0,"mie","riscv::register","mie register",null,null],[3,"Mie","riscv::register::mie","mie register",null,null],[5,"read","","Reads the CSR",null,[[],["mie"]]],[5,"set_usoft","","User Software Interrupt Enable",null,[[]]],[5,"clear_usoft","","User Software Interrupt Enable",null,[[]]],[5,"set_ssoft","","Supervisor Software Interrupt Enable",null,[[]]],[5,"clear_ssoft","","Supervisor Software Interrupt Enable",null,[[]]],[5,"set_msoft","","Machine Software Interrupt Enable",null,[[]]],[5,"clear_msoft","","Machine Software Interrupt Enable",null,[[]]],[5,"set_utimer","","User Timer Interrupt Enable",null,[[]]],[5,"clear_utimer","","User Timer Interrupt Enable",null,[[]]],[5,"set_stimer","","Supervisor Timer Interrupt Enable",null,[[]]],[5,"clear_stimer","","Supervisor Timer Interrupt Enable",null,[[]]],[5,"set_mtimer","","Machine Timer Interrupt Enable",null,[[]]],[5,"clear_mtimer","","Machine Timer Interrupt Enable",null,[[]]],[5,"set_uext","","User External Interrupt Enable",null,[[]]],[5,"clear_uext","","User External Interrupt Enable",null,[[]]],[5,"set_sext","","Supervisor External Interrupt Enable",null,[[]]],[5,"clear_sext","","Supervisor External Interrupt Enable",null,[[]]],[5,"set_mext","","Machine External Interrupt Enable",null,[[]]],[5,"clear_mext","","Machine External Interrupt Enable",null,[[]]],[11,"bits","","Returns the contents of the register as raw bits",27,[[["self"]],["usize"]]],[11,"usoft","","User Software Interrupt Enable",27,[[["self"]],["bool"]]],[11,"ssoft","","Supervisor Software Interrupt Enable",27,[[["self"]],["bool"]]],[11,"msoft","","Machine Software Interrupt Enable",27,[[["self"]],["bool"]]],[11,"utimer","","User Timer Interrupt Enable",27,[[["self"]],["bool"]]],[11,"stimer","","Supervisor Timer Interrupt Enable",27,[[["self"]],["bool"]]],[11,"mtimer","","Machine Timer Interrupt Enable",27,[[["self"]],["bool"]]],[11,"uext","","User External Interrupt Enable",27,[[["self"]],["bool"]]],[11,"sext","","Supervisor External Interrupt Enable",27,[[["self"]],["bool"]]],[11,"mext","","Machine External Interrupt Enable",27,[[["self"]],["bool"]]],[0,"mtvec","riscv::register","mtvec register",null,null],[3,"Mtvec","riscv::register::mtvec","mtvec register",null,null],[4,"TrapMode","","Trap mode",null,null],[13,"Direct","","",28,null],[13,"Vectored","","",28,null],[5,"read","","Reads the CSR",null,[[],["mtvec"]]],[5,"write","","Writes the CSR",null,[[["usize"],["trapmode"]]]],[11,"bits","","Returns the contents of the register as raw bits",29,[[["self"]],["usize"]]],[11,"address","","Returns the trap-vector base-address",29,[[["self"]],["usize"]]],[11,"trap_mode","","Returns the trap-vector mode",29,[[["self"]],["trapmode"]]],[0,"mscratch","riscv::register","mscratch register",null,null],[5,"read","riscv::register::mscratch","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mepc","riscv::register","mepc register",null,null],[5,"read","riscv::register::mepc","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mcause","riscv::register","mcause register",null,null],[3,"Mcause","riscv::register::mcause","mcause register",null,null],[4,"Trap","","Trap Cause",null,null],[13,"Interrupt","","",30,null],[13,"Exception","","",30,null],[4,"Interrupt","","Interrupt",null,null],[13,"UserSoft","","",31,null],[13,"SupervisorSoft","","",31,null],[13,"MachineSoft","","",31,null],[13,"UserTimer","","",31,null],[13,"SupervisorTimer","","",31,null],[13,"MachineTimer","","",31,null],[13,"UserExternal","","",31,null],[13,"SupervisorExternal","","",31,null],[13,"MachineExternal","","",31,null],[13,"Unknown","","",31,null],[4,"Exception","","Exception",null,null],[13,"InstructionMisaligned","","",32,null],[13,"InstructionFault","","",32,null],[13,"IllegalInstruction","","",32,null],[13,"Breakpoint","","",32,null],[13,"LoadMisaligned","","",32,null],[13,"LoadFault","","",32,null],[13,"StoreMisaligned","","",32,null],[13,"StoreFault","","",32,null],[13,"UserEnvCall","","",32,null],[13,"SupervisorEnvCall","","",32,null],[13,"MachineEnvCall","","",32,null],[13,"InstructionPageFault","","",32,null],[13,"LoadPageFault","","",32,null],[13,"StorePageFault","","",32,null],[13,"Unknown","","",32,null],[5,"read","","Reads the CSR",null,[[],["mcause"]]],[11,"from","","",31,[[["usize"]],["self"]]],[11,"from","","",32,[[["usize"]],["self"]]],[11,"bits","","Returns the contents of the register as raw bits",33,[[["self"]],["usize"]]],[11,"code","","Returns the code field",33,[[["self"]],["usize"]]],[11,"cause","","Trap Cause",33,[[["self"]],["trap"]]],[11,"is_interrupt","","Is trap cause an interrupt.",33,[[["self"]],["bool"]]],[11,"is_exception","","Is trap cause an exception.",33,[[["self"]],["bool"]]],[0,"mtval","riscv::register","mtval register",null,null],[5,"read","riscv::register::mtval","Reads the CSR",null,[[],["usize"]]],[0,"mip","riscv::register","mip register",null,null],[3,"Mip","riscv::register::mip","mip register",null,null],[5,"read","","Reads the CSR",null,[[],["mip"]]],[11,"bits","","Returns the contents of the register as raw bits",34,[[["self"]],["usize"]]],[11,"usoft","","User Software Interrupt Pending",34,[[["self"]],["bool"]]],[11,"ssoft","","Supervisor Software Interrupt Pending",34,[[["self"]],["bool"]]],[11,"msoft","","Machine Software Interrupt Pending",34,[[["self"]],["bool"]]],[11,"utimer","","User Timer Interrupt Pending",34,[[["self"]],["bool"]]],[11,"stimer","","Supervisor Timer Interrupt Pending",34,[[["self"]],["bool"]]],[11,"mtimer","","Machine Timer Interrupt Pending",34,[[["self"]],["bool"]]],[11,"uext","","User External Interrupt Pending",34,[[["self"]],["bool"]]],[11,"sext","","Supervisor External Interrupt Pending",34,[[["self"]],["bool"]]],[11,"mext","","Machine External Interrupt Pending",34,[[["self"]],["bool"]]],[0,"pmpcfg0","riscv::register","Physical memory protection configuration",null,null],[5,"read","riscv::register::pmpcfg0","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpcfg1","riscv::register","Physical memory protection configuration, RV32 only",null,null],[5,"read","riscv::register::pmpcfg1","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpcfg2","riscv::register","Physical memory protection configuration",null,null],[5,"read","riscv::register::pmpcfg2","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpcfg3","riscv::register","Physical memory protection configuration, RV32 only",null,null],[5,"read","riscv::register::pmpcfg3","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr0","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr0","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr1","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr1","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr2","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr2","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr3","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr3","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr4","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr4","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr5","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr5","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr6","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr6","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr7","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr7","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr8","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr8","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr9","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr9","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr10","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr10","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr11","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr11","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr12","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr12","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr13","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr13","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr14","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr14","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"pmpaddr15","riscv::register","Physical memory protection address register",null,null],[5,"read","riscv::register::pmpaddr15","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mcycle","riscv::register","mcycle register",null,null],[5,"read","riscv::register::mcycle","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"minstret","riscv::register","minstret register",null,null],[5,"read","riscv::register::minstret","Reads the CSR",null,[[],["usize"]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter3","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter3","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter4","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter4","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter5","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter5","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter6","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter6","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter7","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter7","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter8","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter8","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter9","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter9","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter10","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter10","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter11","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter11","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter12","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter12","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter13","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter13","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter14","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter14","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter15","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter15","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter16","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter16","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter17","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter17","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter18","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter18","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter19","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter19","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter20","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter20","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter21","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter21","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter22","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter22","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter23","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter23","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter24","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter24","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter25","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter25","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter26","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter26","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter27","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter27","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter28","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter28","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter29","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter29","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter30","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter30","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter31","riscv::register","Machine performance-monitoring counter",null,null],[5,"read","riscv::register::mhpmcounter31","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[5,"read64","","Reads the CSR as a 64-bit value",null,[[],["u64"]]],[0,"mhpmcounter3h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter3h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter4h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter4h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter5h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter5h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter6h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter6h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter7h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter7h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter8h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter8h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter9h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter9h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter10h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter10h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter11h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter11h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter12h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter12h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter13h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter13h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter14h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter14h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter15h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter15h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter16h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter16h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter17h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter17h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter18h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter18h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter19h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter19h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter20h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter20h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter21h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter21h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter22h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter22h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter23h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter23h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter24h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter24h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter25h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter25h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter26h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter26h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter27h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter27h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter28h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter28h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter29h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter29h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter30h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter30h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmcounter31h","riscv::register","Upper 32 bits of machine performance-monitoring counter…",null,null],[5,"read","riscv::register::mhpmcounter31h","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mcycleh","riscv::register","mcycleh register",null,null],[5,"read","riscv::register::mcycleh","Reads the CSR",null,[[],["usize"]]],[0,"minstreth","riscv::register","minstreth register",null,null],[5,"read","riscv::register::minstreth","Reads the CSR",null,[[],["usize"]]],[0,"mhpmevent3","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent3","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent4","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent4","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent5","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent5","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent6","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent6","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent7","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent7","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent8","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent8","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent9","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent9","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent10","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent10","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent11","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent11","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent12","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent12","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent13","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent13","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent14","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent14","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent15","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent15","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent16","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent16","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent17","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent17","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent18","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent18","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent19","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent19","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent20","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent20","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent21","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent21","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent22","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent22","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent23","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent23","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent24","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent24","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent25","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent25","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent26","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent26","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent27","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent27","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent28","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent28","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent29","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent29","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent30","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent30","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[0,"mhpmevent31","riscv::register","Machine performance-monitoring event selector",null,null],[5,"read","riscv::register::mhpmevent31","Reads the CSR",null,[[],["usize"]]],[5,"write","","Writes the CSR",null,[[["usize"]]]],[11,"from","riscv::interrupt","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","riscv::register::fcsr","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","riscv::register::sstatus","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","riscv::register::sie","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","riscv::register::stvec","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","riscv::register::scause","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","riscv::register::sip","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","riscv::register::satp","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","riscv::register::mvendorid","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","riscv::register::marchid","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","riscv::register::mimpid","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","riscv::register::mstatus","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","riscv::register::misa","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","riscv::register::mie","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","riscv::register::mtvec","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","riscv::register::mcause","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","riscv::register::mip","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"fmt","riscv::register::fcsr","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::sstatus","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::sie","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::stvec","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::scause","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::sip","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::satp","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mvendorid","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::marchid","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mimpid","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mstatus","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::misa","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mie","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mtvec","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mcause","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","riscv::register::mip","",34,[[["formatter"],["self"]],["result"]]],[11,"eq","riscv::register::fcsr","",2,[[["self"],["roundingmode"]],["bool"]]],[11,"eq","riscv::register::sstatus","",5,[[["self"],["spp"]],["bool"]]],[11,"eq","","",6,[[["fs"],["self"]],["bool"]]],[11,"eq","riscv::register::stvec","",9,[[["self"],["trapmode"]],["bool"]]],[11,"eq","riscv::register::scause","",11,[[["trap"],["self"]],["bool"]]],[11,"ne","","",11,[[["trap"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["interrupt"]],["bool"]]],[11,"eq","","",13,[[["exception"],["self"]],["bool"]]],[11,"eq","riscv::register::mstatus","",20,[[["self"],["xs"]],["bool"]]],[11,"eq","","",21,[[["fs"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["mpp"]],["bool"]]],[11,"eq","","",23,[[["self"],["spp"]],["bool"]]],[11,"eq","riscv::register::misa","",25,[[["mxl"],["self"]],["bool"]]],[11,"eq","riscv::register::mtvec","",28,[[["trapmode"],["self"]],["bool"]]],[11,"eq","riscv::register::mcause","",30,[[["self"],["trap"]],["bool"]]],[11,"ne","","",30,[[["self"],["trap"]],["bool"]]],[11,"eq","","",31,[[["self"],["interrupt"]],["bool"]]],[11,"eq","","",32,[[["self"],["exception"]],["bool"]]],[11,"clone","riscv::register::fcsr","",4,[[["self"]],["fcsr"]]],[11,"clone","","",3,[[["self"]],["flags"]]],[11,"clone","","",1,[[["self"]],["flag"]]],[11,"clone","","",2,[[["self"]],["roundingmode"]]],[11,"clone","riscv::register::sstatus","",7,[[["self"]],["sstatus"]]],[11,"clone","","",5,[[["self"]],["spp"]]],[11,"clone","","",6,[[["self"]],["fs"]]],[11,"clone","riscv::register::sie","",8,[[["self"]],["sie"]]],[11,"clone","riscv::register::stvec","",10,[[["self"]],["stvec"]]],[11,"clone","","",9,[[["self"]],["trapmode"]]],[11,"clone","riscv::register::scause","",14,[[["self"]],["scause"]]],[11,"clone","","",11,[[["self"]],["trap"]]],[11,"clone","","",12,[[["self"]],["interrupt"]]],[11,"clone","","",13,[[["self"]],["exception"]]],[11,"clone","riscv::register::sip","",15,[[["self"]],["sip"]]],[11,"clone","riscv::register::satp","",16,[[["self"]],["satp"]]],[11,"clone","riscv::register::mvendorid","",17,[[["self"]],["mvendorid"]]],[11,"clone","riscv::register::marchid","",18,[[["self"]],["marchid"]]],[11,"clone","riscv::register::mimpid","",19,[[["self"]],["mimpid"]]],[11,"clone","riscv::register::mstatus","",24,[[["self"]],["mstatus"]]],[11,"clone","","",20,[[["self"]],["xs"]]],[11,"clone","","",21,[[["self"]],["fs"]]],[11,"clone","","",22,[[["self"]],["mpp"]]],[11,"clone","","",23,[[["self"]],["spp"]]],[11,"clone","riscv::register::misa","",26,[[["self"]],["misa"]]],[11,"clone","","",25,[[["self"]],["mxl"]]],[11,"clone","riscv::register::mie","",27,[[["self"]],["mie"]]],[11,"clone","riscv::register::mtvec","",29,[[["self"]],["mtvec"]]],[11,"clone","","",28,[[["self"]],["trapmode"]]],[11,"clone","riscv::register::mcause","",33,[[["self"]],["mcause"]]],[11,"clone","","",30,[[["self"]],["trap"]]],[11,"clone","","",31,[[["self"]],["interrupt"]]],[11,"clone","","",32,[[["self"]],["exception"]]],[11,"clone","riscv::register::mip","",34,[[["self"]],["mip"]]],[11,"new","riscv::interrupt","Creates a critical section token",35,[[],["criticalsection"]]],[11,"new","","Creates a new mutex",36,[[["t"]],["mutex"]]],[11,"borrow","","Borrows the data for the duration of the critical section",36,[[["criticalsection"],["self"]],["t"]]]],"p":[[8,"Nr"],[4,"Flag"],[4,"RoundingMode"],[3,"Flags"],[3,"FCSR"],[4,"SPP"],[4,"FS"],[3,"Sstatus"],[3,"Sie"],[4,"TrapMode"],[3,"Stvec"],[4,"Trap"],[4,"Interrupt"],[4,"Exception"],[3,"Scause"],[3,"Sip"],[3,"Satp"],[3,"Mvendorid"],[3,"Marchid"],[3,"Mimpid"],[4,"XS"],[4,"FS"],[4,"MPP"],[4,"SPP"],[3,"Mstatus"],[4,"MXL"],[3,"Misa"],[3,"Mie"],[4,"TrapMode"],[3,"Mtvec"],[4,"Trap"],[4,"Interrupt"],[4,"Exception"],[3,"Mcause"],[3,"Mip"],[3,"CriticalSection"],[3,"Mutex"]]};
searchIndex["vcell"] = {"doc":"Just like [`Cell`] but with [volatile] read / write…","i":[[3,"VolatileCell","vcell","Just like [`Cell`] but with [volatile] read / write…",null,null],[11,"new","","Creates a new `VolatileCell` containing the given value",0,[[["t"]],["self"]]],[11,"get","","Returns a copy of the contained value",0,[[["self"]],["t"]]],[11,"set","","Sets the contained value",0,[[["self"],["t"]]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"VolatileCell"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);